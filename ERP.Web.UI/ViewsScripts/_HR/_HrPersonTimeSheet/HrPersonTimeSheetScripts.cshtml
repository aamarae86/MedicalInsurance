@using ERP.Authorization;
@using ERP.Web.UI.Controllers.HR
@using ERP.ResourcePack.HR
@{
    string permissionsStr = TempData["Permissions"].ToString();
}
@*@if (permissionsStr.Contains(PermissionNames.Pages_HrPersonVacations_Post))
    {
        <script>
            const PostAjax = function (id) {

                bootbox.confirm({
                    message: _booBoxMessagePosting,
                    buttons: bootBoxDefaultBtns,
                    callback: function (result) {

                        if (result) {

                            const data = {
                                id: id,
                                lang: lang
                            };

                            $.ajax({
                                url: `${baseUrl}/HrPersonVacations/PostHrPersonVacations`,
                                type: 'POST',
                                data: JSON.stringify(data),
                                headers:
                                {
                                    'Content-Type': 'application/json',
                                    'Authorization': `Bearer ${$_token}`
                                },
                            }).done(function (response) {

                                if (response.result.finalStatues == 'F') {
                                    toastr.warning(response.result.reason);
                                }
                                else {
                                    toastr.success(response.result.reason);

                                    if (formView) {

                                        setTimeout(function () {
                                            window.location.href = $PrefixHostName + '/HrPersonVacations';
                                        }, 100);

                                    } else {
                                        LoadDataGrid();
                                    }
                                }

                            }).fail(function (response) {
                                toastr.error(response.responseText);
                            });
                        }
                    }
                });
            };
        </script>
    }
    else
    {
        <script>
            const PostAjax = function (id) { };
        </script>
    }*@

<script>

    const _mainController = "HrPersonTimeSheet"
    @*const _newStatus = @Convert.ToInt64(ERP.Front.Helpers.Enums.Common.HrPersonPermissionStatues.New);*@

    $(function () {
        LoadDataGrid();
        $('#tblHrPersonTimeSheetPrint thead').html($('#tblHrPersonTimeSheet thead').html());
        $('#tblHrPersonTimeSheetPrint thead tr :last-child').remove();
        $('#HrPersonTimeSheet').addClass('active');
    });

    const _loadDataUrl = `${$PrefixHostName}/${_mainController}/@nameof(HrPersonTimeSheetController.LoadDataGrid)`;
    const _tblSelector = $('#tblHrPersonTimeSheet');

    const _permissions = '@permissionsStr';
    const _updatePermission = '@PermissionNames.Pages_HrPersonTimeSheet_Update';
    const _deletePermission = '@PermissionNames.Pages_HrPersonTimeSheet_Delete';
    const _postPermission = '@PermissionNames.Pages_HrPersonTimeSheet_Post';

    var OnBegin = function (response) {
      fireBtnLoader();
    };

    var OnSuccess = function (response) {

        if (response.success) {

            if (response.customRestResult.trigger === '@ERP.Front.Helpers.Enums.Common.FormTriggers.Insert') {

                toastr.success(response.customRestResult.message);

                LoadDataGrid();

                _mainModal.modal('hide');

            } else if (response.customRestResult.trigger === '@ERP.Front.Helpers.Enums.Common.FormTriggers.Update') {

                LoadDataGrid();

                _mainModal.modal('hide');

                toastr.success(response.customRestResult.message);
            }

        } else {
            toastr.error(response.customRestResult.message);
        }

    };

    var OnComplete = function (response) {
        downBtnLoader();
    };

    var OnFailure = function (response) {
        toastr.error(response);
        downBtnLoader();
    };

    const LoadDataGrid = function () {

        const parms = {
            TimeSheetNumber: $('#TimeSheetNumberSearch').val(),
            HrPersonId: $('#HrPersonIdSearch').find(':selected').val()
        };

        const columns = [
            {
                "data": "result.data.id",
                'render': function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                "data": "TimeSheetNumber",
                "name": "TimeSheetNumber",
                "autoWidth": true
            }, {
                "data": "TimeSheetDate",
                "name": "TimeSheetDate",
                "autoWidth": true
            },
            {
                "data": null,
                "name": "HrPersonId",
                "autoWidth": true,
                "render": function (data, type, row) {
                    return row.HrPersons.FullName;
                }
            },
            {
                "data": "ProjectName",
                "name": "ProjectName",
                "autoWidth": true
            },
            
            
            {
                "data": "FromTime",
                "name": "FromTime",
                "autoWidth": true
            },
            {
                "data": "EndTime",
                "name": "EndTime",
                "autoWidth": true
            },
            {
                "data": null,
                "name": "TimeSheetTypeId",
                "autoWidth": true,
                "render": function (data, type, row) {
                    return row.TimeSheetType.TimeSheetTypeName;
                }
            },
            {
                "data": null,
                "sortable": false,
                "render": function (data, type, row) {

                    const formAction = `${$PrefixHostName}/${_mainController}/@nameof(HrPersonTimeSheetController.HrPersonTimeSheetForm)`;
                    const DeleteAction = `${$PrefixHostName}/${_mainController}/@nameof(HrPersonTimeSheetController.Delete)`;

                    let formTitle = '@HrPersonVacations.Title', btns = ''

                    if (_permissions.includes(_postPermission) ) {
                        btns += `<a href="javascript:void(0)" onclick="PostAjax(${row.Id})" title="@ERP.ResourcePack.Common.Settings.Post"><i class="mx-2 fas fa-check-circle text-info"></i></a>`;
                    }

                    if (_permissions.includes(_updatePermission) ) {
                        btns += `<a href="javascript:void(0)" onclick="AjaxController.GetFormModal(${row.Id},'@ERP.Front.Helpers.Enums.Common.FormTriggers.Update','${formAction}','${formTitle}');" title="@ERP.ResourcePack.Common.Settings.Edit"><i class="mx-2 fas fa-edit text-info"></i></a>`;
                    }

                    btns += `<a href="javascript:void(0)" onclick="AjaxController.GetFormModal(${row.Id},'@ERP.Front.Helpers.Enums.Common.FormTriggers.Show','${formAction}','${formTitle}');" title="@ERP.ResourcePack.Common.Settings.Show"><i class="mx-2 fas fa-eye text-info"></i></a>`;

                    if (_permissions.includes(_deletePermission) ) {
                        btns += `<a href="javascript:void(0)" onclick="AjaxController.DeleteMainTableRow(${row.Id},'${DeleteAction}');" title="@ERP.ResourcePack.Common.Settings.Delete"><i class="mx-2 fas fa-trash-alt text-danger"></i></a>`;
                    }

                    const _auditedPermission = '@PermissionNames.Pages_HrPersonTimeSheet_Audit';

                    if (_permissions.includes(_auditedPermission)) {

                        row.permission = _auditedPermission;

                        btns += GetAuditedButton(row);
                    }

                    return btns;
                }
            }
        ];

        const dtObj = {
            "processing": true,
            "serverSide": true,
            "filter": false,
            "orderMulti": false,
            "language": dataTableLang,
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": parms,
                "complete": function () {}
            },
            "columns": columns,
            "initComplete": function () {
                $('[data-toggle="tooltip"]').tooltip();
            }
        };

        _tblSelector.dataTable().fnDestroy();
        _tblSelector.DataTable(dtObj).on('draw', function () { $('[data-toggle="tooltip"]').tooltip(); });

    };



   



    $('#HrPersonIdSearch').select2(ReturnSelect2ObjectDefault(`${baseUrl}/HrPersons/GetPersonsSelect2`));
   
  
    //$('#SearchStatusLkpId').select2(ReturnSelect2ObjectForLkpsTypes('@ERP.Front.Helpers.Enums.Common.FndLkpsTypes.HrPersonVacationsStatues.ToString()'));

    function printExc() {
        $('.page-loader-wrapper').show();

        const parmss = {
            OperationNumber: $('#SearchOperationNumber').val(),
            OperationDate: $('#SearchOperationDate').val(),
            HrPersonId: $('#SearchHrPersonId').find(':selected').val(),
            HrVacationsTypeId: $('#SearchHrVacationsTypeId').find(':selected').val(),
            StatusLkpId: $('#SearchStatusLkpId').find(':selected').val(),
            length: 1000000
        };

        const columns = [
            {
                "data": "result.data.id",
                'render': function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                "data": "OperationNumber",
                "name": "OperationNumber",
                "autoWidth": true
            },
            {
                "data": "OperationDate",
                "name": "OperationDate",
                "autoWidth": true
            },
            {
                "data": null,
                "name": "HrPersonId",
                "autoWidth": true,
                "render": function (data, type, row) {
                    return row.HrPersons.FullName;
                }
            },
            {
                "data": "VacationBalance",
                "name": "VacationBalance",
                "autoWidth": true
            },
            {
                "data": null,
                "name": "HrVacationsTypeId",
                "autoWidth": true,
                "render": function (data, type, row) {
                    return row.HrVacationsTypes.VacationsTypeName;
                }
            },
            {
                "data": null,
                "name": "StatusLkpId",
                "autoWidth": true,
                "render": function (data, type, row) {
                    return lang === 'ar-EG' ? row.FndStatusLkp.NameAr : row.FndStatusLkp.NameEn;
                }
            }
        ];

        const dtObj = {
            "language": dataTableLang,
            "dom": 'Bfrtip',
            "buttons": [
                {
                    extend: 'excel',
                    messageTop: `${$('#SearchOperationNumber').siblings().text()}: ${(parmss.OperationNumber) ? parmss.OperationNumber : '--'}, ${$('#SearchOperationDate').siblings().text()}: ${(parmss.OperationDate) ? parmss.OperationDate : '--'}, ${$('[for="HrPersonId"]').text()}: ${(parmss.HrPersonId) ? parmss.HrPersonId : '--'}, ${$('[for="HrVacationsTypeId"]').text()}: ${(parmss.HrVacationsTypeId) ? parmss.HrVacationsTypeId : '--'}, ${$('[for="StatusLkpId"]').text()}: ${(parmss.StatusLkpId) ? parmss.StatusLkpId : '--'}`
                },

            ],
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": parmss,
                "complete": function (d) {
                    _tblLoader.hide();
                }
            },
            "columns": columns,

            "initComplete": function () {
                $('#tblHrPersonVacationsPrint_wrapper button.dt-button').click();
            }
        };

        $('#tblHrPersonTimeSheetPrint').dataTable().fnDestroy();
        $('#tblHrPersonTimeSheetPrint').DataTable(dtObj).on('buttons-processing', function (e, indicator) { if (!indicator) { $('.page-loader-wrapper').hide() } });


    }

</script>
