<script>

    $(function () {

        $('#ContractStartDate').parent('.form-line').addClass('focused');
        $('#TenantAccount').addClass('active');
    });

    $('#PmActivityId').select2({
        ajax: {
            url: `${baseUrl}/ArCustomers/GetArCustomersSelect2`,
            dataType: 'json',
            headers: {
                'Authorization': `Bearer ${$_token}`
            },
            data: function (params) {
                params.page = params.page || 1;
                return {
                    pageSize: pageSize,
                    pageNumber: params.page,
                    searchTerm: params.term,
                    lang: lang
                };
            },
            processResults: function (data, params) {

                params.page = params.page || 1;

                return {
                    results: data.result.results,
                    pagination: {
                        more: (params.page * pageSize) < data.result.total
                    }
                };
            }
        },
        placeholder: select2Placeholder,
        minimumInputLength: 0,
        allowClear: true,
        language: select2Lang,
        templateSelection: function (data, container) {

            if (data.altText)
                $('#ContractStartDate').val(data.altText);

            return data.text;
        }
    });


    const PrintTmCharityBoxListReport = function () {
        if (!$('#FromDate').val()) {
            toastr.warning('From Date is required');
            return;
        }
        if (!$('#ToDate').val()) {
            toastr.warning('To Date is required');
            return;
        }

        $('.page-loader-wrapper').css('display', 'block');

        $.ajax({
            url: `${$PrefixHostName}/ReportsPms/PrintTenantAccount`,
            method: 'POST',
            header: {
                'Authorization':`bearer ${$_token}`
            },
            data: {
                Lang: lang,
                TenantId:@Session["TenantId"],
                CustomerId: $('#PmActivityId').find(':selected').val(),
                Customertxt: $('#PmActivityId').find(':selected').text(),
                FromDate: $('#FromDate').val(),
                ToDate: $('#ToDate').val(),
                CustomerNumber: $('#PmActivityId').find(':selected').val() ? $('#ContractStartDate').val() : '',
                IsNotSettled: ($('#chExecuted').is(":checked")) ? true : false
            }
        }).done(function (data) {

            if (data.length > 0) {

              $('.page-loader-wrapper').css('display', 'none');
                var src = formAction;

              $('#bodyss').html('')
              $('#bodyss').append('<iframe id="ifram1" style="width:100%;height:550px" src="' + src + '"></iframe>')
              $('#model').modal('show');

            }
            else {
                  $('.page-loader-wrapper').css('display', 'none');
                  toastr.warning(NoData);
            }

        }).fail(function (response,x,r) {
            toastr.error(response.responseText);
        });

    };


//amri
    const _mainController = "ReportsPms"
    const _loadDataUrl = `${$PrefixHostName}/${_mainController}/@nameof(ERP.Web.UI.Controllers.PmPropertiesModule.ReportsPmsController.TenantAccountGrid)`;
    const _tblSelector = $('#tblDetails');

     const LoadDataGrid = function () {
        const parms = {

                Lang: lang,
                TenantId:@Session["TenantId"],
                CustomerId: $('#PmActivityId').find(':selected').val(),
                Customertxt: $('#PmActivityId').find(':selected').text(),
                FromDate: $('#FromDate').val(),
                ToDate: $('#ToDate').val(),
                CustomerNumber: $('#PmActivityId').find(':selected').val() ? $('#ContractStartDate').val() : '',
                IsNotSettled: ($('#chExecuted').is(":checked")) ? true : false
        };

        const columns = [

            {
                "data": "DocDate",
                "name": "DocDate",
                "autoWidth": true
            },

            {
                "data": "Source",
                "name": "Source",
                "autoWidth": true
            },

            {
                "data": "Comments",
                "name": "Comments",
                "autoWidth": true
            },
            {

                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return fixNumberFormatting(row.DrAmount);
                }
            },
            {


                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return fixNumberFormatting(row.CrAmount);
                }
            },
            {
                "data": "Balance",
                "name": "Balance",
                "autoWidth": true
            },


        ];

        const dtObj = {
            "processing": true,
            "serverSide": true,
            "filter": false,
            "pageLength":1000,
            "orderMulti": false,
            "language": dataTableLang,
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": parms,
                "complete": function () { }
            },
            "columns": columns,
            "initComplete": function () {
                $('[data-toggle="tooltip"]').tooltip();
            }

        };

        _tblSelector.dataTable().fnDestroy();
        _tblSelector.DataTable(dtObj).on('draw', function () { $('[data-toggle="tooltip"]').tooltip(); });


    };



    function printExc() {
        $('.page-loader-wrapper').show();
        $('#tblDetails').parent().addClass('d-none');
        const parmss = {
            VendorId: $('#VendorId').val(),
            IsNotSettled: $('#IsNotSettled').val(),
            FromDate: $('#fromDate').val(),
            ToDate: $('#toDate').val(),
            length: 1000000
        };


        const columns = [

            {
                "data": "DocDate",
                "name": "DocDate",
                "autoWidth": true
            },
            {
                "data": "Source",
                "name": "Source",
                "autoWidth": true
            },
            {
                "data": "Comments",
                "name": "Comments",
                "autoWidth": true
            },
            {

                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return fixNumberFormatting(row.DrAmount);
                }
            },
            {


                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return fixNumberFormatting(row.CrAmount);
                }
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return fixNumberFormatting(row.Balance);
                }
            }


        ];

        const dtObj = {
            "language": dataTableLang,
            "dom": 'Bfrtip',
            "buttons": [
                {
                    extend: 'excel',
                    messageTop: `${$('[for="IvItemsTypesConfigureId"]').text()}: ${(parmss.IvItemsTypesConfigureId) ? parmss.IvItemsTypesConfigureId : '--'}, ${$('[for="IvUnitId"]').text()}: ${(parmss.IvUnitId) ? parmss.IvUnitId : '--'}`
                },

            ],
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": parmss,
                "complete": function (d) {
                    //_tblLoader.hide();
                    $('.page-loader-wrapper').hide()
                }
            },
            "columns": columns,

            "initComplete": function () {
                $('#tblDetailsPrint button.dt-button').click();
                $('#tblDetailsPrint').parent().addClass('d-none');

            }
        };

        _tblSelector.dataTable().fnDestroy();
        _tblSelector.DataTable(dtObj).on('buttons-processing', function (e, indicator) { if (!indicator) { $('.page-loader-wrapper').hide() } });


    }






</script>