@using ERP.ResourcePack.AidModule
@using ERP.Web.UI.Controllers.AidModule
@using ERP.Authorization;
@{
    string permissionsStr = TempData["Permissions"].ToString();
    string encUpdateTrigger = ERP.Front.Helpers.Enums.Common.EncUpdate;
    string encInsertTrigger = ERP.Front.Helpers.Enums.Common.EncInsert;
    string encShowTrigger = ERP.Front.Helpers.Enums.Common.EncShow;
}

@if (permissionsStr.Contains(PermissionNames.Pages_ScCommitteesCheck_Post))
{
    <script>

        const PostAjax = function (id) {

            bootbox.confirm({
                message: _booBoxMessagePosting,
                buttons: bootBoxDefaultBtns,
                callback: function (result) {

                    if (result) {

                        const data = {
                            id: id,
                            lang: lang
                        };

                        $.ajax({
                            url: `${baseUrl}/ScCommitteesCheck/PostScCommitteesCheck`,
                            type: 'POST',
                            data: JSON.stringify(data),
                            headers:
                            {
                                'Content-Type': 'application/json',
                                'Authorization': `Bearer ${$_token}`
                            },
                        }).done(function (response) {

                            if (response.result.finalStatues == 'F') {
                                toastr.warning(response.result.reason);
                            }
                            else {

                                if (formView) {

                                    setTimeout(function () {
                                        window.location.href = $PrefixHostName + '/ScCommitteesCheck';
                                    }, 100);

                                } else {
                                    LoadDataGrid();
                                }

                            }

                        }).fail(function (response) {

                            toastr.error(response.responseText);

                        });
                    }

                }
            });

        };

    </script>
}
else
{
    <script>
        const PostAjax = function (id) { };
    </script>
}

<script>
    const _mainController = "ScCommitteesCheck"

    $(function () {

        LoadDataGrid();

        $('#ScCommitteesCheck').addClass('active');

        $('#FromCheckNumber').prop('type','number')
        $('#FromCheckNumber').prop('min', 0)

    });

    const _loadDataUrl = `${$PrefixHostName}/${_mainController}/@nameof(ScCommitteesCheckController.LoadDataGrid)`;
    const _tblSelector = $('#tblScCommitteesCheck');
    const _tblLoader = $('#tblLoader');

    const _permissions = '@permissionsStr';
    const _updatePermission = '@PermissionNames.Pages_ScCommitteesCheck_Update';
    const _deletePermission = '@PermissionNames.Pages_ScCommitteesCheck_Delete';
    const _postPermission = '@PermissionNames.Pages_ScCommitteesCheck_Post';

    const _postStatus = @Convert.ToInt64(ERP.Front.Helpers.Enums.Common.ScCommitteesCheckStatues.Posted);

    var OnBegin = function (response) {
        fireBtnLoader();
    };

    var OnSuccess = function (response) {

        $('#btnSubmition').prop('disabled', false);

        if (response.success) {

            if (response.customRestResult.trigger === '@ERP.Front.Helpers.Enums.Common.FormTriggers.Insert') {

                toastr.success(response.customRestResult.message);

                setTimeout(function () {
                    window.location.href = $PrefixHostName + '/ScCommitteesCheck';
                }, 200);

            }
            else if (response.customRestResult.trigger === '@ERP.Front.Helpers.Enums.Common.FormTriggers.Update') {

                toastr.success(response.customRestResult.message);

                setTimeout(function () {
                    window.location.href = $PrefixHostName + '/ScCommitteesCheck';
                }, 200);

            }
            else {
                toastr.error(response.customRestResult.message);
            }

        } else {
                toastr.error(response.error.message);
        }

    };

    var OnComplete = function (response) {
        downBtnLoader();
    };

    var OnFailure = function (response) {
        toastr.error(response);
        downBtnLoader();
    };

    const LoadDataGrid = function () {

        $('#tblLoader').show();

        const params = {
            OperationNumber: $('#searchBox #OperationNumber').val(),
            OperationDate: $('#searchBox #OperationDate').val(),
            StatusLkpId: $('#searchBox #StatusLkpId').find(':selected').val(),
            CommitteeId: $('#searchBox #CommitteeId').find(':selected').val(),
            Notes: $('#searchBox #Notes').val()
        };

        const columns = [
            {
                "data": "result.data.id",
                'render': function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                "data": "OperationNumber",
                "name": "OperationNumber",
                "autoWidth": true
            },
             {
                "data": "OperationDate",
                "name": "OperationDate",
                "autoWidth": true
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    if (row.ScCommittee == null)   return '';

                    return lang === 'ar-EG' ? row.ScCommittee.CommitteeName : row.ScCommittee.CommitteeName;
                }
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    if (row.FndLookupValues == null)   return '';

                    return lang === 'ar-EG' ? row.FndLookupValues.NameAr : row.FndLookupValues.NameEn;
                }
            },
            {
                "data": null,
                "sortable": false,
                "render": function (data, type, row) {

                    let formAction = `${$PrefixHostName}/${_mainController}/@nameof(ScCommitteesCheckController.ScCommitteesCheckForm)`;
                    let DeleteAction = `${$PrefixHostName}/${_mainController}/@nameof(ScCommitteesCheckController.Delete)`;

                    let formTitle = '@ERP.ResourcePack.Accounts.ArCustomers.ScCommitteesCheck';
                    let btns = '';

                    if (_permissions.includes(_postPermission) & row.StatusLkpId != _postStatus) {
                         btns += `<a href="javascript:void(0)" onclick="PostAjax(${row.Id})" title="@ERP.ResourcePack.Common.Settings.Post"><i class="mx-2 fas fa-check-circle text-info"></i></a>`;
                    }

                    if (_permissions.includes(_updatePermission) && row.StatusLkpId != _postStatus) {
                        btns += `<a href="${$PrefixHostName}/ScCommitteesCheck/FormView?id=${row.EncId}&t=@encUpdateTrigger" title="@ERP.ResourcePack.Common.Settings.Edit"><i class="mx-2 fas fa-edit text-info"></i></a>`;
                    }

                    btns += `<a href="${$PrefixHostName}/ScCommitteesCheck/FormView?id=${row.EncId}&t=@encShowTrigger" title="@ERP.ResourcePack.Common.Settings.Show"><i class="mx-2 fas fa-eye text-info"></i></a>`;

                    if (_permissions.includes(_deletePermission) && row.StatusLkpId != _postStatus)
                    {
                        btns += `<a href="javascript:void(0)" onclick="AjaxController.DeleteMainTableRow(${row.Id},'${DeleteAction}');" title="@ERP.ResourcePack.Common.Settings.Delete"><i class="mx-2 fas fa-trash-alt text-danger"></i></a>`;
                    }

                    const _auditedPermission = '@PermissionNames.Pages_ScCommitteesCheck_Audit';

                    if (_permissions.includes(_auditedPermission)) {

                        row.permission = _auditedPermission;

                        btns += GetAuditedButton(row);
                    }

                    return btns;
                }
            }
        ];

        const dtObj = {
            "processing": true,
            "serverSide": true,
            "filter": false,
            "orderMulti": false,
            "language": dataTableLang,
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": params,
                "complete": function () {
                      _tblLoader.hide();
                }
            },
            "columns": columns,
            "initComplete": function () {
                $('[data-toggle="tooltip"]').tooltip();
            }

        };

        _tblSelector.dataTable().fnDestroy();
        _tblSelector.DataTable(dtObj).on('draw', function () { $('[data-toggle="tooltip"]').tooltip(); });

        setTimeout(function () {
            $(".sorting_1").removeAttr('colspan');
        }, 500);
    };

    $('#btnSubmition').on('click', function () {

        if ($('#mainForm').valid()) {

            $(this).prop('disabled', true);

            $('#submitLoader').show();

            $('#mainForm').submit();

        } else {
            $(this).prop('disabled', false);

            $('#submitLoader').hide();
        }

    });

    $('#searchBox #StatusLkpId').select2(ReturnSelect2ObjectForLkpsTypes('@ERP.Front.Helpers.Enums.Common.FndLkpsTypes.ScCommitteesCheckStatues.ToString()'));
    $('#CommitteeId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/ScCommittee/GetScCommitteeForChecksSelect2`));
    $('#BankAccountId').select2(
        ReturnSelect2ObjectCustomParams(`${baseUrl}/ApBankAccounts/GetUserAccessedApBankAccountsSelect2`,
            { bankLkpId:@Convert.ToInt64(ERP.Front.Helpers.Enums.Common.FndBankLkpsTypes.Bank)}));

</script>

<script>

    const LoadData = function () {

        if ($('#MaturityDate').val()) {

            requestCommitteeData($('#CommitteeId').find(':selected').val(), $('#MaturityDate').val());

        } else {
            toastr.warning('@ScCommitteesCheck.MaturityDate : @ERP.ResourcePack.Common.Settings.Required');
        }

    };

    const requestCommitteeData = function (id, maturityDate) {

        $('.page-loader-wrapper').css("display", "block");

        $.ajax({
            url: `${baseUrl}/ScCommitteesCheck/GetCommitteeRequestData`,
            method: 'GET',
            data: {
                committeeId: id,
                maturityDate: maturityDate
            },
            headers: {  'Authorization': `Bearer ${$_token}` }
        }).done(function (response) {

            const data = response.result;

            if (!primaryEntityKeyId) {
                _ScCommitteesCheckDetail = [];
            }

            if (data.length === 0) {
                _listScCommitteesCheckDetail.val('');
                _ScCommitteesCheckDetail = [];
                bindScCommitteesCheckDetailTable();
            }

            $.each(data, function (i, item) {

                 const current = {
                     index: ++tblCounterIndex,
                     idNumber: item.idNumber,
                     name: item.name,
                     cashingTo: item.cashingTo,
                     aidAmount: item.aidAmount,
                     committeeDetailsId: item.committeeDetailsId,
                     scPortalRequestMgrDecisionId: item.scPortalRequestMgrDecisionId,
                     checkNumber: '',
                     rowStatus:  NewStatus,
                     id: 0
                 };

                AddScCommitteesCheckDetail(current);

            });

            $('.page-loader-wrapper').css("display", "none");

        }).fail(function (response) {
            $('.page-loader-wrapper').css("display", "none");
            toastr.error(response.responseText);
        });

    };

    const CheckNumeric = function () {

        if ($('#FromCheckNumber').val()) {

            const currentNo = $('#FromCheckNumber').val();

            _ScCommitteesCheckDetail.forEach(function (item, i, arr) {

                let current = item.checkNumber ? item.checkNumber : currentNo;

                console.log(current);

                item.checkNumber = i + parseFloat(currentNo); //(i === 0 ? parseFloat(currentNo) : parseFloat(current) + arr[i - 1]);
                item.rowStatus = primaryEntityKeyId ? UpdatedStatus : item.rowStatus;

            },_ScCommitteesCheckDetail);

            _listScCommitteesCheckDetail.val(JSON.stringify(_ScCommitteesCheckDetail));

            bindScCommitteesCheckDetailTable();
        }

    };

</script>

<script>
    let _ScCommitteesCheckDetail = [], updatedRow, tblCounterIndex = 0 ;

    const _tblScCommitteesCheckDetailSelector = $('#tblScCommitteesCheckDetail');
    const _listScCommitteesCheckDetail = $('#ListScCommitteesCheckDetails');

    const AddScCommitteesCheckDetail = function (current) {

        if (current === undefined) return;

            _ScCommitteesCheckDetail.push(current);

            _listScCommitteesCheckDetail.val(JSON.stringify(_ScCommitteesCheckDetail));

            bindScCommitteesCheckDetailTable();

    };

    const bindScCommitteesCheckDetailTable = function () {

        const detailArr = _ScCommitteesCheckDetail.filter(z => z.rowStatus !== DeletedStatus);

        const columns = [
                { 'data': 'index'  },
                { 'data': 'idNumber'  },
                { 'data': 'name'  },
                { 'data': 'cashingTo'  },
                { 'data': 'aidAmount'  },
                { 'data': 'checkNumber'  },
                {
                    'data': null,
                    'searchable': false,
                    'ordering': false,
                    'sorting':false,
                    'render': function (d, t, row) {

                        let rows = '';

                        if (primaryEntityKeyId === 0 || trigger !== '@ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString()') {

                            rows += `<td><a href="javascript:void(0)" onclick="return DeleteScCommitteesCheckDetail(${row.index})"><i class="mx-2 fas fa-trash-alt text-danger"></i></a></td>`;
                        }
                        else {
                            rows += '<td></td>';
                        }

                        return rows;
                    }
                }
        ];

        const dtObj = {
                data: detailArr,
                retrieve: true,
                language: dataTableLang,
                columns: columns,
                drawCallback: function (c,v,b) {

                    setTimeout(function () {
                        let sum = 0;

                        detailArr.map(z => sum += z.aidAmount);

                        let rows = '';

                        rows += '<tr>';
                        rows += `<th><strong>@ScCommitteesCheck.Total</strong> :</th><th></th><th></th><th></th><th>${sum}</th>`;
                        rows += '</tr>';

                        $('#tblScCommitteesCheckDetail tfoot').html(rows);

                    }, 50);

                }
        };

        setTimeout(function () {

            _tblScCommitteesCheckDetailSelector.dataTable().fnDestroy();
            _tblScCommitteesCheckDetailSelector.DataTable(dtObj).on('draw', function () { $('[data-toggle="tooltip"]').tooltip(); });

        }, 100);

    };

    const DeleteScCommitteesCheckDetail = function (index)  {

        const current = _ScCommitteesCheckDetail.find(z => z.index === index);

        const indexOfCurrent = _ScCommitteesCheckDetail.indexOf(current);

        if (!current.id) {

           _ScCommitteesCheckDetail.splice(indexOfCurrent, 1);

        } else {

            current.rowStatus = DeletedStatus;

           _ScCommitteesCheckDetail.splice(indexOfCurrent, 1,current);
        }

        bindScCommitteesCheckDetailTable();

        _listScCommitteesCheckDetail.val(_ScCommitteesCheckDetail.length === 0 ? '' : JSON.stringify(_ScCommitteesCheckDetail));

    };

    const LoadScCommitteesCheckDetailData = function () {

        $.ajax({
            url: `${baseUrl}/ScCommitteesCheck/GetCommitteeCheckDetail`,
            method: 'GET',
            headers: { 'Authorization': `Bearer ${$_token}`  },
            data: {  committeeCheckId: primaryEntityKeyId    }
        }).done(function (data) {

            $.each(data.result, function (i, item) {

                tblCounterIndex = 0;

                 const current = {
                     index: ++tblCounterIndex,
                     idNumber: item.idNumber,
                     name: item.name,
                     cashingTo: item.cashingTo,
                     aidAmount: item.aidAmount,
                     committeeDetailsId: item.committeeDetailsId,
                     scPortalRequestMgrDecisionId: item.scPortalRequestMgrDecisionId,
                     checkNumber: item.checkNumber,
                     rowStatus: item.rowStatus,
                     id: item.id
                 };

                AddScCommitteesCheckDetail(current);

            });

        });

    };

</script>