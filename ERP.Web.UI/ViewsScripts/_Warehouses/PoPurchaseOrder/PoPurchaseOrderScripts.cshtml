@using ERP.ResourcePack.Warehouses
@using ERP.Web.UI.Controllers.Warehouses
@using ERP.Web.UI.Models.ViewModels.Warehouses
@using ERP.Authorization;
@{
    string encUpdateTrigger = ERP.Front.Helpers.Enums.Common.EncUpdate;
    string encShowTrigger = ERP.Front.Helpers.Enums.Common.EncShow;
    string permissionsStr = TempData["Permissions"].ToString();
}
@if (permissionsStr.Contains(PermissionNames.Pages_PoPurchaseOrder_Post))
{
    <script>
        const PostAjax = function (id) {

            bootbox.confirm({
                message: _booBoxMessagePosting,
                buttons: bootBoxDefaultBtns,
                callback: function (result) {

                    if (result) {

                        const data = {
                            id: id,
                            lang: lang,
                            userId: 0
                        };

                        $.ajax({
                            url: `${baseUrl}/PoPurchaseOrder/PostPoPurchaseOrder`,
                            type: 'POST',
                            data: JSON.stringify(data),
                            headers:
                            {
                                'Content-Type': 'application/json',
                                'Authorization': `Bearer ${$_token}`
                            },
                        }).done(function (response) {

                            if (response.result.finalStatues == 'F') {
                                toastr.warning(response.result.reason);
                            }
                            else {
                                toastr.success(response.result.reason);

                                if (formView) {

                                    setTimeout(function () {
                                        window.location.href = $PrefixHostName + '/PoPurchaseOrder';
                                    }, 100);

                                } else {
                                    LoadDataGrid();
                                }
                            }

                        }).fail(function (response) {
                            toastr.error(response.responseText);
                        });

                    }

                }
            });


        };
    </script>
}
else
{
    <script>
        const PostAjax = function (id) { };
    </script>
}
<script>
    const _mainController = "PoPurchaseOrder"

    $(function () {
        LoadDataGrid();
        $('#tblPoPurchaseOrderPrint thead').html($('#tblPoPurchaseOrder thead').html());
        $('#tblPoPurchaseOrderPrint thead tr :last-child').remove();
        $('#PoPurchaseOrder').addClass('active');

        $('#Total').parent('.form-line').addClass('focused');

    });

    const _loadDataUrl = `${$PrefixHostName}/${_mainController}/@nameof(PoPurchaseOrderController.LoadDataGrid)`;
    const _tblSelector = $('#tblPoPurchaseOrder');
    const _tblLoader = $('#tblLoader');
    const _mainForm = $('#mainForm');

    const _permissions = '@permissionsStr';
    const _updatePermission = '@PermissionNames.Pages_PoPurchaseOrder_Update';
    const _postPermission = '@PermissionNames.Pages_PoPurchaseOrder_Post';
    const _deletePermission = '@PermissionNames.Pages_PoPurchaseOrder_Delete';

    let tblHeadersAdded = false;

    $('#btnSubmition').on('click', function () {

        _mainForm.submit();

        if (_mainForm.valid()) {

            $(this).hide();
            $('#submitLoader').show();

        } else {

            $(this).show();
            $('#submitLoader').hide();
        }

    });

    var OnBegin = function (response) {
        fireBtnLoader();
    };

    var OnSuccess = function (response) {

        if (response.success) {

            if (response.customRestResult.trigger === '@ERP.Front.Helpers.Enums.Common.FormTriggers.Insert') {

                toastr.success(response.customRestResult.message);

                setTimeout(function () {
                    window.location.href = $PrefixHostName + '/PoPurchaseOrder';
                }, 200);

            } else if (response.customRestResult.trigger === '@ERP.Front.Helpers.Enums.Common.FormTriggers.Update') {

                toastr.success(response.customRestResult.message);

                setTimeout(function () {
                    window.location.href = $PrefixHostName + '/PoPurchaseOrder';
                }, 200);
            }

        } else {
            toastr.error(response.customRestResult.message);
        }

    };

    var OnComplete = function (response) {
        downBtnLoader();
    };

    var OnFailure = function (response) {
        toastr.error(response);
        console.log(response);
        downBtnLoader();
    };

    const LoadDataGrid = function () {
        $('#tblLoader').show();

        const parms = {
            IvWarehouseId: $('#Search_IvWarehouseId').find(':selected').val(),
            VendorId: $('#Search_VendorId').find(':selected').val(),
            StatusId: $('#Search_StatusId').find(':selected').val(),
            OrderNumber:$('#Search_OrderNumber').val(),
            PurchaseOrderDate: $('#Search_PurchaseOrderDate').val()
        };

        const columns = [
            {
                "data": "result.data.id",
                'render': function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                "data": "PurchaseOrderNumber",
                "name": "PurchaseOrderNumber",
                "autoWidth": true
            },
            {
                "data": "PurchaseOrderDate",
                "name": "PurchaseOrderDate",
                "autoWidth": true
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return row.IvWarehouseName;
                },
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {

                    if (row.VendorNameAr == null &&row.VendorNameEn == null )
                        return '';

                    if (lang === 'ar-EG')
                        return row.VendorNameAr;

                    return row.VendorNameEn;
                },
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {

                    if (row.StatusAr == null &&row.StatusEn == null )
                        return '';

                    if (lang === 'ar-EG')
                        return row.StatusAr;

                    return row.StatusEn;
                },
            },
            {
                "data": null,
                "sortable": false,
                "render": function (data, type, row) {

                    let formAction = `${$PrefixHostName}/${_mainController}/@nameof(PoPurchaseOrderController.PoPurchaseOrderForm)`;
                    let DeleteAction = `${$PrefixHostName}/${_mainController}/@nameof(PoPurchaseOrderController.Delete)`;

                    let btns = '';

                    if (_permissions.includes(_postPermission) && row.StatusLkpId == 739) {
                        btns += `<a href="javascript:void(0)" onclick="PostAjax(${row.Id})" title="@ERP.ResourcePack.Common.Settings.Post"><i class="mx-2 fas fa-check-circle text-info"></i></a>`;
                    }

                    if (_permissions.includes(_updatePermission) && row.StatusLkpId == 739) {
                        btns += `<a href="${$PrefixHostName}/PoPurchaseOrder/FormView?id=${row.EncId}&t=@encUpdateTrigger" title="@ERP.ResourcePack.Common.Settings.Edit"><i class="mx-2 fas fa-edit text-info"></i></a>`;
                    }

                    btns += `<a href="${$PrefixHostName}/PoPurchaseOrder/FormView?id=${row.EncId}&t=@encShowTrigger" title="@ERP.ResourcePack.Common.Settings.Show"><i class="mx-2 fas fa-eye text-info"></i></a>`;

                    if (_permissions.includes(_deletePermission) && row.StatusLkpId == 739) {
                        btns += `<a href="javascript:void(0)" onclick="AjaxController.DeleteMainTableRow(${row.Id},'${DeleteAction}');" title="@ERP.ResourcePack.Common.Settings.Delete"><i class="mx-2 fas fa-trash-alt text-danger"></i></a>`;
                    }

                    btns += `<a href="javascript:void(0);" onclick="return print('${$PrefixHostName}/PoPurchaseOrder/PrintPoPurchaseOrderScreen','${row.EncId}','${lang}')" title="@ERP.ResourcePack.Common.Settings.Print"><i class="mx-2 fas fa-print text-success"></i></a>`;

                    const _auditedPermission = '@PermissionNames.Pages_PoPurchaseOrder_Audit';

                    if (_permissions.includes(_auditedPermission)) {

                        row.permission = _auditedPermission;

                        btns += GetAuditedButton(row);
                    }

                    return btns;
                }
            }
        ];

        const dtObj = {
            "processing": true,
            "serverSide": true,
            "filter": false,
            "orderMulti": false,
            "language": dataTableLang,
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": parms,
                "complete": function () {
                    _tblLoader.hide();
                }
            },
            "columns": columns,
            "initComplete": function () {
                $('[data-toggle="tooltip"]').tooltip();
            }

        };

        _tblSelector.dataTable().fnDestroy();
        _tblSelector.DataTable(dtObj).on('draw', function () { $('[data-toggle="tooltip"]').tooltip(); });

        setTimeout(function () {
            $(".sorting_1").removeAttr('colspan');
        }, 500);
    };

    $('#@nameof(PoPurchaseOrderVM.Search_IvWarehouseId)').select2(ReturnSelect2ObjectDefault(`${baseUrl}/IvWarehouses/GetIvWarehousesSelect2`));
    $('#@nameof(PoPurchaseOrderVM.Search_VendorId)').select2(ReturnSelect2ObjectDefault(`${baseUrl}/ApVendors/GetVendorsSelect2`));
    $('#@nameof(PoPurchaseOrderVM.Search_StatusId)').select2(ReturnSelect2ObjectForLkpsTypes('@ERP.Front.Helpers.Enums.Common.FndLkpsTypes.PoPurchaseOrderHdStatues.ToString()'));

    $('#@nameof(PoPurchaseOrderVM.IvWarehouseId)').select2(ReturnSelect2ObjectDefault(`${baseUrl}/IvWarehouses/GetIvWarehousesSelect2`));
    $('#@nameof(PoPurchaseOrderVM.VendorId)').select2(ReturnSelect2ObjectDefault(`${baseUrl}/ApVendors/GetVendorsSelect2`));

    const print = function (url,id,lang) {
        const data = { id: id, lang : lang };
        openModal(data, url);
    };

    $('#QtyOrdered').on('change keyup', function (e) {  calcTotalAmount(); });
    $('#UnitPrice').on('change keyup', function (e) { calcTotalAmount(); });

    const calcTotalAmount = function () {
        $('#Total').val(+$('#QtyOrdered').val() * +$('#UnitPrice').val());

        return $('#Total').val();
    };

</script>

<script>

    const _tblPoPurchaseOrderDetailSelector = $('#tblPoPurchaseOrderDetail');
    const _listPoPurchaseOrderDetail = $('#ListPoPurchaseOrderDetails');

    let _PoPurchaseOrderDetailArr = [], tblLinesCounterIndex = 0 , updatedRow;

    const fillPoPurchaseOrderDetail = function () {
        if (validator() === false) return;

        const current = {
            index: ++tblLinesCounterIndex,
            ivItemId: $('#IvItemId').find(':selected').val(),
            ivItemName: $('#IvItemId').find(':selected').text(),
            ivItemNumber: $('#IvItemNumber').val(),
            qtyOrdered: $('#QtyOrdered').val(),
            unitPrice: $('#UnitPrice').val(),
            total: $('#Total').val(),
            receivedQty: 0,
            rowStatus: NewStatus,
            poPurchaseOrderId: primaryEntityKeyId,
            id:0
        };

        current.total = current.unitPrice * current.qtyOrdered;

        return current;
    };

    const AddPoPurchaseOrderDetail = function () {
        let detail = fillPoPurchaseOrderDetail();

        if (detail === undefined) return;

        if (_PoPurchaseOrderDetailArr.find(item => item.ivItemId == $('#IvItemId').find(':selected').val())) {
            toastr.warning('@IvItems.ItemExists');
            return;
        }

        _PoPurchaseOrderDetailArr.push(detail);

        _listPoPurchaseOrderDetail.val(JSON.stringify(_PoPurchaseOrderDetailArr));

        bindPoPurchaseOrderDetailTable();

        clearFormAdding();
    };

    const UpdatePoPurchaseOrderDetailRow = function () {
        let current = _PoPurchaseOrderDetailArr.find(z => z.index === updatedRow.index);

        let indexOfCurrent = _PoPurchaseOrderDetailArr.indexOf(current);

        const newRow = fillPoPurchaseOrderDetail();

        if (newRow === undefined) return;

        if (_PoPurchaseOrderDetailArr.find(item => item.ivItemId == $('#IvItemId').find(':selected').val() && item.index != updatedRow.index)) {
            toastr.warning('@IvItems.ItemExists');
            return ;
        }

        newRow.id = updatedRow.id;
        newRow.PoPurchaseOrderDetailtatusLkpId = updatedRow.PoPurchaseOrderDetailtatusLkpId;
        newRow.pmOwnerId = updatedRow.pmOwnerId;
        newRow.rowStatus = !updatedRow.id ? NewStatus : UpdatedStatus;

        _PoPurchaseOrderDetailArr.splice(indexOfCurrent, 1,newRow);

        $('#btnAddPoPurchaseOrderDetailRow').show();
        $('#btnUpdatePoPurchaseOrderDetailRow').hide();
        $('#btnCancelPoPurchaseOrderDetailRow').hide();

        clearFormAdding();

        _listPoPurchaseOrderDetail.val(JSON.stringify(_PoPurchaseOrderDetailArr));

        bindPoPurchaseOrderDetailTable();

    };

    const CancelEditPoPurchaseOrderDetailRow = function () {
        clearFormAdding();

        $('#btnCancelPoPurchaseOrderDetailRow').hide();
        $('#btnUpdatePoPurchaseOrderDetailRow').hide();
        $('#btnAddPoPurchaseOrderDetailRow').show();
    };

    const bindPoPurchaseOrderDetailTable = function () {
        const detailArr = _PoPurchaseOrderDetailArr.filter(z => z.rowStatus !== DeletedStatus);

        const columns = [
            { 'data': 'index' },
            { 'data': 'ivItemNumber' },
            { 'data': 'ivItemName' },
            { 'data': 'qtyOrdered' },
            {
                'data': 'unitPrice',
                "render": $.fn.dataTable.render.number(',', '.', 2)
            },
            {
                'data': 'total',
                "render": $.fn.dataTable.render.number(',', '.', 2)
            },
            { 'data': 'receivedQty' },
            {
                'data': null,
                'searchable': false,
                'ordering': false,
                'sorting': false,
                'render': function (d, t, row) {

                    let rows = '';
                    if (primaryEntityKeyId === 0 || trigger !== '@ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString()') {
                        rows += `<td><a href="javascript:void(0)" onclick="return DeleteRowLine(${row.index})"><i class="mx-2 fas fa-trash-alt text-danger"></i></a>`;
                        rows += `<a href="javascript:void(0)" onclick="return GetRow(${row.index})"><i class="mx-2 fas fa-edit text-success"></i></a></td>`;
                    } else {
                        rows += '<td></td>';
                    }

                    return rows;
                }
            }
        ];

        const dtObj = {
            data: detailArr,
            retrieve: true,
            language: dataTableLang,
            columns: columns,
            drawCallback: function (c, v, b) {

                setTimeout(function () {

                }, 50);

            }
        };

        setTimeout(function () {

            _tblPoPurchaseOrderDetailSelector.dataTable().fnDestroy();
            _tblPoPurchaseOrderDetailSelector.DataTable(dtObj).on('draw', function () { $('[data-toggle="tooltip"]').tooltip(); });

        }, 100);

    };

    const DeleteRowLine = function (index) {
        const current = _PoPurchaseOrderDetailArr.find(z => z.index === index);

        const indexOfCurrent = _PoPurchaseOrderDetailArr.indexOf(current);

        if (current.id === undefined || current.id == null || current.id == 0) {

           _PoPurchaseOrderDetailArr.splice(indexOfCurrent, 1);

        } else {

            current.rowStatus = DeletedStatus;

           _PoPurchaseOrderDetailArr.splice(indexOfCurrent, 1,current);
        }

        bindPoPurchaseOrderDetailTable();

        _listPoPurchaseOrderDetail.val(_PoPurchaseOrderDetailArr.length === 0 ? '' : JSON.stringify(_PoPurchaseOrderDetailArr));
    };

    const LoadPoPurchaseOrderDetailData = function () {
        $('#tblLoaderLine').show();

        $.ajax({
            url: `${baseUrl}/PoPurchaseOrder/GetDetailAsync`,
            method: 'GET',
            headers: {  'Authorization': `Bearer ${$_token}`  },
            data: { id: primaryEntityKeyId }
        }).done(function (data) {

            _PoPurchaseOrderDetailArr = [...data.result.poPurchaseOrderTrs];

            tblLinesCounterIndex = 0;

            $.each(_PoPurchaseOrderDetailArr, function (i, item) {
                item.index = ++tblLinesCounterIndex;
                item.id = item.id;
                item.rowStatus = NoActionStatus;
                item.total = item.qtyOrdered * item.unitPrice;
            });

            bindPoPurchaseOrderDetailTable();

            _listPoPurchaseOrderDetail.val(JSON.stringify(_PoPurchaseOrderDetailArr));

            $('#tblLoaderLine').hide();
        });

    };

    $('#@nameof(PoPurchaseOrderVM.IvItemId)').select2(ReturnSelect2ObjectDefault(`${baseUrl}/IvItems/GetSelect2`));
    $('#@nameof(PoPurchaseOrderVM.IvItemId)').on('select2:select', function (e) {
        $('#@nameof(PoPurchaseOrderVM.IvItemNumber)').val(e.params.data.altText);
        $('#@nameof(PoPurchaseOrderVM.IvItemNumber)').parent('.form-line').addClass('focused');
    });

    const GetRow = function (tblIndex) {
        clearFormAdding();

        $('#btnAddPoPurchaseOrderDetailRow').hide();
        $('#btnUpdatePoPurchaseOrderDetailRow').show();
        $('#btnCancelPoPurchaseOrderDetailRow').show();

        const current = _PoPurchaseOrderDetailArr.find(z => z.index === tblIndex);

        let option = new Option(current.ivItemName, current.ivItemId, true, true);

        $(`#@nameof(PoPurchaseOrderVM.IvItemId)`).append(option).trigger('change');

        $('#@nameof(PoPurchaseOrderVM.IvItemNumber)').val(current.ivItemNumber);
        $('#@nameof(PoPurchaseOrderVM.IvItemNumber)').parent('.form-line').addClass('focused');

        $('#@nameof(PoPurchaseOrderVM.QtyOrdered)').val(current.qtyOrdered);
        $('#@nameof(PoPurchaseOrderVM.QtyOrdered)').parent('.form-line').addClass('focused');

        $('#@nameof(PoPurchaseOrderVM.UnitPrice)').val(current.unitPrice);
        $('#@nameof(PoPurchaseOrderVM.UnitPrice)').parent('.form-line').addClass('focused');

        $('#@nameof(PoPurchaseOrderVM.Total)').val(current.total);
        $('#@nameof(PoPurchaseOrderVM.Total)').parent('.form-line').addClass('focused');

        updatedRow = current;
    };

    const clearFormAdding = function () {
        $('#formAdding select').val('').trigger('change');
        $('#formAdding input').val('');
        $('#formAdding textarea').val('');
    };

    const validator = function () {

        if (!$('#IvItemId').find(':selected').val()) {
            toastr.warning('@IvReceiveHd.IvItemId' + ' : ' + '@ERP.ResourcePack.Common.Settings.Required');
            return false;
        }

        if (!$('#QtyOrdered').val()) {
            toastr.warning('@PoPurchaseOrder.QtyOrdered' + ' : ' + '@ERP.ResourcePack.Common.Settings.Required');
            return false;
        }

        if (!$('#UnitPrice').val()) {
            toastr.warning('@IvReceiveHd.UnitPrice' + ' : ' + '@ERP.ResourcePack.Common.Settings.Required');
            return false;
        }
        return true;
    };

    function printExc() {
        $('.page-loader-wrapper').show();
        $('#tblPoPurchaseOrderPrint_wrapper').parent().addClass('d-none');
        const parmss = {
            IvWarehouseId: $('#Search_IvWarehouseId').find(':selected').val(),
            VendorId: $('#Search_VendorId').find(':selected').val(),
            StatusId: $('#Search_StatusId').find(':selected').val(),
            OrderNumber: $('#Search_OrderNumber').val(),
            PurchaseOrderDate: $('#Search_PurchaseOrderDate').val(),
            length: 1000000
        };

        const columns = [
            {
                "data": "result.data.id",
                'render': function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                "data": "PurchaseOrderNumber",
                "name": "PurchaseOrderNumber",
                "autoWidth": true
            },
            {
                "data": "PurchaseOrderDate",
                "name": "PurchaseOrderDate",
                "autoWidth": true
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {
                    return row.IvWarehouseName;
                },
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {

                    if (row.VendorNameAr == null &&row.VendorNameEn == null )
                        return '';

                    if (lang === 'ar-EG')
                        return row.VendorNameAr;

                    return row.VendorNameEn;
                },
            },
            {
                "data": null,
                "autoWidth": true,
                "render": function (d, t, row) {

                    if (row.StatusAr == null &&row.StatusEn == null )
                        return '';

                    if (lang === 'ar-EG')
                        return row.StatusAr;

                    return row.StatusEn;
                },
            }
        ];

        const dtObj = {
            "language": dataTableLang,
            "dom": 'Bfrtip',
            "buttons": [
                {
                    extend: 'excel',
                    messageTop: `${$('[for="Search_IvWarehouseId"]').text()}: ${(parmss.IvWarehouseId) ? parmss.IvWarehouseId : '--'}, ${$('[for="Search_VendorId"]').text()}: ${(parmss.VendorId) ? parmss.VendorId : '--'}, ${$('[for="Search_StatusId"]').text()}: ${(parmss.StatusId) ? parmss.StatusId : '--'}, ${$('#Search_OrderNumber').siblings().text()}: ${(parmss.OrderNumber) ? parmss.OrderNumber : '--'}, ${$('#Search_PurchaseOrderDate').siblings().text()}: ${(parmss.PurchaseOrderDate) ? parmss.PurchaseOrderDate : '--'}`
                },

            ],
            "ajax": {
                "url": _loadDataUrl,
                "type": "POST",
                "datatype": "json",
                "data": parmss,
                "complete": function (d) {
                    _tblLoader.hide();
                }
            },
            "columns": columns,

            "initComplete": function () {
                $('#tblPoPurchaseOrderPrint_wrapper button.dt-button').click();
                $('#tblPoPurchaseOrderPrint_wrapper').parent().addClass('d-none');

            }
        };

        $('#tblPoPurchaseOrderPrint').dataTable().fnDestroy();
        $('#tblPoPurchaseOrderPrint').DataTable(dtObj).on('buttons-processing', function (e, indicator) { if (!indicator) { $('.page-loader-wrapper').hide() } });


    }

</script>