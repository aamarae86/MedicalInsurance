@using ERP.Web.UI.Models.ViewModels.AidModule
@using ERP.Web.UI.Models.ViewModels.General
@model ScMaintenancePaymentsVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(FndLookupValuesVM.NameAr) : nameof(FndLookupValuesVM.NameEn);
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
    var lastDateTime = ViewData["Version"] == null ? null : ViewData["Version"] as Nullable<DateTime>;
}
<div class="card">
    <div class="header d-flex justify-content-start align-items-center">
        <i class="fas fa-2x fa-chevron-down down-arr mr-2" data-toggle="collapse" data-target="#masterData"></i>
        <h2><strong>@ERP.ResourcePack.AidModule.ScMaintenancePayments.Title</strong></h2>
    </div>
    <div class="body collapse show">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.AidModule.ScMaintenancePaymentsController.CreateScMaintenancePayments), "ScMaintenancePayments", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane fade in active show" id="contract">
                    @Html.HiddenFor(z => z.Id)

                    <input type="hidden" id="LastModificationTime" name="LastModificationTime" value="@lastDateTime" />

                    <div class="row clearfix">
                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.MaintenancePaymentNumber, new { @readOnly = "readonly", @class = "from-control" })
                                    @Html.LabelFor(z => z.MaintenancePaymentNumber, new { @class = "form-label" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @if (Model == null || Model.FndStatusLkp == null)
                                    {
                                        @Html.TextBoxFor(z => z.StatusLkpId, getHtmlAttributes(true, "form-control", string.Empty))
                                        @Html.LabelFor(z => z.StatusLkpId, new { @class = "form-label" })
                                    }
                                    else if (lang == "ar-EG")
                                    {
                                        @Html.TextBoxFor(z => z.FndStatusLkp.NameAr, getHtmlAttributes(true, "form-control", string.Empty))
                                        @Html.LabelFor(z => z.StatusLkpId, new { @class = "form-label" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(z => z.FndStatusLkp.NameEn, getHtmlAttributes(true, "form-control", string.Empty))
                                        @Html.LabelFor(z => z.StatusLkpId, new { @class = "form-label" })
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.MaintenancePaymentDate, getHtmlAttributes(isFormDetail, "form-control", "datepicker"))
                                    @Html.LabelFor(z => z.MaintenancePaymentDate, new { @class = "form-label label-required" })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(z => z.MaintenancePaymentDate)
                        </div>
                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.MaturityDate, getHtmlAttributes(isFormDetail, "form-control", "datepicker"))
                                    @Html.LabelFor(z => z.MaturityDate, new { @class = "form-label label-required" })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(z => z.MaturityDate)
                        </div>
                    </div>
                    <div class="row clearfix">
                        <div class="col-md-3">
                            @Html.LabelFor(z => z.ScMaintenanceContractId, new { @class = "form-label label-required" })
                            <div class="form-group form-float">
                                <div class="">
                                    @if (Model != null && !string.IsNullOrEmpty(Model.MaintenanceContractNumber))
                                    {
                                        var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.ScMaintenanceContractId, NameAr = Model.MaintenanceContractNumber, NameEn = Model.MaintenanceContractNumber } };
                                        var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.ScMaintenanceContractId);

                                        @Html.DropDownListFor(z => z.ScMaintenanceContractId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(z => z.ScMaintenanceContractId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    }
                                </div>
                                @Html.ValidationMessageFor(z => z.ScMaintenanceContractId)
                            </div>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(z => z.ScMaintenanceContractPaymentId, new { @class = "form-label label-required" })
                            <div class="form-group form-float">
                                <div class="">
                                    @if (Model != null && !string.IsNullOrEmpty(Model.MaintenanceContractPaymentsNumber))
                                    {
                                        var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.ScMaintenanceContractPaymentId, NameAr = Model.MaintenanceContractPaymentsNumber, NameEn = Model.MaintenanceContractPaymentsNumber } };
                                        var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.ScMaintenanceContractPaymentId);

                                        @Html.DropDownListFor(z => z.ScMaintenanceContractPaymentId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(z => z.ScMaintenanceContractPaymentId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    }
                                </div>
                                @Html.ValidationMessageFor(z => z.ScMaintenanceContractPaymentId)
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.PortalRequestNumber, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                                    @Html.LabelFor(z => z.PortalRequestNumber, new { @class = "form-label", @style = "pointer-events: none;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.PortalUserName, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                                    @Html.LabelFor(z => z.PortalUserName, new { @class = "form-label", @style = "pointer-events: none;" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row clearfix">
                        <div class="col-md-4">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.Vendor, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                                    @Html.LabelFor(z => z.Vendor, new { @class = "form-label", @style = "pointer-events: none;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.AchievementRate, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    <label class="form-label label-required"><strong> % </strong> @ERP.ResourcePack.AidModule.ScMaintenancePayments.AchievementRate </label>
                                </div>
                                @Html.ValidationMessageFor(z => z.AchievementRate)
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextBoxFor(z => z.Amount, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    @Html.LabelFor(z => z.Amount, new { @class = "form-label label-required" })
                                </div>
                                @Html.ValidationMessageFor(z => z.Amount)
                            </div>
                        </div>
                    </div>
                    <div class="row clearfix">
                        <div class="col-md-12">
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.TextAreaFor(z => z.Notes, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                    @Html.LabelFor(z => z.Notes, new { @class = "form-label" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled)
        {
            return new { @class = CssClass, Disabled = Disabled };
        }
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}

