@using ERP.Front.Helpers.Parameters.Users
@model ChangePasswordParms
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}
<div class="card">
    <div class="body  show">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.Authentications.UsersController.ChangePassword),
            "Users", new AjaxOptions { HttpMethod = "POST", OnBegin = "Validation", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {

            <div class="row clearfix">
                <div class="col-md-12">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.PasswordFor(z => z.CurrentPassword, getHtmlAttributes(isFormDetail, "form-control", @ERP.ResourcePack.Common.Settings.OldPasswrod))
                            @Html.LabelFor(z => z.CurrentPassword, new { @class = "form-label label-required" })
                        </div>
                        @Html.ValidationMessageFor(z => z.CurrentPassword)
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-md-12">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.PasswordFor(z => z.NewPassword, getHtmlAttributes(isFormDetail, "form-control", @ERP.ResourcePack.Common.Settings.NewPassword))
                            @Html.LabelFor(z => z.NewPassword, new { @class = "form-label label-required" })
                        </div>
                        @Html.ValidationMessageFor(z => z.NewPassword)
                    </div>
                </div>
            </div>

            <div class="row clearfix">
                <div class="col-md-12">
                    <div class="form-group validate-input" data-validate="@ERP.ResourcePack.Common.Settings.ConfirmPasswordCompare">
                        <input type="password" class="form-control" id="ComfrmPassword" placeholder="@ERP.ResourcePack.Common.Settings.ConfirmPassword" />
                    </div>
                </div>
            </div>

            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" class="btn btn-info btn-lg m-l-15 waves-effect">@ERP.ResourcePack.Common.Settings.ChangePassword</button>
                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<script>

     var OnSuccess = function (response) {

         if (response.success) {

             toastr.success('@ERP.ResourcePack.Common.Settings.PasswordChangedSuccessfully');
             _mainModal.modal('hide');

         } else if (response.customRestResult.message == 'Exception0') {

             toastr.error('@ERP.ResourcePack.Common.Settings.Exception0');
         } else if (response.customRestResult.message == 'Exception1') {
             toastr.error('@ERP.ResourcePack.Common.Settings.Exception1');
         } else if (response.customRestResult.message == 'Exception2') {
             toastr.error('@ERP.ResourcePack.Common.Settings.Exception2');
         } else {
             toastr.error(response.customRestResult.message)
         }
    };

    var OnComplete = function (response) {
        downBtnLoader();
    };

    var OnFailure = function (response) {
        toastr.error(response);
        downBtnLoader();
    };

    var Validation = function () {
        if ($('#NewPassword').val() != $('#ComfrmPassword').val()) {
            toastr.warning('@ERP.ResourcePack.Common.Settings.ConfirmPasswordCompare');
            return false;
        } else {
            fireBtnLoader();
            return true;
        }

    }
</script>



@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled)
        {
            return new { @class = CssClass, Disabled = Disabled };
        }
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>


