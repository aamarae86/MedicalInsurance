@using ERP.Web.UI.Controllers.SpGuarantees
@using ERP.ResourcePack.SpGuarantees
@using ERP.Web.UI.Models.ViewModels.General
@model ERP.Web.UI.Models.ViewModels.SpGuarantees.SpCaseEditDataVM
@{
    ViewBag.Title = ERP.ResourcePack.SpGuarantees.SpCaseEditData.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string permissions = TempData["Permissions"].ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);

}
@if (TempData["Exc"] != null && TempData["Exc"].ToString() != string.Empty)
{
    <p class="alert alert-danger text-center">
        @TempData["Exc"].ToString()
    </p>
}

<div class="card">
    <div class="header d-flex justify-content-start align-items-center">
        <i class="fas fa-2x fa-chevron-down down-arr mr-2" data-toggle="collapse" data-target="#searchCollapse"></i>
        <h2><strong>@SpCaseEditData.Title</strong></h2>
    </div>
    <div class="body collapse show" id="searchCollapse">
        <div class="row clearfix">
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.SpContractDetailsId)
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.BeneficentNumber, new { @class = "form-control", @disabled = "disabled" })
                        @Html.LabelFor(z => z.BeneficentNumber, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.BeneficentName, new { @class = "form-control", @disabled = "disabled" })
                        @Html.LabelFor(z => z.BeneficentName, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.CaseNumber, new { @class = "form-control", @disabled = "disabled" })
                        @Html.LabelFor(z => z.CaseNumber, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.CaseName, new { @class = "form-control", @disabled = "disabled" })
                        @Html.LabelFor(z => z.CaseId, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.SponsorLkpNameAr, new { @class = "form-control", @disabled = "disabled" })
                        <label class="form-label">@SpCaseEditData.SponsorLkpNameAr</label>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.ContractNumber, new { @class = "form-control", @disabled = "disabled" })
                        @Html.LabelFor(z => z.ContractNumber, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-6">
                @Html.LabelFor(z => z.BankLkpId, new { @class = "form-label" })
                <div class="">
                    @if (Model != null)
                    {
                        var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.BankLkpId, NameAr = Model.BeneficentBankAr, NameEn = Model.BeneficentBankEn } };
                        var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.BankLkpId);

                        @Html.DropDownListFor(z => z.BankLkpId, selectList, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(z => z.BankLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    }
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.AccountOwner, new { @class = "form-control" })
                        <label class="form-label">@SpCaseEditData.AccountOwner</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.AccountNumber, new { @class = "form-control" })
                        <label class="form-label">@SpCaseEditData.AccountNumber</label>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.NameFor, new { @class = "form-control" })
                        <label class="form-label">@SpCaseEditData.NameFor</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Amount, new { @class = "form-control" })
                        <label class="form-label">@SpCaseEditData.Amount</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-12">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextAreaFor(z => z.Notes, new { @class = "form-control" })
                        <label class="form-label">@SpCaseEditData.Notes</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-12">
                <div class="form-group m-2">
                    @*@if (permissions.Contains(ERP.Authorization.PermissionNames.Pages_SpCaseEditData_Post))
                        {*@
                    <button id="btnReplace" class="btn btn-info" onclick="return OperateCase('One')">
                        @ERP.ResourcePack.SpGuarantees.SpCaseEditData.BtnCancelCase
                    </button>
                    <button id="btnReplace" class="btn btn-info" onclick="return OperateCase('All')">
                        @ERP.ResourcePack.SpGuarantees.SpCaseEditData.BtnReplaceCase
                    </button>
                    @*}*@
                    <a href="~/SpCaseEditData" class="btn btn-danger btn-lg m-l-15 waves-effect">@(ERP.ResourcePack.Common.Settings.BtnClose)</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        let formView = true;
        $('#BankLkpId').select2(ReturnSelect2ObjectCustomParams(`${baseUrl}/SpBeneficent/GetSpBeneficentBanksSelect2`, { benefId: @Model.BeneficentId }));

        $('#BankLkpId').on('select2:select', function (e) {
            console.log(e);
            var accountData = e.params.data.altText;
            var accountNo = accountData.split('__')[0];
            var accountName = accountData.split('__')[1];
            console.log(accountData);
            $('#AccountOwner').val(accountName);
            $('#AccountOwner').parent('.form-line').addClass('focused');
            $('#AccountNumber').val(accountNo);
            $('#AccountNumber').parent('.form-line').addClass('focused');
    });
    </script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @Html.Partial("~/ViewsScripts/_SpGuarantees/SpCaseEditData/SpCaseEditDataScripts.cshtml")


}

