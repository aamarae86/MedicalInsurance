@using ERP.Web.UI.Models.ViewModels.AccountsExtend
@using ERP.Web.UI.Models.ViewModels.Accounts
@using ERP.ResourcePack.AccountsExtend
@model ApPrepaidVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.Accounts.CurrenciesVM.DescriptionAr) : nameof(ERP.Web.UI.Models.ViewModels.Accounts.CurrenciesVM.DescriptionEn);
    string lkpKeyDdlVndr = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.Accounts.ApVendorsVM.VendorNameAr) : nameof(ERP.Web.UI.Models.ViewModels.Accounts.ApVendorsVM.VendorNameEn);
    string lkpKeyDdlFnd = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}
<div class="card">
    <div class="header">
        <h2><strong>@ERP.ResourcePack.Accounts.GlJeHeaders.MasterData</strong></h2>
    </div>
    <div class="body">
        @using (Ajax.BeginForm(string.Empty, "ApPrepaid", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.codeComUtilityIds)
            @Html.HiddenFor(z => z.codeComUtilityTexts)
            @Html.HiddenFor(z => z.codeComUtilityIds_alt1)
            @Html.HiddenFor(z => z.codeComUtilityTexts_alt1)
            <div class="row clearfix">
                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.SourceNo, getHtmlAttributes(true, "form-control", string.Empty))
                            <label class="form-label">@ApPrepaid.MiscNumber</label>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.TransactionDate, getHtmlAttributes(true, "form-control", "datepicker"))
                            @Html.LabelFor(z => z.TransactionDate, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line text-center">
                            @if (lang == "ar-EG")
                            {
                                @Html.TextBoxFor(z => z.FndStatusLkp.NameAr, getHtmlAttributes(true, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.TextBoxFor(z => z.FndStatusLkp.NameEn, getHtmlAttributes(true, "form-control", string.Empty))
                            }
                            @Html.LabelFor(z => z.StatusLkpId, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line text-center">
                            @if (lang == "ar-EG")
                            {
                                @Html.TextBoxFor(z => z.FndSourceCodeLkp.NameAr, getHtmlAttributes(true, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.TextBoxFor(z => z.FndSourceCodeLkp.NameEn, getHtmlAttributes(true, "form-control", string.Empty))
                            }
                            @Html.LabelFor(z => z.SourceId, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.Amount, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.Amount, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="header">
                <h2><strong>@ApPrepaid.DrAccountId</strong></h2>
            </div>
            <div class="body">
                <div class="row clearfix">
                    @Html.Action(nameof(ERP.Web.UI.Controllers.Accounts.GlAccDetailsController.DrawGlAccController), "GlAccDetails",
                       new { glAccHeadersVMs = ViewData["ListGlAccHeadersVM"] == null ? new List<GlAccHeadersVM>() : ViewData["ListGlAccHeadersVM"] as List<GlAccHeadersVM>, repeatTrigger = "dr" })
                </div>
            </div>
            <div class="header">
                <h2><strong>@ApPrepaid.CrAccountId</strong></h2>
            </div>
            <div class="body">
                <div class="row clearfix">
                    @Html.Action(nameof(ERP.Web.UI.Controllers.Accounts.GlAccDetailsController.DrawGlAccController), "GlAccDetails",
                       new { glAccHeadersVMs = ViewData["ListGlAccHeadersVM"] == null ? new List<GlAccHeadersVM>() : ViewData["ListGlAccHeadersVM"] as List<GlAccHeadersVM>, repeatTrigger = "cr" })
                </div>
            </div>
        }
    </div>

</div>

@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled)
        {
            return new { @class = CssClass, Disabled = Disabled };
        }
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}

