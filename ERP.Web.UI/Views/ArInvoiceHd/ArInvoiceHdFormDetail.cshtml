@using ERP.Web.UI.Models.ViewModels.Accounts
@model ERP.Web.UI.Models.ViewModels.Accounts.ArInvoiceHdVM
@{
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    bool isFormDetail = Model != null &&  ViewBag.trigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}

<div class="card" style="display:@(ViewBag.trigger ==ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString() ? "none":"block" ) ">
    <div class="body">
        <div class="row clearfix">
            @Html.Action(nameof(ERP.Web.UI.Controllers.Accounts.GlAccDetailsController.DrawGlAccController), "GlAccDetails",
               new { glAccHeadersVMs = ViewData["ListGlAccHeadersVM"] == null ? new List<GlAccHeadersVM>() : ViewData["ListGlAccHeadersVM"] as List<GlAccHeadersVM> })
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Description, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                        <label class="form-label">@ERP.ResourcePack.Accounts.ArCustomers.Desc</label>
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Amount, getHtmlAttributes(isFormDetail, "form-control currency ", string.Empty))
                        <label class="form-label">@ERP.ResourcePack.Accounts.ArCustomers.Money</label>
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.TaxPercent, new { @class = "form-control", @min = "0", @max="100", @type = "number" })
                        <label class="form-label">@ERP.ResourcePack.Accounts.ArCustomers.Tax</label>
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBox("TaxAmount","", new { @class = "form-control currency ", @disabled = "disabled" })
                        @Html.Label(@ERP.ResourcePack.Accounts.ArCustomers.TaxAmount, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBox("Total","", new { @class = "form-control currency ", @disabled = "disabled" })
                        @Html.Label(@ERP.ResourcePack.Accounts.ArCustomers.Total, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <button id="btnAddDetailRow" onclick="return AddArInvoiceHdDetail()" class="btn btn-success">@ERP.ResourcePack.Common.Settings.BtnAddNew</button>
                    <button style="display:none;" id="btnUpdateDetailRow" onclick="return UpdateArInvoiceHdDetailRow()" class="btn btn-info">@ERP.ResourcePack.Common.Settings.BtnUpdate</button>
                    <button style="display:none;" id="btnCancelDetailRow" onclick="clearFormAdding(); $('#btnCancelDetailRow').hide();$('#btnUpdateDetailRow').hide();$('#btnAddDetailRow').show();" class="btn btn-danger">@ERP.ResourcePack.Common.Settings.BtnCancel</button>
                </div>
            </div>
        </div>

    </div>
</div>


@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled) return new { @class = CssClass, Disabled = Disabled };
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}
