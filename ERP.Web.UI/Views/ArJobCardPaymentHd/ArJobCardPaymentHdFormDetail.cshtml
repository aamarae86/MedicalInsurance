@using ERP.Web.UI.Models.ViewModels.Accounts
@model ERP.Web.UI.Models.ViewModels.Accounts.ArJobCardPaymentHdVM
@{
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    bool isFormDetail = Model != null && ViewBag.trigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}

<div class="card" style="display:@(ViewBag.trigger ==ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString() ? "none":"block" ) ">
    <div class="body">
        <div class="row clearfix">
            @Html.Action(nameof(ERP.Web.UI.Controllers.Accounts.GlAccDetailsController.DrawGlAccController), "GlAccDetails",
               new { glAccHeadersVMs = ViewData["ListGlAccHeadersVM"] == null ? new List<GlAccHeadersVM>() : ViewData["ListGlAccHeadersVM"] as List<GlAccHeadersVM> })


            @*<div class="col-md-3">
                @Html.LabelFor(z => z.JobNumberLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.DropDownListFor(z => z.JobNumberLkpId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))

                    </div>
                </div>
            </div>*@

            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.CustomerNameEn, getHtmlAttributes(true, "form-control sec-prop", string.Empty))
                        @Html.LabelFor(z => z.CustomerNameEn, new { @class = "form-label" })
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.OriginalAmount, getHtmlAttributes(true, "form-control currency sec-prop", string.Empty))
                        @Html.LabelFor(z => z.OriginalAmount, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row ">
            <div class="col-md-3">
                @Html.LabelFor(z => z.SourceLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.DropDownListFor(z => z.SourceLkpId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                @Html.LabelFor(z => z.InvoiceNumberLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        <select class="form-control" id="InvoiceNumberLkpId">
                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.PaymentDate, getHtmlAttributes(true, "form-control pry-prop datepicker", string.Empty))
                        @Html.LabelFor(z => z.PaymentDate, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Amount, getHtmlAttributes(true, "form-control currency pry-prop", string.Empty))
                        @Html.LabelFor(z => z.Amount, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Notes, getHtmlAttributes(true, "form-control pry-prop", string.Empty))
                        @Html.LabelFor(z => z.Notes, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <button id="btnAddDetailRow" onclick="return AddArJobCardHeaderDetails()" class="btn btn-success">@ERP.ResourcePack.Common.Settings.BtnAddNew</button>
                    <button style="display:none;" id="btnUpdateDetailRow" onclick="return UpdateArJobCardHeaderDetailsRow()" class="btn btn-info">@ERP.ResourcePack.Common.Settings.BtnUpdate</button>
                    <button style="display:none;" id="btnCancelDetailRow" onclick="clearFormArJobCardHeaderAdding(); $('#btnCancelDetailRow').hide();$('#btnUpdateDetailRow').hide();$('#btnAddDetailRow').show();" class="btn btn-danger">@ERP.ResourcePack.Common.Settings.BtnCancel</button>
                </div>
            </div>
        </div>          
        

    </div>
</div>


@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled) return new { @class = CssClass, @disabled = Disabled };
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}
