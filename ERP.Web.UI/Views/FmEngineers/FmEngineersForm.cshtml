@using ERP.Web.UI.Models.ViewModels.PmPropertiesModule
@model FmEngineersVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);
}
<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.PmPropertiesModule.FmEngineersController.PostFmEngineers), "FmEngineers", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)

            <div class="row clearfix">
                <div class="col-sm-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.EngineerNumber, new { @class = "form-control", @disabled = true })
                            @Html.LabelFor(z => z.EngineerNumber, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.EngineerName, new { @class = "form-control" })
                            @Html.LabelFor(z => z.EngineerName, new { @class = "form-label" })
                        </div>
                        @Html.ValidationMessageFor(z => z.EngineerName)
                    </div>
                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(z => z.StatusLkpId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && !string.IsNullOrEmpty(Model.FndStatusLkpNameAr))
                            {
                                var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.StatusLkpId, NameAr = Model.FndStatusLkpNameAr, NameEn = Model.FndStatusLkpNameEn } };

                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.StatusLkpId);

                                @Html.DropDownListFor(z => z.StatusLkpId, selectList, new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.StatusLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            }
                        </div>
                        @Html.ValidationMessageFor(z => z.StatusLkpId)
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-sm-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.Mobile1, new { @class = "form-control" })
                            @Html.LabelFor(z => z.Mobile1, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.Mobile2, new { @class = "form-control" })
                            @Html.LabelFor(z => z.Mobile2, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.HireDate, new { @class = "form-control datepicker" })
                            @Html.LabelFor(z => z.HireDate, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-sm-3">
                    @Html.LabelFor(z => z.HrPersonsId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && Model.HrPersons != null)
                            {
                                var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.HrPersonsId ?? 0, NameAr = Model.HrPersons.EmployeeNumber, NameEn = Model.HrPersons.EmployeeNumber } };

                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.HrPersonsId);

                                @Html.DropDownListFor(z => z.HrPersonsId, selectList, new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.HrPersonsId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.EmployeeName, new { @class = "form-control", @disabled = true })
                            @Html.LabelFor(z => z.EmployeeName, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.BirthDate, new { @class = "form-control", @disabled = true })
                            @Html.LabelFor(z => z.BirthDate, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (lang == "ar-EG")
                            {
                                @Html.TextBoxFor(z => z.GenderAr, new { @class = "form-control", @disabled = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(z => z.GenderEn, new { @class = "form-control", @disabled = true })
                            }
                            @Html.LabelFor(z => z.GenderAr, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (lang == "ar-EG")
                            {
                                @Html.TextBoxFor(z => z.NationalityAr, new { @class = "form-control", @disabled = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(z => z.NationalityEn, new { @class = "form-control", @disabled = true })
                            }
                            @Html.LabelFor(z => z.NationalityAr, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-sm-12">
                    <div class="form-group form-float">
                        <div class="form-line focused">
                            @Html.TextBoxFor(z => z.Comments, new { @class = "form-control" })
                            @Html.LabelFor(z => z.Comments, new { @class = "form-label" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" class="btn btn-info btn-lg m-l-15 waves-effect">@(Model == null ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>
                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>
<script>

    $('#main-modal #StatusLkpId').select2(ReturnSelect2ObjectForLkpsTypes('@ERP.Front.Helpers.Enums.Common.FndLkpsTypes.FmEngineersStatues.ToString()'));

    $('#main-modal #HrPersonsId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/HrPersons/GetPersonsNumbersForEngineersSelect2`));

    $('#main-modal #HrPersonsId').on('select2:select', function (data) {

        if (data.params.data.altText) {

            const currentEmployee = JSON.parse(data.params.data.altText);

            $('#EmployeeName').val(currentEmployee.FirstName);
            $('#BirthDate').val(currentEmployee.BirthDate.split('T')[0]);

          

            $('#EmployeeName').parent('.form-line').addClass('focused');
            $('#BirthDate').parent('.form-line').addClass('focused');
            $('#GenderAr').parent('.form-line').addClass('focused');
            $('#GenderEn').parent('.form-line').addClass('focused');
            $('#NationalityAr').parent('.form-line').addClass('focused');
            $('#NationalityEn').parent('.form-line').addClass('focused');
        }

    });

    $('#main-modal #HrPersonsId').on('change', function () {

        $.ajax({
            url: `${baseUrl}/HrPersons/Get`,
            method: 'GET',
            data: {
                id: $(this).find(':selected').val()
            },
            headers: {
                'Authorization':`bearer ${$_token}`
            }
        }).done(function (data) {
         
            const currentEmployee = data.result;

            if (currentEmployee.fndGenderLkp) {
                $('#GenderAr').val(currentEmployee.fndGenderLkp.nameAr);
                $('#GenderEn').val(currentEmployee.fndGenderLkp.nameEn);
            }

            if (currentEmployee.fndNationalityLkp) {
                $('#NationalityAr').val(currentEmployee.fndNationalityLkp.nameAr);
                $('#NationalityEn').val(currentEmployee.fndNationalityLkp.nameEn);
            }

        });

    });

</script>