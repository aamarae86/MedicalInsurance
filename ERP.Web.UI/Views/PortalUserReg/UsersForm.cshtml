@using ERP.Web.UI.Controllers.Authentications
@using ERP.Web.UI.Models.ViewModels.Authentications
@model UsersVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string actionName = (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString()) ?  nameof(PortalUserRegController.PostUsers) : nameof(PortalUserRegController.UpdateUser);
    bool isActiveValue = Model == null ? false : Model.IsActive;
}
<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(actionName, "PortalUserReg", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.Name, new { Value = "TEST" })
            @Html.HiddenFor(z => z.SurName, new { Value = "TEST" })
            @Html.HiddenFor(z => z.FullName, new { Value = "TEST" })

            <div class="row clearfix">
                <div class="col-sm-12">
                    <div class="form-group form-float">
                        @Html.LabelFor(z => z.PortalUserId, new { @class = "form-label label-required" })
                        <div>
                            @if (Model != null && !string.IsNullOrEmpty(Model.Name))
                            {
                                var list = new List<UsersVM> { new UsersVM { Id = (long)Model.PortalUserId, Name = Model.Name } };
                                var selectList = new SelectList(list, "Id", nameof(Model.Name), Model.PortalUserId);

                                @Html.DropDownListFor(z => z.PortalUserId, selectList, new { @disabled = true, @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.PortalUserId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            }
                        </div>
                    </div>
                    @Html.ValidationMessageFor(z => z.PortalUserId)
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-sm-6">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.EmailAddress, new { @class = "form-control" })
                            @Html.LabelFor(z => z.EmailAddress, new { @class = "form-label" })
                        </div>
                        @Html.ValidationMessageFor(z => z.EmailAddress)
                    </div>
                </div>
                @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString())
                {
                    <div class="col-sm-6">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextBoxFor(z => z.UserName, new { @class = "form-control" })
                                @Html.LabelFor(z => z.UserName, new { @class = "form-label" })
                            </div>
                            @Html.ValidationMessageFor(z => z.UserName)
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-sm-6">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextBox("user", Model.UserName, new { @disabled = true, @class = "form-control" })
                                @Html.LabelFor(z => z.UserName, new { @class = "form-label" })
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(z => z.UserName)
                }
            </div>
            <div class="row clearfix">
                <div class="col-md-6">
                    @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString())
                    {
                        <p>
                            @if (Model.IsActive)
                            {
                                <i class="fas fa-check text-success fa-2x"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger fa-2x"></i>
                            }
                            <span>@Html.LabelFor(z => z.IsActiveAlt)</span>
                        </p>
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString())
                    {
                        <p>
                            <label>
                                @if (Model.IsActive)
                                {
                                    <input type="checkbox" onclick="setIsActiveUserValue()" checked id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                }
                                else
                                {
                                    <input type="checkbox" onclick="setIsActiveUserValue()" id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                }
                                <span>@Html.LabelFor(z => z.IsActiveAlt)</span>
                            </label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <label>
                                <input type="checkbox" onclick="setIsActiveUserValue()" checked id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                <span>@Html.LabelFor(z => z.IsActiveAlt)</span>
                            </label>
                        </p>
                    }

                    @Html.HiddenFor(u => u.IsActive, new { @Value = true })
                </div>
            </div>

            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" class="btn btn-info btn-lg m-l-15 waves-effect">@(Model == null ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>
                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>
<script>
    $('#PortalUserId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/PortalUserReg/GetPortalUnfiedUsersForRegisterToPortalSelect2`));
</script>
