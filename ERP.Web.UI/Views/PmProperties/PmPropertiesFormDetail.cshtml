@using ERP.Web.UI.Models.ViewModels.PmPropertiesModule
@model PmPropertiesUnitsVM
@{ string formTrigger = ViewBag.trigger;
    bool isFormDetail = Model != null && ViewBag.trigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
    }

<div class="card" style="display:@(formTrigger ==ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString() ? "none":"block" ) ">
    <div class="body">
        <div class="row clearfix">
            <div class="col-sm-4">
                @Html.LabelFor(z => z.PmUnitTypeLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-group">
                        @Html.DropDownListFor(z => z.PmUnitTypeLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(z => z.PmUnitDescLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-group">
                        @Html.DropDownListFor(z => z.PmUnitDescLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.UnitNo, new { @class = "form-control" })
                        @Html.LabelFor(z => z.UnitNo, new { @class = "form-label" })
                    </div>
                </div>
            </div>


        </div>
        <div class="row clearfix">
            <div class="col-md-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.FloorLevel, new { @class = "form-control" })
                        @Html.LabelFor(z => z.FloorLevel, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.AreaSize, new { @class = "form-control", @type = "number", @min = 0 })
                        @Html.LabelFor(z => z.AreaSize, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.YearlyRent, getHtmlAttributes(isFormDetail, "form-control currency ", string.Empty))
                        @Html.LabelFor(z => z.YearlyRent, new { @class = "form-label" })
                    </div>
                </div>
            </div>


        </div>
        <div class="row clearfix">
            <div class="col-sm-4">
                @Html.LabelFor(z => z.ViewLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-group">
                        @Html.DropDownListFor(z => z.ViewLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(z => z.FinishesLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-group">
                        @Html.DropDownListFor(z => z.FinishesLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.ElectricityNumber, new { @class = "form-control", @type = "number", @min = 0 })
                        @Html.LabelFor(z => z.ElectricityNumber, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group form-float">
                <div class="form-line">
                    @Html.TextBoxFor(z => z.SewerageNumber, new { @class = "form-control", @type = "number", @min = 0 })
                    @Html.LabelFor(z => z.SewerageNumber, new { @class = "form-label" })
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-12 text-center">
                <div class="form-group">
                    <button id="btnAddUnitRow" onclick="return AddUnits()" class="btn btn-success">@ERP.ResourcePack.Common.Settings.BtnAddNew</button>
                    <button style="display:none;" id="btnUpdateUnitRow" onclick="return UpdateUnitsRow()" class="btn btn-info">@ERP.ResourcePack.Common.Settings.BtnUpdate</button>
                    <button style="display:none;" id="btnCancelUnitRow" onclick="clearFormUnits(); $('#btnCancelUnitRow').hide();$('#btnUpdateUnitRow').hide();$('#btnAddUnitRow').show();" class="btn btn-danger">@ERP.ResourcePack.Common.Settings.BtnCancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled) return new { @class = CssClass, Disabled = Disabled };
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}