@using ERP.Web.UI.Models.ViewModels.CRM.meetings
@using ERP.Web.UI.Models.ViewModels.General
@model ActivityMeetingVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(FndLookupValuesVM.NameAr) : nameof(FndLookupValuesVM.NameEn);
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}
<div class="card">
    <div class="header d-flex justify-content-start align-items-center">
        <i class="fas fa-2x fa-chevron-down down-arr mr-2" data-toggle="collapse" data-target="#masterData"></i>
        <h2><strong>@ERP.ResourcePack.CRM.Meetings.activityMeeting.MasterTitle</strong></h2>
    </div>
    <div class="body collapse show" id="masterData">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.CRM.ActivityMeetingController.CreateActivityMeeting), "ActivityMeeting",
            new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm11" }))
        {
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.ActivityMeetingParticipantStr)


            <div class="row clearfix">
                <div class="col-md-4">
                    @Html.LabelFor(z => z.RelatedToLkpId, new { @class = "form-label label-required" })
                    <div class="form-group form-float">
                        <div class="">
                            @if (Model?.RelatedToLkpId > 0)
                            {
                                var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.RelatedToLkpId, NameAr = Model.RelatedToLkpVal, NameEn = Model.RelatedToLkpVal } };
                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.RelatedToLkpId);
                                @Html.HiddenFor(s => s.RelatedToLkpId)

                                @Html.DropDownList("RelatedToLkpId0", selectList, getHtmlAttributes(true, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.RelatedToLkpId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                        </div>
                        @Html.ValidationMessageFor(z => z.RelatedToLkpId)
                    </div>
                </div>

                <div class="col-md-4">
                    @Html.LabelFor(z => z.CrmLeadsPersonsId, new { @class = "form-label label-required" })
                    <div class="form-group form-float">
                        <div class="">
                            @if (Model?.CrmLeadsPersonsId > 0)
                            {
                                var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.CrmLeadsPersonsId, NameAr = Model.CrmLeadsPersonsVal, NameEn = Model.CrmLeadsPersonsVal } };
                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CrmLeadsPersonsId);
                                @Html.HiddenFor(s => s.CrmLeadsPersonsId)

                                @Html.DropDownList("CrmLeadsPersonsId0", selectList, getHtmlAttributes(true, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.CrmLeadsPersonsId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                        </div>
                        @Html.ValidationMessageFor(z => z.CrmLeadsPersonsId)
                    </div>
                </div>


                <div class="col-md-4">
                    @Html.LabelFor(z => z.PartiReminderLkpId, new { @class = "form-label label-required" })
                    <div class="form-group form-float">
                        <div class="">
                            @if (Model != null && Model.PartiReminderLkpId > 0)
                            {
                                var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.PartiReminderLkpId, NameAr = Model.PartiReminderLkpVal, NameEn = Model.PartiReminderLkpVal } };
                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.PartiReminderLkpId);

                                @Html.DropDownListFor(z => z.PartiReminderLkpId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.PartiReminderLkpId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                        </div>
                        @Html.ValidationMessageFor(z => z.PartiReminderLkpId)
                    </div>
                </div>

                <div class="col-sm-4">
                    @Html.LabelFor(z => z.CrmDealsId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && !string.IsNullOrEmpty(Model.CrmDealsVal))
                            {
                                var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CrmDealsId.Value, NameAr = Model.CrmDealsVal, NameEn = Model.CrmDealsVal } };

                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CrmDealsId);

                                @Html.DropDownListFor(z => z.CrmDealsId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))


                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.CrmDealsId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            }
                        </div>
                        @Html.ValidationMessageFor(z => z.CrmDealsId)
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.Title, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            @Html.LabelFor(z => z.Title, new { @class = "form-label" })
                        </div>
                    </div>
                </div>      <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.Location, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            @Html.LabelFor(z => z.Location, new { @class = "form-label" })
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString())
                    {
                        <p>
                            @if (Model.AllDay)
                            {
                                <i class="fas fa-check text-success fa-2x"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger fa-2x"></i>
                            }
                            <span>@Html.LabelFor(z => z.AllDay)</span>
                        </p>
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString())
                    {
                        <p>
                            <label>
                                @if (Model.AllDay)
                                {
                                    <input type="checkbox" onclick="setInUseValue()" value="true" checked id="@nameof(Model.AllDay)" name="@nameof(Model.AllDay)" />
                                }
                                else
                                {
                                    <input type="checkbox" onclick="setInUseValue()" id="@nameof(Model.AllDay)" name="@nameof(Model.AllDay)" />
                                }
                                <span>@Html.LabelFor(z => z.AllDay)</span>
                            </label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <label>
                                <input type="checkbox" onclick="setInUseValue()" id="@nameof(Model.AllDay)" name="@nameof(Model.AllDay)" />
                                <span>@Html.LabelFor(z => z.AllDay)</span>
                            </label>
                        </p>
                    }
                </div>

                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.FromDay, getHtmlAttributes(isFormDetail, "form-control datepicker", string.Empty))
                            @Html.LabelFor(z => z.FromDay, new { @class = "form-label" })
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.FromTime, getHtmlAttributes(isFormDetail, "form-control timepicker", string.Empty))
                            @Html.LabelFor(z => z.FromTime, new { @class = "form-label" })
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.ToDay, getHtmlAttributes(isFormDetail, "form-control datepicker", string.Empty))
                            @Html.LabelFor(z => z.ToDay, new { @class = "form-label" })
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.ToTime, getHtmlAttributes(isFormDetail, "form-control timepicker", string.Empty))
                            @Html.LabelFor(z => z.ToTime, new { @class = "form-label" })
                        </div>
                    </div>
                </div>



                <div class="col-sm-12">
                    <div class="form-group form-float">
                        <div class="form-line">

                            @Html.TextBoxFor(z => z.Description, getHtmlAttributes(isFormDetail, "form-control", string.Empty))

                            @Html.LabelFor(z => z.Description, new { @class = "form-label" })
                        </div>
                    </div>
                </div>





            </div>

            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" id="btnSubmition" class="btn btn-info btn-lg m-l-15 waves-effect">@(Model?.Id <= 0   ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>

                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>

                    @*@if (Model?.Id > 0)
                    {
                    <button type="button" id="Detailsmodal" class="btn btn-info btn-lg m-l-15 waves-effect">   @ERP.ResourcePack.Common.Settings.Data  </button>
                    }*@


                </div>
            </div>
        }

    </div>
</div>
<script>
    const setInUseValue = function () {
        $("#AllDay").val($('#AllDay').is(':checked'));
    }

</script>
@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled)
        {
            return new { @class = CssClass, Disabled = Disabled };
        }
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}

