@using ERP.Web.UI.Models.ViewModels.Warehouses
@model IvInventorySettingVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);
}
<div class="card" style="display:@(formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString() ? "none":"block" ) ">
    <div class="body">
        <div class="row clearfix">
            <div class="col-sm-5">
                @Html.LabelFor(z => z.IvWarehouseId, new { @class = "form-label label-required" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model != null && Model.IvWarehouseId != null)
                        {
                            var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.IvWarehouseId, NameAr = Model.IvWarehouses.WarehouseName, NameEn = Model.IvWarehouses.WarehouseName } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.IvWarehouseId);

                            @Html.DropDownListFor(z => z.IvWarehouseId, selectList, new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.IvWarehouseId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }

                        @Html.ValidationMessageFor(z => z.IvWarehouseId)
                    </div>
                </div>
            </div>

            <div class="col-sm-5">
                <div class="row clearfix">
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(m => m.HasIssue, new { style = " position: relative; opacity: initial; pointer-events: inherit;" })<label>@ERP.ResourcePack.Warehouses.IvInventorySetting.HasIssue</label>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(m => m.HasReceive, new { style = " position: relative; opacity: initial; pointer-events: inherit;" })<label>@ERP.ResourcePack.Warehouses.IvInventorySetting.HasReceive</label>
                    </div>
                </div>
            </div>
        </div>
        

            <div class="row clearfix text-center">
                <div class="col-sm-4"></div>
                <div class="col-sm-4">
                    <div class="form-group m-2">
                        <button id="btnAddUserWharehousePrivilageDetailRow" onclick="return AddUserWharehousePrivilageDetails()" class="btn btn-success">@ERP.ResourcePack.Common.Settings.BtnAddNew</button>
                        <button style="display:none;" id="btnUpdateUserWharehousePrivilageDetailsRow" onclick="return UpdateUserWharehousePrivilageDetailsRow()" class="btn btn-info">@ERP.ResourcePack.Common.Settings.BtnUpdate</button>
                        <button style="display:none;" id="btnCancelUserWharehousePrivilageDetailRow" onclick="clearWharehouseFormAdding(); $('#btnCancelUserWharehousePrivilageDetailRow').hide();$('#btnUpdateUserWharehousePrivilageDetailsRow').hide();$('#btnAddUserWharehousePrivilageDetailRow').show();" class="btn btn-danger">@ERP.ResourcePack.Common.Settings.BtnCancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

