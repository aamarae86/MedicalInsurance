@using ERP.Web.UI.Models.ViewModels.Warehouses
@using ERP.Web.UI.Models.ViewModels.General
@model IvInventorySettingVM
@{
    ViewBag.Title = ERP.ResourcePack.Warehouses.IvInventorySetting.Title;
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(FndLookupValuesVM.NameAr) : nameof(FndLookupValuesVM.NameEn);
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString()|| formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString();
}

<div class="card">
    <div class="body">
        <div class="header">
            <h2><strong>@ERP.ResourcePack.Accounts.GlJeHeaders.MasterData</strong></h2>
        </div>
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.Warehouses.IvInventorySettingController.PostIvInventorySetting), "IvInventorySetting", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.IvInventorySettingPriceListDetailsListStr)
            @Html.HiddenFor(z => z.UserWarehousesPrivilegesListStr)
            <div class="row clearfix">
                <div class="col-sm-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.SettingNumber, getHtmlAttributes(true, "form-control", string.Empty))
                            @Html.LabelFor(z => z.SettingNumber, new { @class = "form-label" })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(z => z.SettingNumber)
                </div>
                <div class="col-sm-4">
                    @Html.LabelFor(z => z.UserId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-group">
                            @if (Model != null && Model.UserId != null)
                            {
                                var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.UserId, NameAr = Model.UserName, NameEn = Model.UserName } };
                                var selectList = new SelectList(list, "Id", nameof(FndLookupValuesVM.NameAr), Model.UserId);

                                @Html.DropDownListFor(z => z.UserId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.UserId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }

                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    @*<input type="checkbox" style=" position: relative; opacity: initial; pointer-events: inherit;" id="ShowItemCost" name="ShowItemCost" value="ShowItemCost"><label>@ERP.ResourcePack.Warehouses.IvInventorySetting.ShowItemCost</label>*@
                    @Html.CheckBoxFor(m => m.ShowItemCost, new { style = " position: relative; opacity: initial; pointer-events: inherit;" })<label>@ERP.ResourcePack.Warehouses.IvInventorySetting.ShowItemCost</label>
                </div>





            </div>
        }

    </div>
</div>

@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled)
        {
            return new { @class = CssClass, Disabled = Disabled };
        }
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}

