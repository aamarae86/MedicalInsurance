@using ERP.Web.UI.Models.ViewModels.PmPropertiesModule
@model PmOtherPaymentTypesVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);

}
<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(
            nameof(ERP.Web.UI.Controllers.PmPropertiesModule.PmOtherPaymentTypesController.PostPmOtherPaymentTypes), "PmOtherPaymentTypes",
            new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.codeComUtilityIds)
            @Html.HiddenFor(z => z.codeComUtilityTexts)
            <div class="row clearfix">
                @Html.Action(nameof(ERP.Web.UI.Controllers.Accounts.GlAccDetailsController.DrawGlAccController), "GlAccDetails",
               new { glAccHeadersVMs = ViewData["ListGlAccHeadersVM"] == null ? new List<ERP.Web.UI.Models.ViewModels.Accounts.GlAccHeadersVM>() : ViewData["ListGlAccHeadersVM"] as List<ERP.Web.UI.Models.ViewModels.Accounts.GlAccHeadersVM> })

            </div>
            <div class="row clearfix">
                <div class="col-sm-6">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.PaymentTypeName, new { @class = "form-control" })
                            @Html.LabelFor(z => z.PaymentTypeName, new { @class = "form-label" })
                        </div>
                        @Html.ValidationMessageFor(z => z.PaymentTypeName)
                    </div>
                </div>
                <div class="col-sm-6">
                    @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString())
                    {
                        <p>
                            @if (Model.IsActive)
                            {
                                <i class="fas fa-check text-success fa-2x"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger fa-2x"></i>
                            }
                            <span>@Html.LabelFor(z => z.IsActive)</span>
                        </p>
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString())
                    {
                        <p>
                            <label>
                                @if (Model.IsActive)
                                {
                                    <input type="checkbox" onclick="mainForm.IsActive.value = $('#IsActiveAlt').is(':checked')" checked id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                }
                                else
                                {
                                    <input type="checkbox" onclick="mainForm.IsActive.value = $('#IsActiveAlt').is(':checked')" id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                }
                                <span>@Html.LabelFor(z => z.IsActive)</span>

                            </label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <label>
                                <input type="checkbox" onclick="mainForm.IsActive.value = $('#IsActiveAlt').is(':checked')" id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" checked="mainForm.IsActive.value"/>
                                <span>@Html.LabelFor(z => z.IsActive)</span>
                            </label>
                        </p>
                    }

                    <input type="hidden" id="@nameof(Model.IsActive)" name="@nameof(Model.IsActive)" value="@(formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString() ? "true" : Model.IsActive.ToString())" />
                </div>
            </div>

        }

        <div class="row clearfix">
            <div class="form-group text-center form-float">
                <button type="submit" id="btnSubmition" class="btn btn-info btn-lg m-l-15 waves-effect">@(Model == null ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>
                <div id="submitLoader" style="display:none">
                    <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                </div>
            </div>
        </div>

    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>
@Html.Partial("~/ViewsScripts/GlAccDetails/GlAccDetailsScripts.cshtml", ViewData["repeatTrigger"] = "")
@Html.Partial("~/ViewsScripts/GlAccDetails/GlAccDetailsScriptManager.cshtml")
@if (Model != null && !string.IsNullOrEmpty(Model.codeComUtilityIds) && !string.IsNullOrEmpty(Model.codeComUtilityTexts))
{
    <script>
        BindCodeComUtilitesDropDowns(__arrGlSelect2,'AccId','@Model.codeComUtilityIds','@Model.codeComUtilityTexts');
    </script>
}
<script>

    //$('input').focus(function () {
    //    $(this).parent().addClass('focused');
    //})

    //$('input').blur(function () {
    //    if ($(this).val() == '') {
    //        $(this).parent().removeClass('focused');
    //    } else {
    //        return false;
    //    }
    //})

    $('#main-modal .modal-footer button[data-dismiss="modal"]').on('click', function (e) {

        e.preventDefault();

        if (window.location.href.includes('ArSecurityDepositInterface'))  window.location.reload(); 

    });

    $('#main-modal .modal-header button[data-dismiss="modal"]').on('click', function (e) {

        e.preventDefault();

        if (window.location.href.includes('ArSecurityDepositInterface'))  window.location.reload(); 

    });

    $('#btnSubmition').on('click', function () {

        const resultCodeComUtility = GetCodeComUtilites(__arrGlSelect2, 'AccId');

        if (resultCodeComUtility == null) {
            toastr.warning('@ERP.ResourcePack.Accounts.ArCustomers.EnterAllData');
            return;
        }
        $('#codeComUtilityIds').val(resultCodeComUtility.idsStr);
        $('#codeComUtilityTexts').val(resultCodeComUtility.textsStr);

        $('#mainForm').submit();

        if ($('#mainForm').valid()) {

            $(this).hide();
            $('#submitLoader').show();

        } else {

            $(this).show();
            $('#submitLoader').hide();

        }

    });
</script>
