@using ERP.Web.UI.Models.ViewModels.Accounts
@model ApUserBankAccessVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);
}
<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(
            nameof(ERP.Web.UI.Controllers.Accounts.ApUserBankAccessController.PostApUserBankAccess), "ApUserBankAccess",
            new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
            <div class="row clearfix">
                <div class="col-sm-6">
                    @Html.LabelFor(z => z.UserId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && Model.User != null)
                            {
                                var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.UserId, NameAr = Model.User.UserName, NameEn = Model.User.UserName } };

                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.UserId);

                                @Html.DropDownListFor(z => z.UserId, selectList, new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.UserId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            }
                        </div>
                        @Html.ValidationMessageFor(z => z.UserId)
                    </div>
                </div>
                <div class="col-sm-6">
                    <button class="btn btn-info btn-lg m-l-15 waves-effect" id="AddAllBanksBtn">@ERP.ResourcePack.Accounts.ApUserBankAccess.AddAllBanks</button>
                </div>
                <div class="col-sm-6">
                    <label class="form-label">@ERP.ResourcePack.Accounts.ApUserBankAccess.BankName</label>
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && Model.ApBanksDto != null)
                            {
                                var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.ApBanksDto.Id, NameAr = Model.ApBanksDto.BankNameAr, NameEn = Model.ApBanksDto.BankNameEn } };

                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.ApBanksDto.Id);

                                @Html.DropDownListFor(z => z.ApBanksDto.Id, selectList, new { @Id = "ApBanksId", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.ApBanksDto.Id, Enumerable.Empty<SelectListItem>(), new { @Id = "ApBanksId", @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row clearfix">
                <div class="col-sm-6">
                    @Html.LabelFor(z => z.BankAccountId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && Model.ApBankAccounts != null)
                            {
                                var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.BankAccountId.Value, NameAr = Model.ApBankAccounts.BankAccountNameAr, NameEn = Model.ApBankAccounts.BankAccountNameEn } };

                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.BankAccountId);

                                @Html.DropDownListFor(z => z.BankAccountId, selectList, new { @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.BankAccountId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6" id="CheckDiv">
                    @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString())
                    {
                        <p>
                            @if (Model.IsPrimaryCash)
                            {
                                <i class="fas fa-check text-success fa-2x"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger fa-2x"></i>
                            }
                            <span>@Html.LabelFor(z => z.IsPrimaryCash)</span>
                        </p>
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString())
                    {
                        <p>
                            <label>
                                @if (Model != null && Model.ApBanksDto != null && Model.ApBanksDto.BankTypeLkpId != 35)
                                {
                                    if (Model.IsPrimaryCash)
                                    {
                                        <input type="checkbox" onclick="mainForm.IsPrimaryCash.value = $('#IsPrimaryCashAlt').is(':checked')" checked id="@nameof(Model.IsPrimaryCashAlt)" name="@nameof(Model.IsPrimaryCashAlt)" />
                                    }
                                    else
                                    {
                                        <input type="checkbox" onclick="mainForm.IsPrimaryCash.value = $('#IsPrimaryCashAlt').is(':checked')" id="@nameof(Model.IsPrimaryCashAlt)" name="@nameof(Model.IsPrimaryCashAlt)" />
                                    }
                                    <span>@Html.LabelFor(z => z.IsPrimaryCash)</span>
                                }
                            </label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <label>
                                <input type="checkbox" onclick="mainForm.IsPrimaryCash.value = $('#IsPrimaryCashAlt').is(':checked')" id="@nameof(Model.IsPrimaryCashAlt)" name="@nameof(Model.IsPrimaryCashAlt)" />
                                <span>@Html.LabelFor(z => z.IsPrimaryCash)</span>
                            </label>
                        </p>
                    }

                    <input type="hidden" id="@nameof(Model.IsPrimaryCash)" name="@nameof(Model.IsPrimaryCash)" value="@(formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString() ? "false" : Model.IsPrimaryCash.ToString())" />
                </div>
            </div>
            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" class="btn btn-info btn-lg m-l-15 waves-effect">@(Model == null ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>
                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>
<script>

    $('#mainForm #UserId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/User/GetUsersSelect2`));

    $('#mainForm #ApBanksId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/ApBanks/GetApBanksSelect2`));

    $('#mainForm #BankAccountId').select2({
        ajax: {
            url: `${baseUrl}/ApBankAccounts/GetApBankAccountsByBankIdSelect2`,
            dataType: 'json',
            headers: {
                'Authorization': `Bearer ${$_token}`
            },
            data: function (params) {
                params.page = params.page || 1;
                return {
                    bankId: $('#ApBanksId').find(':selected').val() ,
                    pageSize: pageSize,
                    pageNumber: params.page,
                    searchTerm: params.term,
                    lang: lang
                };
            },
            processResults: function (data, params) {

                params.page = params.page || 1;

                return {
                    results: data.result.results,
                    pagination: {
                        more: (params.page * pageSize) < data.result.total
                    }
                };
            }
        },
        placeholder: select2Placeholder,
        minimumInputLength: 0,
        allowClear: true,
        language: select2Lang
    });

    $('#AddAllBanksBtn').on('click', function () {

        if ($('#UserId').val()) {

            $.ajax({
                url: `${baseUrl}/ApUserBankAccess/AddAllBanks`,
                type: 'post',
                data: { "UserId": $('#UserId').val() },
                datatype: 'json',
                headers: {
                    'Authorization': `Bearer ${$_token}`
                },
                cache: false,
                success: function (value) {
                        toastr.success('@ERP.ResourcePack.Accounts.ApUserBankAccess.AddedAll');
                        LoadDataGrid();
                        _mainModal.modal('hide');
                }
            });

        } else {
            toastr.warning('@ERP.ResourcePack.Accounts.ApUserBankAccess.selectUser');
        }

    });
</script>

