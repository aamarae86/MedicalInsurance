@using ERP.Web.UI.Models.ViewModels.Accounts
@model GlJeHeadersVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.Accounts.CurrenciesVM.DescriptionAr) : nameof(ERP.Web.UI.Models.ViewModels.Accounts.CurrenciesVM.DescriptionEn);
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}
<div class="card">
    <div class="header">
        <h2><strong>@ERP.ResourcePack.Accounts.GlJeHeaders.MasterData</strong></h2>
    </div>
    <div class="body">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.Accounts.GlJeHeadersController.CreateGlJeHeaders), "GlJeHeaders",
            new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.JeSourceLkpId)
            @Html.HiddenFor(z => z.ListGljeLinesDetails)
            @Html.HiddenFor(z => z.PeriodId)
            <div class="row clearfix">
                <div class="col-md-6">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.JeName, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            @Html.LabelFor(z => z.JeName, new { @class = "form-label" })
                        </div>
                        @Html.ValidationMessageFor(z => z.JeName)
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group form-float">
                        <div class="form-line text-center">
                            @Html.TextBoxFor(z => z.JeDate, getHtmlAttributes(isFormDetail, "form-control", "datepicker"))
                            @Html.LabelFor(z => z.JeDate, new { @class = "form-label" })
                        </div>
                        @Html.ValidationMessageFor(z => z.JeDate)
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.PeriodNameEn, new { Value = Model != null && Model.GlPeriodsDetails != null ? Model.GlPeriodsDetails.PeriodNameEn : string.Empty, @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.PeriodNameEn, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.JeNumber, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.JeNumber, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.StatusLkpText, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.StatusLkpText, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(z => z.CurrencyId, new { @class = "form-label" })
                    <div class="form-group form-float">
                        <div class="form-line">
                            @if (Model != null && Model.Currency != null)
                            {
                                var list = new List<CurrenciesVM> { new CurrenciesVM { Id = (long)Model.CurrencyId, DescriptionAr = Model.Currency.DescriptionAr, DescriptionEn = Model.Currency.DescriptionEn } };
                                var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CurrencyId);

                                @Html.DropDownListFor(z => z.CurrencyId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                            else
                            {
                                @Html.DropDownListFor(z => z.CurrencyId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.CurrencyRate, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.CurrencyRate, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                        @Html.ValidationMessageFor(z => z.CurrencyRate)
                    </div>
                </div>
                <div class="col-md-3 d-none">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.JeSourceNo, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.JeSourceNo, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.TextBoxFor(z => z.JeSourceLkpText, new { @class = "form-control", @readonly = "readonly", @tabindex = "-1", @style = "pointer-events: none;" })
                            @Html.LabelFor(z => z.JeSourceLkpText, new { @class = "form-label", @style = "pointer-events: none;" })
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="form-group form-float">
                        <div class="form-line">
                            @Html.LabelFor(z => z.JeNotes, new { @class = "form-label" })
                            @Html.TextAreaFor(z => z.JeNotes, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled)
        {
            return new { @class = CssClass, Disabled = Disabled };
        }
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}