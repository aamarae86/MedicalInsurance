@using ERP.Web.UI.Models.ViewModels.Accounts
@model ArReceiptsVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    bool isFormDetail = Model != null && formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
}

<div class="card" style="display:@( formTrigger ==ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString() ? "none":"block" ) ">
    <div class="body">
        <div class="row clearfix">
            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.ReceiptDetailCheckNumber, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                        @Html.LabelFor(z => z.ReceiptDetailCheckNumber, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(z => z.ReceiptDetailBankLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div>
                        @Html.DropDownListFor(z => z.ReceiptDetailBankLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.ReceiptDetailMaturityDateStr, getHtmlAttributes(isFormDetail, "form-control", "datepicker"))
                        @Html.LabelFor(z => z.ReceiptDetailMaturityDateStr, new { @class = "form-label" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.ReceiptDetailAmount, getHtmlAttributes(isFormDetail, "form-control currency", string.Empty))
                        @Html.LabelFor(z => z.ReceiptDetailAmount, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-md-12">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextAreaFor(z => z.ReceiptDetailNotes, new { @class = "form-control" })
                        @Html.LabelFor(z => z.ReceiptDetailNotes, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-12 text-center">
                <div class="form-group">
                    <button id="btnAddMiscDetailRow" onclick="return AddMiscDetails()" class="btn btn-success">@ERP.ResourcePack.Common.Settings.BtnAddNew</button>
                    <button style="display:none;" id="btnUpdateMiscDetailRow" onclick="return UpdateMiscRow()" class="btn btn-info">@ERP.ResourcePack.Common.Settings.BtnUpdate</button>
                    <button style="display:none;" id="btnCancelMiscDetailRow" onclick="clearFormAdding(); $('#btnCancelMiscDetailRow').hide();$('#btnUpdateMiscDetailRow').hide();$('#btnAddMiscDetailRow').show();" class="btn btn-danger">@ERP.ResourcePack.Common.Settings.BtnCancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled) return new { @class = CssClass, Disabled = Disabled };
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}

