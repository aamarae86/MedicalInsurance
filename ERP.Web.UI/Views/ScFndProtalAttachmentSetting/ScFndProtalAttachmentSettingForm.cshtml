@using ERP.Web.UI.Models.ViewModels.General
@using ERP.Web.UI.Models.ViewModels.AidModule
@model ScFndProtalAttachmentSettingVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(FndLookupValuesVM.NameAr) : nameof(FndLookupValuesVM.NameEn);
}
<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(
            nameof(ERP.Web.UI.Controllers.AidModule.ScFndProtalAttachmentSettingController.PostScFndProtalAttachmentSetting), "ScFndProtalAttachmentSetting",
            new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)
        <div class="row clearfix">
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.AttachmentNameAr, new { @class = "form-control" })
                        @Html.LabelFor(z => z.AttachmentNameAr, new { @class = "form-label" })
                    </div>
                    @Html.ValidationMessageFor(z => z.AttachmentNameAr)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.AttachmentNameEn, new { @class = "form-control" })
                        @Html.LabelFor(z => z.AttachmentNameEn, new { @class = "form-label" })
                    </div>
                    @Html.ValidationMessageFor(z => z.AttachmentNameEn)
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.OrderBy, new { @class = "form-control", @type = "number", @min = "0" })
                        @Html.LabelFor(z => z.OrderBy, new { @class = "form-label" })
                    </div>
                    @Html.ValidationMessageFor(z => z.OrderBy)
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(z => z.RequestTypeId, new { @class = "form-label" })
                <div class="form-group form-float">
                    @if (Model != null && Model.ScFndAidRequestType != null)
                    {
                        var list = new List<ScFndAidRequestTypeVM> { new ScFndAidRequestTypeVM { Id = (long)Model.RequestTypeId, NameAr = Model.ScFndAidRequestType.NameAr, NameEn = Model.ScFndAidRequestType.NameEn } };
                        var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.RequestTypeId);

                        @Html.DropDownListFor(z => z.RequestTypeId, selectList, new { @class = "form-control" })
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString())
                    {
                        @Html.DropDownListFor(z => z.RequestTypeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(z => z.RequestTypeId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                    }
                </div>
                @Html.ValidationMessageFor(z => z.RequestTypeId)
            </div>
            <div class="col-sm-3">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Notes, new { @class = "form-control" })
                        @Html.LabelFor(z => z.Notes, new { @class = "form-label" })
                    </div>
                </div>
            </div>
        </div>

            <div class="row clearfix">
                <div class="col-md-6">
                    @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString())
                    {
                        <p>
                            @if (Model.IsActive)
                            {
                                <i class="fas fa-check text-success fa-2x"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger fa-2x"></i>
                            }
                            <span>@Html.LabelFor(z => z.IsActive)</span>
                        </p>
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString())
                    {
                        <p>
                            <label>
                                @if (Model.IsActive)
                                {
                                    <input type="checkbox" onclick="mainForm.IsActive.value = $('#IsActiveAlt').is(':checked')" checked id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                }
                                else
                                {
                                    <input type="checkbox" onclick="mainForm.IsActive.value = $('#IsActiveAlt').is(':checked')" id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                }
                                <span>@Html.LabelFor(z => z.IsActive)</span>
                            </label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <label>
                                <input type="checkbox" checked="$('#IsActive').val();" onclick="mainForm.IsActive.value = $('#IsActiveAlt').is(':checked')" id="@nameof(Model.IsActiveAlt)" name="@nameof(Model.IsActiveAlt)" />
                                <span>@Html.LabelFor(z => z.IsActive)</span>
                            </label>
                        </p>
                    }

                    <input type="hidden" id="@nameof(Model.IsActive)" name="@nameof(Model.IsActive)" value="@(formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString() ? "true" : Model.IsActive.ToString())" />
                </div>
                <div class="col-md-6">
                    @if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString())
                    {
                        <p>
                            @if (Model.IsRequired)
                            {
                                <i class="fas fa-check text-success fa-2x"></i>
                            }
                            else
                            {
                                <i class="fas fa-times text-danger fa-2x"></i>
                            }
                            <span>@Html.LabelFor(z => z.IsRequired)</span>
                        </p>
                    }
                    else if (formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Update.ToString())
                    {
                        <p>
                            <label>
                                @if (Model.IsRequired)
                                {
                                    <input type="checkbox" onclick="mainForm.IsRequired.value = $('#IsRequiredAlt').is(':checked')" checked id="@nameof(Model.IsRequiredAlt)" name="@nameof(Model.IsRequiredAlt)" />
                                }
                                else
                                {
                                    <input type="checkbox" onclick="mainForm.IsRequired.value = $('#IsRequiredAlt').is(':checked')" id="@nameof(Model.IsRequiredAlt)" name="@nameof(Model.IsRequiredAlt)" />
                                }
                                <span>@Html.LabelFor(z => z.IsRequired)</span>
                            </label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <label>
                                <input type="checkbox" checked="$('#IsRequired').val();" onclick="mainForm.IsRequired.value = $('#IsRequiredAlt').is(':checked')" id="@nameof(Model.IsRequiredAlt)" name="@nameof(Model.IsRequiredAlt)" />
                                <span>@Html.LabelFor(z => z.IsRequired)</span>
                            </label>
                        </p>
                    }

                    <input type="hidden" id="@nameof(Model.IsRequired)" name="@nameof(Model.IsRequired)" value="@(formTrigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Insert.ToString() ? "true" : Model.IsRequired.ToString())" />
                </div>
            </div>
            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" class="btn btn-primary btn-lg m-l-15 waves-effect">@(Model == null ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>
                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>

<script>

    $('#RequestTypeId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/ScFndAidRequestType/GetAidRequestTypeLkp`));

</script>

