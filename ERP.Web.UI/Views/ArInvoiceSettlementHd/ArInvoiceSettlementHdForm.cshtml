@using ERP.Web.UI.Models.ViewModels.AccountsExtend
@using ERP.Web.UI.Models.ViewModels.General
@using ERP.Web.UI.Models.ViewModels.AccountsExtend
@model ArInvoiceSettlementHdVM
@{
    ViewBag.Title = ERP.ResourcePack.AccountsExtend.ArInvoiceSettlementHd.Title;
   

    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    bool isFormDetail = Model != null && ViewBag.trigger == ERP.Front.Helpers.Enums.Common.FormTriggers.Show.ToString();
    ViewBag.Title = ERP.ResourcePack.AccountsExtend.ArInvoiceSettlementHd.Title;
    string formTrigger = ViewBag.trigger;
    string lkpKeyDdl = lang == "ar-EG" ? nameof(FndLookupValuesVM.NameAr) : nameof(FndLookupValuesVM.NameEn);
    string ArInvoiceSettlementStatus = lang == "ar-EG" ? ((Model == null || Model.FndStatusLkp == null) ? "جديد" : Model.FndStatusLkp.NameAr) : ((Model == null || Model.FndStatusLkp == null)? "New" : Model.FndStatusLkp.NameEn);

}


<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.AccountsExtend.ArInvoiceSettlementHdController.SaveArInvoiceSettlementHd), "ArInvoiceSettlementHd", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.StatusLkpId, new { @Value = 11575 })
            @Html.HiddenFor(z => z.ArInvoiceSettlementCrStr)
            @Html.HiddenFor(z => z.ArInvoiceSettlementDrStr)
            @Html.HiddenFor(z => z.Id)
            @Html.HiddenFor(z => z.EncId)
            @Html.HiddenFor(z => z.SettlementNumber)

            <div class="header d-flex justify-content-start align-items-center py-2">
                <i class="fas fa-2x fa-chevron-down down-arr mr-2" data-toggle="collapse" data-target="#first"></i>
                <p class="m-0">@ERP.ResourcePack.AccountsExtend.ArInvoiceSettlementHd.Title</p>
                <hr />
            </div>
            <div class="collapse show" id="first">
                <div class="row clearfix">
                    <div class="col-md-4">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextBoxFor(z => z.SettlementDate, getHtmlAttributes(isFormDetail, "form-control", "datepicker"))
                                @Html.LabelFor(z => z.SettlementDate, new { @class = "form-label" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-float">
                            <div class="form-line focused">
                                @Html.TextBox("OutStanding", string.Empty, getHtmlAttributes(true, "form-control", string.Empty))
                                @Html.Label("OutStanding", new { @class = "form-label" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextBox("StatusLkpText", ArInvoiceSettlementStatus, getHtmlAttributes(true, "form-control", string.Empty))
                                @Html.LabelFor(z => z.StatusLkpId, new { @class = "form-label" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row clearfix">
                    <div class="col-md-4">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextBoxFor(z => z.SettlementNumber, getHtmlAttributes(true, "form-control", string.Empty))
                                @Html.LabelFor(z => z.SettlementNumber, new { @class = "form-label" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.TextBoxFor(z => z.SettlementAmount, getHtmlAttributes(isFormDetail, "form-control currency ", string.Empty))
                                @Html.LabelFor(z => z.SettlementAmount, new { @class = "form-label" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(z => z.ArCustomerId, new { @class = "form-label" })
                        <div class="form-group form-float">
                            <div class="">
                                @if (Model != null && Model.ArCustomers != null)
                                {
                                    var list = new List<FndLookupValuesVM> { new FndLookupValuesVM { Id = (long)Model.ArCustomerId, NameAr = Model.ArCustomers.CustomerNameAr, NameEn = Model.ArCustomers.CustomerNameEn } };
                                    var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.ArCustomerId);

                                    @Html.DropDownListFor(z => z.ArCustomerId, selectList, getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                }
                                else
                                {
                                    @Html.DropDownListFor(z => z.ArCustomerId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                                }
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-4">

                        @Html.LabelFor(z => z.ArCustomerId, new { @class = "form-label" })
                        <div class="form-group form-float">
                            <div class="form-line">
                                @Html.DropDownListFor(z => z.ArCustomerId, Enumerable.Empty<SelectListItem>(), getHtmlAttributes(isFormDetail, "form-control", string.Empty))
                            </div>
                        </div>
                    </div>*@

                </div>

                @*<div class="row clearfix">

                    <div class="col-sm-3">
                        <div class="form-group">
                            <button id="btnAddDetailRow" onclick="return AddArInvoiceHdDetail()" class="btn btn-success">@ERP.ResourcePack.Common.Settings.BtnAddNew</button>
                            <button style="display:none;" id="btnUpdateDetailRow" onclick="return UpdateArInvoiceHdDetailRow()" class="btn btn-info">@ERP.ResourcePack.Common.Settings.BtnUpdate</button>
                            <button style="display:none;" id="btnCancelDetailRow" onclick="clearFormAdding(); $('#btnCancelDetailRow').hide();$('#btnUpdateDetailRow').hide();$('#btnAddDetailRow').show();" class="btn btn-danger">@ERP.ResourcePack.Common.Settings.BtnCancel</button>
                        </div>
                    </div>
                </div>*@
            </div>

        }


    </div>
</div>


@functions {
    object getHtmlAttributes(bool Disabled, string CssClass, string CssClass2)
    {
        if (Disabled) return new { @class = CssClass, Disabled = Disabled };
        return new { @class = $"{CssClass} {CssClass2}" };
    }
}
