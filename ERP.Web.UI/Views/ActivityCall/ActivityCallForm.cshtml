@using ERP.Web.UI.Models.ViewModels.CRM.ActivityCall
@using ERP.Web.UI.Models.ViewModels.General
@model ActivityCallVM
@{
    string formTrigger = ViewBag.trigger;
    string lang = Request.Cookies["Lang"] == null ? "ar-EG" : Request.Cookies["Lang"].Value.ToString();
    string lkpKeyDdl = lang == "ar-EG" ? nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameAr) : nameof(ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM.NameEn);
}
<div class="card">
    <div class="body">
        @using (Ajax.BeginForm(nameof(ERP.Web.UI.Controllers.CRM.ActivityCallController.PostActivityCall), "ActivityCall", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }, new { @id = "mainForm" }))
        {
            @Html.HiddenFor(z => z.Id)

        <div class="row clearfix">

            <div class="col-sm-4">
                @Html.LabelFor(z => z.RelatedToLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model?.RelatedToLkpId > 0 && !string.IsNullOrEmpty(Model.RelatedToLkpVal))
                        {
                            var list = new List<FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.RelatedToLkpId, NameAr = Model.RelatedToLkpVal, NameEn = Model.RelatedToLkpVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.RelatedToLkpId);
                            @Html.HiddenFor(s => s.RelatedToLkpId)

                            @Html.DropDownList("RelatedToLkpId0", selectList, new { @disabled = "disabled", @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.RelatedToLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.RelatedToLkpId)
                </div>
            </div>



            <div class="col-sm-4">
                @Html.LabelFor(z => z.CrmLeadsPersonsId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model?.CrmLeadsPersonsId > 0 && !string.IsNullOrEmpty(Model.CrmLeadsPersonsVal))
                        {
                            var list = new List<FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CrmLeadsPersonsId, NameAr = Model.CrmLeadsPersonsVal, NameEn = Model.CrmLeadsPersonsVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CrmLeadsPersonsId);
                            @Html.HiddenFor(s => s.CrmLeadsPersonsId)
                            @Html.DropDownList("CrmLeadsPersonsId0", selectList, new { @disabled = "disabled", @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.CrmLeadsPersonsId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.CrmLeadsPersonsId)
                </div>
            </div>



            <div class="col-sm-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.Subject, new { @class = "form-control" })
                        @Html.LabelFor(z => z.Subject, new { @class = "form-label" })
                    </div>
                </div>
            </div>


            <div class="col-sm-4">
                @Html.LabelFor(z => z.CallPurposeLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model != null && !string.IsNullOrEmpty(Model.CallPurposeLkpVal))
                        {
                            var list = new List<FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CallPurposeLkpId, NameAr = Model.CallPurposeLkpVal, NameEn = Model.CallPurposeLkpVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CallPurposeLkpId);

                            @Html.DropDownListFor(z => z.CallPurposeLkpId, selectList, new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.CallPurposeLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.CallPurposeLkpId)
                </div>
            </div>

            <div class="col-sm-4">
                @Html.LabelFor(z => z.CallTypeLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model != null && !string.IsNullOrEmpty(Model.CallTypeLkpVal))
                        {
                            var list = new List<FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CallTypeLkpId, NameAr = Model.CallTypeLkpVal, NameEn = Model.CallTypeLkpVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CallTypeLkpId);

                            @Html.DropDownListFor(z => z.CallTypeLkpId, selectList, new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.CallTypeLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.CallTypeLkpId)
                </div>
            </div>




            <div class="col-sm-4">
                @Html.LabelFor(z => z.CallDetailsLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model != null && !string.IsNullOrEmpty(Model.CallDetailsLkpVal))
                        {
                            var list = new List<FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CallDetailsLkpId, NameAr = Model.CallDetailsLkpVal, NameEn = Model.CallDetailsLkpVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CallDetailsLkpId);

                            @Html.DropDownListFor(z => z.CallDetailsLkpId, selectList, new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.CallDetailsLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.CallDetailsLkpId)
                </div>
            </div>

            <div class="col-sm-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.StartDate, new { @class = "form-control datepicker" })
                        @Html.LabelFor(z => z.StartDate, new { @class = "form-label" })
                    </div>
                    @Html.ValidationMessageFor(z => z.StartDate)
                </div>
            </div>

            <div class="col-sm-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.StartTime, new { @class = "form-control timepicker" })
                        @Html.LabelFor(z => z.StartTime, new { @class = "form-label" })
                    </div>
                    @Html.ValidationMessageFor(z => z.StartTime)
                </div>
            </div>

            <div class="col-sm-4">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextBoxFor(z => z.EndTime, new { @class = "form-control timepicker" })
                        @Html.LabelFor(z => z.EndTime, new { @class = "form-label" })
                    </div>
                    @Html.ValidationMessageFor(z => z.EndTime)
                </div>
            </div>






            <div class="col-sm-4">
                @Html.LabelFor(z => z.CallResultLkpId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model != null && !string.IsNullOrEmpty(Model.CallResultLkpVal))
                        {
                            var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CallResultLkpId, NameAr = Model.CallResultLkpVal, NameEn = Model.CallResultLkpVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CallResultLkpId);

                            @Html.DropDownListFor(z => z.CallResultLkpId, selectList, new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.CallResultLkpId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.CallResultLkpId)
                </div>
            </div>



            <div class="col-sm-4">
                @Html.LabelFor(z => z.CrmDealsId, new { @class = "form-label" })
                <div class="form-group form-float">
                    <div class="form-line">
                        @if (Model != null && !string.IsNullOrEmpty(Model.CrmDealsVal))
                        {
                            var list = new List<ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM> { new ERP.Web.UI.Models.ViewModels.General.FndLookupValuesVM { Id = Model.CrmDealsId.Value, NameAr = Model.CrmDealsVal, NameEn = Model.CrmDealsVal } };

                            var selectList = new SelectList(list, "Id", lkpKeyDdl, Model.CrmDealsId);


                            @Html.DropDownListFor(z => z.CrmDealsId, selectList, new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(z => z.CrmDealsId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                        }
                    </div>
                    @Html.ValidationMessageFor(z => z.CrmDealsId)
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.TextAreaFor(z => z.Description, new { @class = "form-control", @cols = 3, @rows = 10 })
                        @Html.LabelFor(z => z.Description, new { @class = "form-label" })
                    </div>
                </div>
            </div>


        </div>

            <div class="row clearfix">
                <div class="form-group text-center form-float">
                    <button type="submit" class="btn btn-info btn-lg m-l-15 waves-effect js-btnsubmit">@(Model?.Id <= 0 ? ERP.ResourcePack.Common.Settings.BtnSave : ERP.ResourcePack.Common.Settings.BtnUpdate)</button>
                 
                    
                    <div id="submitLoader" style="display:none">
                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/AssetsPack/assets/js/pages/forms/basic-form-elements.js"></script>


@*<script>
    $('#CrmDealsId').select2(ReturnSelect2ObjectDefault(`${baseUrl}/ActivityMeeting/GetCrmDealsSelect2`));

    $('#RelatedToLkpId').select2(ReturnSelect2ObjectForLkpsTypes('CrmLeadsPersonsType'));
    $('#CallPurposeLkpId').select2(ReturnSelect2ObjectForLkpsTypes('ActivityCallPurpose'));
    $('#CallTypeLkpId').select2(ReturnSelect2ObjectForLkpsTypes('ActivityCallType'));
    $('#CallDetailsLkpId').select2(ReturnSelect2ObjectForLkpsTypes('ActivityCallCallDetails'));
    $('#CallResultLkpId').select2(ReturnSelect2ObjectForLkpsTypes('ActivityCallCallResult'));

    $('#CrmLeadsPersonsId').select2({
        ajax: {
            url: `${baseUrl}/ActivityCall/GetCrmLeadsPersons_ByTypeSelect2`,
            dataType: 'json',
            headers: {
                'Authorization': `Bearer ${$_token}`
            },
            data: function (params) {
                params.page = params.page || 1;
                return {
                    TypeLkpId: $('#RelatedToLkpId').find(':selected').val(),
                    pageSize: pageSize,
                    pageNumber: params.page,
                    searchTerm: params.term,
                    lang: lang
                };
            },
            processResults: function (data, params) {

                params.page = params.page || 1;

                return {
                    results: data.result.results,
                    pagination: {
                        more: (params.page * pageSize) < data.result.total
                    }
                };
            }
        },
        placeholder: select2Placeholder,
        minimumInputLength: 0,
        allowClear: true,
        language: select2Lang
    });



</script>*@