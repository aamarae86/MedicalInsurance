<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AccountTax" xml:space="preserve">
    <value>Account Tax</value>
  </data>
  <data name="AccPayeeOnly" xml:space="preserve">
    <value>Acc Payee Only</value>
  </data>
  <data name="AdminitrativeAmmount" xml:space="preserve">
    <value>Adminitrative Ammount</value>
  </data>
  <data name="AdminitrativePercent" xml:space="preserve">
    <value>Adminitrative Percent %</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="AmountNotValid" xml:space="preserve">
    <value>Amount Not Valid</value>
  </data>
  <data name="BankAccountId" xml:space="preserve">
    <value>Bank Account</value>
  </data>
  <data name="BankBoxes" xml:space="preserve">
    <value>Account Banks/Boxes</value>
  </data>
  <data name="BeneficiaryName" xml:space="preserve">
    <value>Beneficiary Name</value>
  </data>
  <data name="CheckAmountNotValid" xml:space="preserve">
    <value>Check Amount Not Valid</value>
  </data>
  <data name="CheckNumber" xml:space="preserve">
    <value>Check Number</value>
  </data>
  <data name="CollectorId" xml:space="preserve">
    <value>Collector</value>
  </data>
  <data name="DetailData" xml:space="preserve">
    <value>Master Detail Data</value>
  </data>
  <data name="FillDetailTable" xml:space="preserve">
    <value>Fill detail table</value>
  </data>
  <data name="FormDetailNotValid" xml:space="preserve">
    <value>Form detail not valid</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Is Active ?</value>
  </data>
  <data name="ManualReceiptNumber" xml:space="preserve">
    <value>Manual Receipt Number</value>
  </data>
  <data name="ManualReceiptNumberLines" xml:space="preserve">
    <value>Manual Receipt Number Lines</value>
  </data>
  <data name="MasterData" xml:space="preserve">
    <value>Master Data</value>
  </data>
  <data name="MaturityDate" xml:space="preserve">
    <value>Maturity Date</value>
  </data>
  <data name="MiscPaymentAmount" xml:space="preserve">
    <value>Misc Payment Amount</value>
  </data>
  <data name="MiscPaymentDate" xml:space="preserve">
    <value>Misc Payment Date</value>
  </data>
  <data name="MiscReceiptDate" xml:space="preserve">
    <value>Misc Receipt Date</value>
  </data>
  <data name="MiscReceiptId" xml:space="preserve">
    <value>Misc Receipt</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Therefor about</value>
  </data>
  <data name="PaymentNumber" xml:space="preserve">
    <value>Payment Number</value>
  </data>
  <data name="PaymentTypeLkpId" xml:space="preserve">
    <value>Payment Type</value>
  </data>
  <data name="PortalUsersId" xml:space="preserve">
    <value>Portal User</value>
  </data>
  <data name="PostedLkpId" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ReceiptTypeLkpId" xml:space="preserve">
    <value>Receipt Type</value>
  </data>
  <data name="SearchForm" xml:space="preserve">
    <value>Search Form</value>
  </data>
  <data name="SourceCodeLkpId" xml:space="preserve">
    <value>Source Code</value>
  </data>
  <data name="TaxNo" xml:space="preserve">
    <value>Tax No</value>
  </data>
  <data name="TaxPercent" xml:space="preserve">
    <value>Tax Percent</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Issue Voucher</value>
  </data>
  <data name="Title2" xml:space="preserve">
    <value>Ap Misc Payment Lines</value>
  </data>
  <data name="Title3" xml:space="preserve">
    <value>Ap Misc Payment Details</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TrTax" xml:space="preserve">
    <value>TrTax</value>
  </data>
</root>