<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountDetails" xml:space="preserve">
    <value>Account Details</value>
  </data>
  <data name="AccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="BankLkpId" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="CardNo" xml:space="preserve">
    <value>CardNo</value>
  </data>
  <data name="CountryOfBrithLkpId" xml:space="preserve">
    <value>Country Of Birth</value>
  </data>
  <data name="CountryOfIssueLkpId" xml:space="preserve">
    <value>Country Of Issue</value>
  </data>
  <data name="DateOfExpiry" xml:space="preserve">
    <value>Date Of Expiry</value>
  </data>
  <data name="DateOfIssue" xml:space="preserve">
    <value>Date Of Issue</value>
  </data>
  <data name="DestinationCountryLkpId" xml:space="preserve">
    <value>Destination Country</value>
  </data>
  <data name="ElemantSalaryRepeated" xml:space="preserve">
    <value>You Cant Add The Same Element In Period Not Ended Yet</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EmployeeDetails" xml:space="preserve">
    <value>Employee Details</value>
  </data>
  <data name="EmployeeNumber" xml:space="preserve">
    <value>Employee Number</value>
  </data>
  <data name="EndPeriodId" xml:space="preserve">
    <value>End Period</value>
  </data>
  <data name="FatherName" xml:space="preserve">
    <value>Father Name</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstTitleLkpId" xml:space="preserve">
    <value>First Title</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="GenderLkpId" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="HireDate" xml:space="preserve">
    <value>Hire Date</value>
  </data>
  <data name="HrOrganizationsBranchId" xml:space="preserve">
    <value>Organization Branch</value>
  </data>
  <data name="HrOrganizationsDeptId" xml:space="preserve">
    <value>Organization Department</value>
  </data>
  <data name="HrPersonId" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="HrPersonSupervisorId" xml:space="preserve">
    <value>Supervisor</value>
  </data>
  <data name="IdentityCardNotes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="IdentityCasrdDetails" xml:space="preserve">
    <value>IdentityCardDetails</value>
  </data>
  <data name="IdNumber" xml:space="preserve">
    <value>IdNumber</value>
  </data>
  <data name="IssuedByLkpId" xml:space="preserve">
    <value>Issued By</value>
  </data>
  <data name="JobGradeLkpId" xml:space="preserve">
    <value>Job Grade</value>
  </data>
  <data name="JobLkpId" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="MaritalStatusLkpId" xml:space="preserve">
    <value>Marital Status</value>
  </data>
  <data name="NationalityLkpId" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="NoOfTickets" xml:space="preserve">
    <value>No Of Tickets</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="NoticeLength" xml:space="preserve">
    <value>Notice Length</value>
  </data>
  <data name="NoticeUnitLkpId" xml:space="preserve">
    <value>Notice Unit</value>
  </data>
  <data name="PassportDateOfExpiry" xml:space="preserve">
    <value>Date Of Expiry</value>
  </data>
  <data name="PassportDateOfIssue" xml:space="preserve">
    <value>Date Of Issue</value>
  </data>
  <data name="PassportDetails" xml:space="preserve">
    <value>Passport Details</value>
  </data>
  <data name="PassportNotes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="PassportNumber" xml:space="preserve">
    <value>Passport Number</value>
  </data>
  <data name="PassportTypeLkpId" xml:space="preserve">
    <value>Passport Type</value>
  </data>
  <data name="PaymentTypeLkpId" xml:space="preserve">
    <value>Payment Type</value>
  </data>
  <data name="PeriodsConflict" xml:space="preserve">
    <value>Periods Conflict</value>
  </data>
  <data name="PersonCategoryLkpId" xml:space="preserve">
    <value>Person Category</value>
  </data>
  <data name="PersonPhoto" xml:space="preserve">
    <value>Person Photo</value>
  </data>
  <data name="PersonTasksDetails" xml:space="preserve">
    <value>Employee Tasks Details</value>
  </data>
  <data name="PersonTypeLkpId" xml:space="preserve">
    <value>Person Type</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PlaceOfBirth" xml:space="preserve">
    <value>Place Of Birth</value>
  </data>
  <data name="PlaceOfIssue" xml:space="preserve">
    <value>Place Of Issue</value>
  </data>
  <data name="PlaceOfIssueLkpId" xml:space="preserve">
    <value>Place Of Issue</value>
  </data>
  <data name="ProbationEndDate" xml:space="preserve">
    <value>Probation End Date</value>
  </data>
  <data name="ProbationLength" xml:space="preserve">
    <value>Probation Length</value>
  </data>
  <data name="ProbationUnitLkpId" xml:space="preserve">
    <value>Probation Unit</value>
  </data>
  <data name="PyElementId" xml:space="preserve">
    <value>PyElement</value>
  </data>
  <data name="PyPayrollTypeId" xml:space="preserve">
    <value>Payroll Type</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="ResidencePlace" xml:space="preserve">
    <value>Residence Place</value>
  </data>
  <data name="SalaryElements" xml:space="preserve">
    <value>Salary Elements</value>
  </data>
  <data name="SearchForm" xml:space="preserve">
    <value>Search Form</value>
  </data>
  <data name="Segment1" xml:space="preserve">
    <value>Segment1</value>
  </data>
  <data name="Segment2" xml:space="preserve">
    <value>Segment2</value>
  </data>
  <data name="Segment3" xml:space="preserve">
    <value>Segment3</value>
  </data>
  <data name="Segment4" xml:space="preserve">
    <value>Segment4</value>
  </data>
  <data name="SponserLkpId" xml:space="preserve">
    <value>Sponser</value>
  </data>
  <data name="StartPeriodId" xml:space="preserve">
    <value>Start Period</value>
  </data>
  <data name="StatusLkpId" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TestPeriodDetails" xml:space="preserve">
    <value>Test Period Details</value>
  </data>
  <data name="TicketAfterYears" xml:space="preserve">
    <value>Ticket After Years</value>
  </data>
  <data name="TicketAmount" xml:space="preserve">
    <value>Ticket Amount</value>
  </data>
  <data name="TicketClassLkpId" xml:space="preserve">
    <value>Ticket Class</value>
  </data>
  <data name="TicketsDetails" xml:space="preserve">
    <value>Tickets Details</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Hr Persons</value>
  </data>
  <data name="VisaCost" xml:space="preserve">
    <value>Visa Cost</value>
  </data>
  <data name="VisaDetails" xml:space="preserve">
    <value>Visa Details</value>
  </data>
  <data name="VisaNumber" xml:space="preserve">
    <value>Visa Number</value>
  </data>
  <data name="VisaTypeLkpId" xml:space="preserve">
    <value>Visa Type</value>
  </data>
  <data name="WarnPeriodDetails" xml:space="preserve">
    <value>Warn Period Details</value>
  </data>
</root>