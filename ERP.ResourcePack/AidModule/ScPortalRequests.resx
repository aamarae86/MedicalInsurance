<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
    <comment>Checked</comment>
  </data>
  <data name="AidRequestTypeId" xml:space="preserve">
    <value>Aid Request Type</value>
    <comment>Unchecked</comment>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
    <comment>Checked</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
    <comment>Checked</comment>
  </data>
  <data name="DetailData" xml:space="preserve">
    <value>Detail Data</value>
  </data>
  <data name="Duties" xml:space="preserve">
    <value>Duties</value>
  </data>
  <data name="DutyDescription" xml:space="preserve">
    <value>Duty Description</value>
  </data>
  <data name="DutyType" xml:space="preserve">
    <value>Duty Type</value>
  </data>
  <data name="FillDetailTable" xml:space="preserve">
    <value>Fill Detail Table</value>
  </data>
  <data name="FinalDecision" xml:space="preserve">
    <value>Final Decision</value>
  </data>
  <data name="FromDate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="IdExpirationDate" xml:space="preserve">
    <value>Id Expiration Date</value>
    <comment>Unchecked</comment>
  </data>
  <data name="IdNumber" xml:space="preserve">
    <value>Id Number</value>
    <comment>Checked</comment>
  </data>
  <data name="IdNumberWife2" xml:space="preserve">
    <value>IdNumber Wife2</value>
    <comment>Checked</comment>
  </data>
  <data name="IdNumberWife3" xml:space="preserve">
    <value>IdNumber Wife3</value>
    <comment>Checked</comment>
  </data>
  <data name="IdNumberWife4" xml:space="preserve">
    <value>IdNumber Wife4</value>
    <comment>Checked</comment>
  </data>
  <data name="IdNumberWifeHusband1" xml:space="preserve">
    <value>Id Number Wife Husband1</value>
    <comment>Checked</comment>
  </data>
  <data name="IncomeDetails" xml:space="preserve">
    <value>IncomeDetails</value>
  </data>
  <data name="Incomes" xml:space="preserve">
    <value>Incomes</value>
  </data>
  <data name="IncomeSource" xml:space="preserve">
    <value>Income Source</value>
    <comment>Checked</comment>
  </data>
  <data name="IncomeSourceName" xml:space="preserve">
    <value>Income Source Name</value>
  </data>
  <data name="JobDescription" xml:space="preserve">
    <value>Job Description</value>
    <comment>Checked</comment>
  </data>
  <data name="MaritalStatus" xml:space="preserve">
    <value>Marital Status</value>
    <comment>Checked</comment>
  </data>
  <data name="MobileNumber" xml:space="preserve">
    <value>MobileNumber</value>
  </data>
  <data name="MobileNumber1" xml:space="preserve">
    <value>Mobile Number1</value>
    <comment>Checked</comment>
  </data>
  <data name="MobileNumber2" xml:space="preserve">
    <value>Mobile Number2</value>
    <comment>Checked</comment>
  </data>
  <data name="MonthlyAmount" xml:space="preserve">
    <value>Monthly Amount</value>
  </data>
  <data name="MonthlyIncomeAmount" xml:space="preserve">
    <value>Monthly Income Amount</value>
    <comment>Unchecked</comment>
  </data>
  <data name="MonthlyOutcomeAmount" xml:space="preserve">
    <value>Monthly Outcome Amount</value>
    <comment>Unchecked</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
    <comment>Checked</comment>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Nationality</value>
    <comment>Checked</comment>
  </data>
  <data name="NetValue" xml:space="preserve">
    <value>Net Value</value>
  </data>
  <data name="NewStatus" xml:space="preserve">
    <value>جديد</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>PhoneNumber</value>
    <comment>Checked</comment>
  </data>
  <data name="PleaseUploadRequiredFiles" xml:space="preserve">
    <value>Please Upload Required Files</value>
  </data>
  <data name="PortalRequestDate" xml:space="preserve">
    <value>Request Date</value>
    <comment>Unchecked</comment>
  </data>
  <data name="PortalRequestNumber" xml:space="preserve">
    <value>Request Number</value>
    <comment>Checked</comment>
  </data>
  <data name="PortalUsersId" xml:space="preserve">
    <value>Portal Users</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="Qualification" xml:space="preserve">
    <value>Qualification</value>
    <comment>Checked</comment>
  </data>
  <data name="Refuse" xml:space="preserve">
    <value>Refuse</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
    <comment>Checked</comment>
  </data>
  <data name="RequestData" xml:space="preserve">
    <value>Request Data</value>
  </data>
  <data name="RequestDetails" xml:space="preserve">
    <value>RequestDetails</value>
  </data>
  <data name="RequesterData" xml:space="preserve">
    <value>RequesterData</value>
  </data>
  <data name="ResearcherId" xml:space="preserve">
    <value>Researcher</value>
  </data>
  <data name="SearchForm" xml:space="preserve">
    <value>Search Form</value>
  </data>
  <data name="SelectAidType" xml:space="preserve">
    <value>Please Select Aid Request Type</value>
  </data>
  <data name="SourceLkpId" xml:space="preserve">
    <value>Source</value>
    <comment>Unchecked</comment>
  </data>
  <data name="StatusLkpId" xml:space="preserve">
    <value>Status</value>
    <comment>Unchecked</comment>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="StudyDecisionData" xml:space="preserve">
    <value>Study Decision Data</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Campains</value>
  </data>
  <data name="Title2" xml:space="preserve">
    <value>Request Study</value>
  </data>
  <data name="Title3" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="ToDate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalDuties" xml:space="preserve">
    <value>TotalDuties</value>
  </data>
  <data name="TotalIncomes" xml:space="preserve">
    <value>TotalIncomes</value>
  </data>
  <data name="VisitDate" xml:space="preserve">
    <value>Visit Date</value>
  </data>
  <data name="VisitStatusLkpId" xml:space="preserve">
    <value>Visit Status</value>
  </data>
  <data name="VisitTime" xml:space="preserve">
    <value>Visit Time</value>
  </data>
  <data name="WifeHusbandName1" xml:space="preserve">
    <value>Wife Husband Name1</value>
    <comment>Checked</comment>
  </data>
  <data name="WifeName2" xml:space="preserve">
    <value>Wife Name2</value>
    <comment>Checked</comment>
  </data>
  <data name="WifeName3" xml:space="preserve">
    <value>Wife Name3</value>
    <comment>Checked</comment>
  </data>
  <data name="WifeName4" xml:space="preserve">
    <value>Wife Name4</value>
    <comment>Checked</comment>
  </data>
</root>