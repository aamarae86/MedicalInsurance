// <auto-generated />
using System;
using ERP.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP.Migrations
{
    [DbContext(typeof(ERPDbContext))]
    [Migration("20220616070220_Add_HrpersonTimeSheet")]
    partial class Add_HrpersonTimeSheet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Abp.Application.Editions.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AbpEditions");
                });

            modelBuilder.Entity("Abp.Application.Features.FeatureSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FeatureSetting");
                });

            modelBuilder.Entity("Abp.Auditing.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<string>("CustomData")
                        .HasMaxLength(2000);

                    b.Property<string>("Exception")
                        .HasMaxLength(2000);

                    b.Property<int>("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime");

                    b.Property<int?>("ImpersonatorTenantId");

                    b.Property<long?>("ImpersonatorUserId");

                    b.Property<string>("MethodName")
                        .HasMaxLength(256);

                    b.Property<string>("Parameters")
                        .HasMaxLength(1024);

                    b.Property<string>("ReturnValue");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionDuration");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpAuditLogs");
                });

            modelBuilder.Entity("Abp.Authorization.PermissionSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("IsGranted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256);

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpRoleClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.Property<long?>("UserLinkId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("UserName");

                    b.HasIndex("TenantId", "EmailAddress");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "UserName");

                    b.ToTable("AbpUserAccounts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256);

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpUserClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLoginAttempt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<byte>("Result");

                    b.Property<string>("TenancyName")
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.Property<string>("UserNameOrEmailAddress")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UserId", "TenantId");

                    b.HasIndex("TenancyName", "UserNameOrEmailAddress", "Result");

                    b.ToTable("AbpUserLoginAttempts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserOrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("OrganizationUnitId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "RoleId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserRoles");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireDate");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.Property<string>("Value")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserTokens");
                });

            modelBuilder.Entity("Abp.BackgroundJobs.BackgroundJobInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsAbandoned");

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576);

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime?>("LastTryTime");

                    b.Property<DateTime>("NextTryTime");

                    b.Property<byte>("Priority");

                    b.Property<short>("TryCount");

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs");
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.Property<string>("Value")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "Name", "UserId")
                        .IsUnique();

                    b.ToTable("AbpSettings");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeTime");

                    b.Property<byte>("ChangeType");

                    b.Property<long>("EntityChangeSetId");

                    b.Property<string>("EntityId")
                        .HasMaxLength(48);

                    b.Property<string>("EntityTypeFullName")
                        .HasMaxLength(192);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeSetId");

                    b.HasIndex("EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChangeSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("ExtensionData");

                    b.Property<int?>("ImpersonatorTenantId");

                    b.Property<long?>("ImpersonatorUserId");

                    b.Property<string>("Reason")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "CreationTime");

                    b.HasIndex("TenantId", "Reason");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpEntityChangeSets");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EntityChangeId");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512);

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512);

                    b.Property<string>("PropertyName")
                        .HasMaxLength(96);

                    b.Property<string>("PropertyTypeFullName")
                        .HasMaxLength(192);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Icon")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDisabled");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpLanguages");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguageText", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(67108864);

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Source", "LanguageName", "Key");

                    b.ToTable("AbpLanguageTexts");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("ExcludedUserIds")
                        .HasMaxLength(131072);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96);

                    b.Property<byte>("Severity");

                    b.Property<string>("TenantIds")
                        .HasMaxLength(131072);

                    b.Property<string>("UserIds")
                        .HasMaxLength(131072);

                    b.HasKey("Id");

                    b.ToTable("AbpNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .HasMaxLength(96);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.HasIndex("TenantId", "NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.ToTable("AbpNotificationSubscriptions");
                });

            modelBuilder.Entity("Abp.Notifications.TenantNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96);

                    b.Property<byte>("Severity");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AbpTenantNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.UserNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("State");

                    b.Property<int?>("TenantId");

                    b.Property<Guid>("TenantNotificationId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "State", "CreationTime");

                    b.ToTable("AbpUserNotifications");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("ParentId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "Code");

                    b.ToTable("AbpOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnitRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("OrganizationUnitId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "RoleId");

                    b.ToTable("AbpOrganizationUnitRoles");
                });

            modelBuilder.Entity("ERP.Authorization.Roles.AbpKpiRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("KpiLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("RoleId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("KpiLkpId");

                    b.ToTable("AbpKpiRole");
                });

            modelBuilder.Entity("ERP.Authorization.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsStatic");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedName");

                    b.ToTable("AbpRoles");
                });

            modelBuilder.Entity("ERP.Authorization.Users.PortalUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("BirthDate");

                    b.Property<long?>("CaseCategoryLkpId");

                    b.Property<string>("CaseNumber")
                        .HasMaxLength(30);

                    b.Property<long>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("GenderLkpId");

                    b.Property<DateTime>("IdExpirationDate");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife2")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife3")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife4")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWifeHusband1")
                        .HasMaxLength(50);

                    b.Property<string>("Job")
                        .HasMaxLength(200);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<string>("JobWife2")
                        .HasMaxLength(200);

                    b.Property<string>("JobWife3")
                        .HasMaxLength(200);

                    b.Property<string>("JobWife4")
                        .HasMaxLength(200);

                    b.Property<string>("JobWifeHusband1")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("MaritalStatusLkpId");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<long>("NationalityLkpId");

                    b.Property<DateTime?>("PassportExpiryDate");

                    b.Property<DateTime?>("PassportIssueDate");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber");

                    b.Property<long?>("QualificationLkpId");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ResidenceEndDate");

                    b.Property<int?>("TenantCreatorId");

                    b.Property<string>("UnifiedNumber")
                        .HasMaxLength(100);

                    b.Property<long?>("UserId");

                    b.Property<string>("WifeHusbandName1")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName2")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName3")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CaseCategoryLkpId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("QualificationLkpId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("PortalUsers");
                });

            modelBuilder.Entity("ERP.Authorization.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("AuthenticationSource")
                        .HasMaxLength(64);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("EmailConfirmationCode")
                        .HasMaxLength(328);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEmailConfirmed");

                    b.Property<bool>("IsLockoutEnabled");

                    b.Property<bool>("IsPhoneNumberConfirmed");

                    b.Property<bool>("IsPortalUser");

                    b.Property<bool>("IsTwoFactorEnabled");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("LockoutEndDateUtc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("NormalizedEmailAddress")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("PasswordResetCode")
                        .HasMaxLength(328);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32);

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("SubEndDate");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedEmailAddress");

                    b.HasIndex("TenantId", "NormalizedUserName");

                    b.ToTable("AbpUsers");
                });

            modelBuilder.Entity("ERP.Currencies.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndNameAr")
                        .HasMaxLength(20);

                    b.Property<string>("AndNameEn")
                        .HasMaxLength(20);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsLocalCurrency");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LastWordAr")
                        .HasMaxLength(50);

                    b.Property<string>("LastWordEn")
                        .HasMaxLength(50);

                    b.Property<string>("MainCurrencyNameAr")
                        .HasMaxLength(50);

                    b.Property<string>("MainCurrencyNameEn")
                        .HasMaxLength(50);

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("SubCurrencyNameAr")
                        .HasMaxLength(50);

                    b.Property<string>("SubCurrencyNameEn")
                        .HasMaxLength(50);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ERP.MultiTenancy.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdminValue");

                    b.Property<int?>("BaseCurrency");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(100);

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(1024);

                    b.Property<long?>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int?>("EditionId");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasMaxLength(100);

                    b.Property<string>("Filepath");

                    b.Property<long?>("IndustryLkpId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(100);

                    b.Property<string>("ManagerName")
                        .HasMaxLength(200);

                    b.Property<string>("MobileNo")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("RepManagerName")
                        .HasMaxLength(200);

                    b.Property<string>("TaxRegNo")
                        .HasMaxLength(30);

                    b.Property<string>("Tel")
                        .HasMaxLength(100);

                    b.Property<string>("TenancyName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int?>("TenantDetailId");

                    b.Property<string>("TenantNameAr")
                        .HasMaxLength(100);

                    b.Property<string>("TenantNameEn")
                        .HasMaxLength(100);

                    b.Property<decimal?>("UserValue");

                    b.Property<string>("WebSite")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BaseCurrency");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("EditionId");

                    b.HasIndex("IndustryLkpId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenancyName");

                    b.HasIndex("TenantDetailId");

                    b.ToTable("AbpTenants");
                });

            modelBuilder.Entity("ERP.MultiTenancy.TenantDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxNo")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(100);

                    b.Property<string>("ManagerName")
                        .HasMaxLength(200);

                    b.Property<string>("MobileNo")
                        .HasMaxLength(100);

                    b.Property<string>("RepManagerName")
                        .HasMaxLength(200);

                    b.Property<string>("Tel")
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.Property<string>("TenantNameAr")
                        .HasMaxLength(100);

                    b.Property<string>("TenantNameEn")
                        .HasMaxLength(100);

                    b.Property<string>("WebSite")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantDetails");
                });

            modelBuilder.Entity("ERP._System.Calender.FndCalendarMemo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Memo");

                    b.Property<DateTime>("MemoDate");

                    b.Property<int>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FndCalendarMemo");
                });

            modelBuilder.Entity("ERP._System.Home.FavoritePage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("PageId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("FavoritePages");
                });

            modelBuilder.Entity("ERP._System._AffliateAccount.AffliateAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(200);

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("City")
                        .HasMaxLength(200);

                    b.Property<long?>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("LanguageLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Region")
                        .HasMaxLength(200);

                    b.Property<string>("Tel")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("LanguageLkpId");

                    b.ToTable("AffliateAccount");
                });

            modelBuilder.Entity("ERP._System._ApBankAccounts.ApBankAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<long?>("ApPdcCollAccountId");

                    b.Property<string>("BankAccountNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BankAccountNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("BankId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PdcCollAccountId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<long?>("cPdcAccountId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ApPdcCollAccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PdcCollAccountId");

                    b.HasIndex("cPdcAccountId");

                    b.ToTable("ApBankAccounts");
                });

            modelBuilder.Entity("ERP._System._ApBanks.ApBanks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BankNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("BankTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("BankTypeLkpId");

                    b.ToTable("ApBanks");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentDetails.ApMiscPaymentDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("BeneficiaryName")
                        .HasMaxLength(200);

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<long?>("MiscPaymentId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("MiscPaymentId");

                    b.ToTable("ApMiscPaymentDetails");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AccPayeeOnly")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<string>("BeneficiaryName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MiscPaymentDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("PaymentNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("PaymentTypeLkpId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("PostedlkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("PostedlkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.ToTable("ApMiscPaymentHeaders");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentLines.ApMiscPaymentLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndTaxTypeLkpId");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("MiscPaymentAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("MiscPaymentId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("PoratlCaseNumber");

                    b.Property<long?>("PortalUsersId");

                    b.Property<long?>("TaxAccountId");

                    b.Property<string>("TaxNo")
                        .HasMaxLength(100);

                    b.Property<decimal?>("TaxPercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("TaxPercentageLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("FndTaxTypeLkpId");

                    b.HasIndex("MiscPaymentId");

                    b.HasIndex("PortalUsersId");

                    b.HasIndex("TaxAccountId");

                    b.HasIndex("TaxPercentageLkpId");

                    b.ToTable("ApMiscPaymentLines");
                });

            modelBuilder.Entity("ERP._System._ApPdcInterface.ApPdcInterface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("ChqReturnResonLKPId");

                    b.Property<DateTime?>("ConfirmedDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime?>("ReversedDate");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long?>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("ChqReturnResonLKPId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ApPdcInterface");
                });

            modelBuilder.Entity("ERP._System._ApUserBankAccess.ApUserBankAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsPrimaryCash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("ApUserBankAccess");
                });

            modelBuilder.Entity("ERP._System._ApVendors.ApVendors", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("TaxNo")
                        .HasMaxLength(400);

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<long>("VendorCategoryLkpId");

                    b.Property<string>("VendorNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("VendorNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("VendorNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("WorkTel")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorCategoryLkpId");

                    b.ToTable("ApVendors");
                });

            modelBuilder.Entity("ERP._System._ArCustomers.ArCustomers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CustomerNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CustomerNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("CustomerNumber");

                    b.Property<long>("CustomerTypeLkpId");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<string>("HomeTel")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50);

                    b.Property<long?>("PaymentTermsLkpId");

                    b.Property<long>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("TaxNo");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<string>("Website")
                        .HasMaxLength(200);

                    b.Property<string>("WorkTel")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeLkpId");

                    b.HasIndex("PaymentTermsLkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArCustomers");
                });

            modelBuilder.Entity("ERP._System._ArDrCrHd.ArDrCrHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArCustomerId");

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("HdDate");

                    b.Property<string>("HdDrCrNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("HdTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("SourceLkpId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("HdTypeLkpId");

                    b.HasIndex("SourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArDrCrHd");
                });

            modelBuilder.Entity("ERP._System._ArDrCrTr.ArDrCrTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ArDrCrHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<long?>("FndTaxtypeId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("Tax");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ArDrCrHdId");

                    b.HasIndex("FndTaxtypeId");

                    b.ToTable("ArDrCrTr");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptDetails.ArMiscReceiptDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<long?>("MiscReceiptId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("MiscReceiptId");

                    b.ToTable("ArMiscReceiptDetails");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("BeneficentId");

                    b.Property<long?>("CollectorId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualReceiptNumber")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("MiscReceiptDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("PostedLkpId");

                    b.Property<string>("ReceiptNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("ReceiptTypeLkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<long?>("TransactionTypeLkpId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BeneficentId");

                    b.HasIndex("CollectorId");

                    b.HasIndex("PostedLkpId");

                    b.HasIndex("ReceiptTypeLkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("TransactionTypeLkpId");

                    b.ToTable("ArMiscReceiptHeaders");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptLines.ArMiscReceiptLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<long?>("AdminAccountID");

                    b.Property<decimal?>("AdministrativePercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("CaseId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualReceiptNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("MiscReceiptAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("MiscReceiptId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("ReceiptTypeLkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("SpContractDetailsId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AdminAccountID");

                    b.HasIndex("MiscReceiptId");

                    b.HasIndex("ReceiptTypeLkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("SpContractDetailsId");

                    b.ToTable("ArMiscReceiptLines");
                });

            modelBuilder.Entity("ERP._System._ArPdcInterface.ArPdcInterface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ConfirmedDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CustomerId");

                    b.Property<long?>("DepositBankAccountId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime?>("ReversedDate");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepositBankAccountId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArPdcInterface");
                });

            modelBuilder.Entity("ERP._System._ArSecurityDepositInterface.ArSecurityDepositInterface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ArCustomerId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("GlCodeComDetailsId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("SecurityDepositInterfaceNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(20);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("GlCodeComDetailsId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArSecurityDepositInterface");
                });

            modelBuilder.Entity("ERP._System._Counters.Counters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CounterName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("CounterTypeLkp");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("ERP._System._CountersDetails.CountersDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CounterId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("Value");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("CounterId");

                    b.ToTable("CountersDetails");
                });

            modelBuilder.Entity("ERP._System._FndCollectors.FndCollectors", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollectorNameAr")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CollectorNameEn")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("CollectorNumber");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("FndCollectors");
                });

            modelBuilder.Entity("ERP._System._FndLookupValues.FndLookupValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedValues");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LookupCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LookupType")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("NameAr")
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<bool>("YesNo");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("FndLookupValues");
                });

            modelBuilder.Entity("ERP._System._FndTaxType.FndTaxType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("TaxNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TaxNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TaxTypeNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("FndTaxType");
                });

            modelBuilder.Entity("ERP._System._GlAccDetails.GlAccDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DashboardMappingId");

                    b.Property<long>("GlAccHeaderId");

                    b.Property<bool>("IsDefault");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("GlAccHeaderId");

                    b.HasIndex("ParentId");

                    b.ToTable("GlAccDetails");
                });

            modelBuilder.Entity("ERP._System._GlAccHeaders.GlAccHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AttributeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsHide");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<int>("ShowOrder");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AttributeLkpId");

                    b.HasIndex("ParentId");

                    b.ToTable("GlAccHeaders");
                });

            modelBuilder.Entity("ERP._System._GlAccounts.GlAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Assets");

                    b.Property<bool>("BalanceSheet");

                    b.Property<bool>("CashFlow");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<bool>("Disabled");

                    b.Property<bool>("Expense");

                    b.Property<long?>("IdMap");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool>("Libility");

                    b.Property<long>("NatureOfAccountLkpId");

                    b.Property<long?>("ParentId");

                    b.Property<long?>("ParentIdMap");

                    b.Property<string>("ParentPath")
                        .HasMaxLength(4000);

                    b.Property<bool>("ProfitLoss");

                    b.Property<bool>("Revenue");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<bool>("TrialBalance");

                    b.HasKey("Id");

                    b.HasIndex("NatureOfAccountLkpId");

                    b.HasIndex("ParentId");

                    b.ToTable("GlAccounts");
                });

            modelBuilder.Entity("ERP._System._GlCodeComDetails.GlCodeComDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccId");

                    b.Property<long?>("Attribute1");

                    b.Property<long?>("Attribute2");

                    b.Property<long?>("Attribute3");

                    b.Property<long?>("Attribute4");

                    b.Property<long?>("Attribute5");

                    b.Property<long?>("Attribute6");

                    b.Property<long?>("Attribute7");

                    b.Property<long?>("Attribute8");

                    b.Property<long?>("Attribute9");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("Attribute1");

                    b.HasIndex("Attribute2");

                    b.HasIndex("Attribute3");

                    b.HasIndex("Attribute4");

                    b.HasIndex("Attribute5");

                    b.HasIndex("Attribute6");

                    b.HasIndex("Attribute7");

                    b.HasIndex("Attribute8");

                    b.HasIndex("Attribute9");

                    b.ToTable("GlCodeComDetails");
                });

            modelBuilder.Entity("ERP._System._GlJeHeaders.GlJeHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("JeDate");

                    b.Property<string>("JeName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("JeNotes")
                        .HasMaxLength(4000);

                    b.Property<string>("JeNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long?>("JeSourceId");

                    b.Property<long?>("JeSourceLkpId");

                    b.Property<string>("JeSourceNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PeriodId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("PostedBy");

                    b.Property<DateTime?>("PostedDate");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long?>("UnPostedBy");

                    b.Property<DateTime?>("UnPostedDate");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("JeSourceLkpId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("GlJeHeaders");
                });

            modelBuilder.Entity("ERP._System._GlJeLines.GlJeLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("GlJeHeaderId");

                    b.Property<long?>("JeDtlSourceLkpId");

                    b.Property<long?>("JeSourceId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("GlJeHeaderId");

                    b.HasIndex("JeDtlSourceLkpId");

                    b.ToTable("GlJeLines");
                });

            modelBuilder.Entity("ERP._System._GlMainAccounts.GlMainAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ReferenceCode")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("GlMainAccounts");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("EndDate");

                    b.Property<long>("GlPeriodsYearsId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PeriodNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PeriodNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("StartDate");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("GlPeriodsYearsId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("GlPeriodsDetails");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsYears", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("EndDate");

                    b.Property<long?>("JeId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("PeriodYear");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("GlPeriodsYears");
                });

            modelBuilder.Entity("ERP._System._Portal.PortalUserRelatives", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Employer")
                        .HasMaxLength(200);

                    b.Property<long>("GenderLkpId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("MaritalStatusLkpId");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<long?>("NationalityLkpId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("PortalUserDataId");

                    b.Property<long?>("QualificationLkpId");

                    b.Property<long?>("RelativesTypeLkpId");

                    b.HasKey("Id");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("PortalUserDataId");

                    b.HasIndex("QualificationLkpId");

                    b.HasIndex("RelativesTypeLkpId");

                    b.ToTable("PortalUserRelatives");
                });

            modelBuilder.Entity("ERP._System._Projects.CrmProjects", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentAr")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentEn")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Filepath")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("ProjectAdressAr")
                        .HasMaxLength(4000);

                    b.Property<string>("ProjectAdressEn")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("ProjectDate");

                    b.Property<string>("ProjectNameAr")
                        .HasMaxLength(200);

                    b.Property<string>("ProjectNameEn")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.ToTable("CrmProjects");
                });

            modelBuilder.Entity("ERP._System._ScCampainsAid.ScCampainsAid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AidAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("AidName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("CampainsAidCategoryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CampainsAidCategoryLkpId");

                    b.ToTable("ScCampainsAid");
                });

            modelBuilder.Entity("ERP._System._ScComityMembers.ScComityMembers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("MemberCategoryLkpId");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("MemberNumber")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryLkpId");

                    b.ToTable("ScComityMembers");
                });

            modelBuilder.Entity("ERP._System._TenantFreeModules.TenantFreeModules", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("Module_ID");

                    b.Property<int>("Tenant_ID");

                    b.HasKey("Id");

                    b.HasIndex("Module_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TenantFreeModules");
                });

            modelBuilder.Entity("ERP._System._TenantFreeModules.TenantRenewalHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmed");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("RenewToUserId");

                    b.Property<decimal>("RenewalPrice");

                    b.Property<string>("SessionId");

                    b.Property<int>("Tenant_ID");

                    b.Property<string>("TransactionNumber");

                    b.HasKey("Id");

                    b.HasIndex("RenewToUserId");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TenantRenewalHistories");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApDrCrHd.ApDrCrHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("HdDate");

                    b.Property<string>("HdDrCrNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("HdTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("SourceLkpId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long?>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("HdTypeLkpId");

                    b.HasIndex("SourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorId");

                    b.ToTable("ApDrCrHd");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApDrCrTr.ApDrCrTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ApDrCrHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<long?>("FndTaxtypeId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ApDrCrHdId");

                    b.HasIndex("FndTaxtypeId");

                    b.ToTable("ApDrCrTr");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApInvoiceHd.ApInvoiceHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("FromAccountId");

                    b.Property<DateTime>("HdDate");

                    b.Property<string>("HdInvNo")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("HdTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<decimal?>("PrepaidAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("PrepaidPeriod");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<long?>("ToAccountId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FromAccountId");

                    b.HasIndex("HdTypeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("ToAccountId");

                    b.HasIndex("VendorId");

                    b.ToTable("ApInvoiceHd");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApInvoiceHd._ApInvoiceTr.ApInvoiceTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("ApInvoiceHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Desc")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("TaxPercentageLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ApInvoiceHdId");

                    b.HasIndex("TaxPercentageLkpId");

                    b.ToTable("ApInvoiceTr");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardHd.ArJobCardAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArJobCardHdId");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .IsRequired();

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("ArJobCardHdId");

                    b.ToTable("ArJobCardAttachments");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardHd.ArJobCardHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArCustomerId");

                    b.Property<string>("ClaimNo")
                        .HasMaxLength(200);

                    b.Property<string>("CloseReason")
                        .HasMaxLength(4000);

                    b.Property<string>("ContactName")
                        .HasMaxLength(200);

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("CreditNote")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CustomerVatAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("CustomerVatPercentage")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("EndDate");

                    b.Property<decimal>("EstimatedAmount");

                    b.Property<decimal?>("ExcessAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("ExcessStatusLkpId");

                    b.Property<decimal?>("ExcessVatAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("ExcessVatPercentage")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("FndSalesMenId");

                    b.Property<DateTime?>("InvoiceDate");

                    b.Property<DateTime>("JobDate");

                    b.Property<string>("JobNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("JobTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LpoNo")
                        .HasMaxLength(200);

                    b.Property<decimal?>("OriginalAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("PoliceReportNo");

                    b.Property<long?>("PoliceReportSourceLkpId");

                    b.Property<DateTime>("StartDate");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<long>("VehicleColorLkpId");

                    b.Property<long>("VehicleEmirateLkpId");

                    b.Property<long>("VehicleMakeLkpId");

                    b.Property<long>("VehicleModelLkpId");

                    b.Property<string>("VehiclePlateNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("ExcessStatusLkpId");

                    b.HasIndex("FndSalesMenId");

                    b.HasIndex("JobTypeLkpId");

                    b.HasIndex("PoliceReportSourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VehicleColorLkpId");

                    b.HasIndex("VehicleEmirateLkpId");

                    b.HasIndex("VehicleMakeLkpId");

                    b.HasIndex("VehicleModelLkpId");

                    b.ToTable("ArJobCardHd");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardPayment._ArJobCardPaymentHd.ArJobCardPaymentHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArJobCardHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<string>("TransactionNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ArJobCardHdId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArJobCardPaymentHd");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardPayment._ArJobCardPaymentTr.ArJobCardPaymentTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArJobCardPaymentHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SourceId");

                    b.Property<long>("SourceTypeLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("ArJobCardPaymentHdId");

                    b.HasIndex("SourceTypeLkpId");

                    b.ToTable("ArJobCardPaymentTr");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArReceipts.ArReceiptDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("ReceiptId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ArReceiptDetails");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArReceipts.ArReceipts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArCustomerId");

                    b.Property<long>("BankAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualReceiptNo")
                        .HasMaxLength(30);

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime>("ReceiptDate");

                    b.Property<string>("ReceiptNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("RemitanceBankId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RemitanceBankId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArReceipts");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArReceipts.ArReceiptsOnAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("ApplyDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("ReceiptId");

                    b.Property<long>("ReceiptTypeLkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("ReceiptTypeLkpId");

                    b.ToTable("ArReceiptsOnAccount");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetCategory.FaAssetCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccDeprenAccountId");

                    b.Property<string>("AssetCategoryNameAr")
                        .HasMaxLength(200);

                    b.Property<string>("AssetCategoryNameEn")
                        .HasMaxLength(200);

                    b.Property<string>("AssetCategoryNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("AssetClearingAccountId");

                    b.Property<long?>("AssetCostAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeprenAccountId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("NoMonthsDepreciation");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccDeprenAccountId");

                    b.HasIndex("AssetClearingAccountId");

                    b.HasIndex("AssetCostAccountId");

                    b.HasIndex("DeprenAccountId");

                    b.ToTable("FaAssetCategory");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AssetDeprnDate");

                    b.Property<string>("AssetDeprnName")
                        .HasMaxLength(200);

                    b.Property<string>("AssetDeprnNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("AssetId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PeriodId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("FaAssetDeprnHd");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetId");

                    b.Property<long?>("FaAssetDeprnHdId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("FaAssetDeprnHdId");

                    b.ToTable("FaAssetDeprnTr");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnTrDtl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("FaAssetDeprnTrId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("FaAssetDeprnTrId");

                    b.ToTable("FaAssetDeprnTrDtl");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GL_ACCOUNT_SELECTION.GlAccountSelection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccType")
                        .HasMaxLength(1);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FlexField")
                        .HasMaxLength(100);

                    b.Property<string>("FromValue")
                        .HasMaxLength(240);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Seq");

                    b.Property<int>("TenantId");

                    b.Property<string>("ToValue")
                        .HasMaxLength(240);

                    b.Property<long>("UserId");

                    b.Property<string>("YesNo")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("GlAccountSelection");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GL_TRIAL_BALANCES.GlTrailBalances", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccAdesc")
                        .HasMaxLength(1500);

                    b.Property<string>("AccCode")
                        .HasMaxLength(100);

                    b.Property<string>("AccDesc")
                        .HasMaxLength(1500);

                    b.Property<string>("ChildCode")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Cr")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("Dr")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool?>("IsAccount");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Noa")
                        .HasMaxLength(1);

                    b.Property<decimal?>("ObCr")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("ObDr")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("GlTrailBalances");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GeneralUnPost.GeneralUnPost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ApMiscPaymentHeadersId");

                    b.Property<long?>("ArJobCardHdId");

                    b.Property<long?>("ArMiscReceiptHeadersId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("GlJeHeaderId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes");

                    b.Property<long?>("PmContractId");

                    b.Property<string>("RefuseReason");

                    b.Property<long?>("ScCommitteesId");

                    b.Property<long?>("ScPortalRequestMgrDecisionId");

                    b.Property<long>("SourceLkpId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("UnPostDate");

                    b.Property<string>("UnPostNo")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("ApMiscPaymentHeadersId");

                    b.HasIndex("ArJobCardHdId");

                    b.HasIndex("ArMiscReceiptHeadersId");

                    b.HasIndex("GlJeHeaderId");

                    b.HasIndex("PmContractId");

                    b.HasIndex("ScCommitteesId");

                    b.HasIndex("ScPortalRequestMgrDecisionId");

                    b.HasIndex("SourceLkpId");

                    b.ToTable("GeneralUnPost");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GlAccMappingHd.GlAccMappingHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MapName")
                        .HasMaxLength(200);

                    b.Property<string>("MapNumber")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("GlAccMappingHd");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GlAccMappingHd._GlAccMappingTr.GlAccMappingTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("GlAccMappingHdId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("TrName")
                        .HasMaxLength(200);

                    b.Property<long?>("TrNo");

                    b.HasKey("Id");

                    b.HasIndex("GlAccMappingHdId");

                    b.ToTable("GlAccMappingTr");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GlAccMappingHd._GlAccMappingTrDtl.GlAccMappingTrDtl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FromAccId");

                    b.Property<long>("GlAccMappingTrId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("ToAccId");

                    b.Property<long?>("TypeLkpId");

                    b.HasKey("Id");

                    b.HasIndex("FromAccId");

                    b.HasIndex("GlAccMappingTrId");

                    b.HasIndex("ToAccId");

                    b.HasIndex("TypeLkpId");

                    b.ToTable("GlAccMappingTrDtl");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._TmCharityBoxesType.TmCharityBoxesType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharityBoxTypeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("TmCharityBoxesType");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._ApPaymentsTransactions.ApPaymentsTransactions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AccPayeeOnly");

                    b.Property<long?>("BankAccountId");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("PaymentNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("PaymentTypeLkpId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorId");

                    b.ToTable("ApPaymentsTransactions");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._ApPrepaid.ApPrepaid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("CrAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DrAccountId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(20);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("TransactionDate");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CrAccountId");

                    b.HasIndex("DrAccountId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ApPrepaid");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._FaAssets.FaAssets", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AmortizationStartDate");

                    b.Property<string>("AssetKey")
                        .HasMaxLength(100);

                    b.Property<string>("AssetNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("AssetTypeLkpId");

                    b.Property<string>("BookingName")
                        .HasMaxLength(200);

                    b.Property<long>("BookingTypeLkpId");

                    b.Property<long?>("BoughtLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("CurrentCost")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("DatePlacedInService");

                    b.Property<long?>("DeprenMethodLkpId");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<long>("FaAssetCategoryId");

                    b.Property<bool?>("InPhysicalInventory");

                    b.Property<bool?>("InUse");

                    b.Property<bool?>("IsDepreciate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("LifeInMonths");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(200);

                    b.Property<string>("Model")
                        .HasMaxLength(200);

                    b.Property<decimal?>("OriginalCost")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("OwnershipLkpId");

                    b.Property<long?>("ParentAssetId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("ProrateConversionCode")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ProrateDate");

                    b.Property<decimal?>("SalvageValue")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("SalvageValueTypeLkpId");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100);

                    b.Property<long?>("StatusLkpId");

                    b.Property<string>("TagNumber")
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long>("Units");

                    b.Property<string>("WarrantyNumber")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeLkpId");

                    b.HasIndex("BookingTypeLkpId");

                    b.HasIndex("BoughtLkpId");

                    b.HasIndex("DeprenMethodLkpId");

                    b.HasIndex("FaAssetCategoryId");

                    b.HasIndex("OwnershipLkpId");

                    b.HasIndex("ParentAssetId");

                    b.HasIndex("SalvageValueTypeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("FaAssets");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._GlJeIntegrationHeaders.GlJeIntegrationHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("GlJeIntegrationDate");

                    b.Property<string>("GlJeIntegrationNotes")
                        .HasMaxLength(4000);

                    b.Property<string>("GlJeIntegrationNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long?>("GlJeIntegrationSourceId");

                    b.Property<long?>("GlJeIntegrationSourceLkpId");

                    b.Property<string>("GlJeIntegrationSourceNo")
                        .HasMaxLength(20);

                    b.Property<string>("JeName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PeriodId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GlJeIntegrationSourceLkpId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("GlJeIntegrationHeaders");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._GlJeIntegrationHeaders.GlJeIntegrationLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<long?>("ApVendorId");

                    b.Property<long?>("ArCustomerId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("GlJeIntegrationHeaderId");

                    b.Property<bool>("IsSettled");

                    b.Property<string>("JeIntegrationLineNotes")
                        .HasMaxLength(4000);

                    b.Property<long>("JeIntegrationLineTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ApVendorId");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("GlJeIntegrationHeaderId");

                    b.HasIndex("JeIntegrationLineTypeLkpId");

                    b.ToTable("GlJeIntegrationLines");
                });

            modelBuilder.Entity("ERP._System.__AidModule._FndSpell.FndSpell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("HunsAr")
                        .HasMaxLength(30);

                    b.Property<string>("HunsEn")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("OnesAr")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("OnesEn")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.Property<string>("TensAr")
                        .HasMaxLength(30);

                    b.Property<string>("TensEn")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("FndSpell");
                });

            modelBuilder.Entity("ERP._System.__AidModule._Portal._PortalUserAttachments.PortalUserAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PortalUserDataId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalUserDataId");

                    b.ToTable("PortalUserAttachments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._Portal._PortalUserDuties.PortalUserDuties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DutyDescription")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("DutyType")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PortalUserDataId");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("PortalUserDataId");

                    b.ToTable("PortalUserDuties");
                });

            modelBuilder.Entity("ERP._System.__AidModule._Portal._PortalUserIncomes.PortalUserIncomes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("IncomeSourceName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("MonthlyIncomeAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PortalUserDataId");

                    b.HasKey("Id");

                    b.HasIndex("PortalUserDataId");

                    b.ToTable("PortalUserIncomes");
                });

            modelBuilder.Entity("ERP._System.__AidModule._PortalUserData.PortalUserData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("BirthDate");

                    b.Property<long?>("CaseCategoryLkpId");

                    b.Property<long>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("GenderLkpId");

                    b.Property<DateTime>("IdExpirationDate");

                    b.Property<long>("IsZakat");

                    b.Property<string>("Job")
                        .HasMaxLength(200);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("MaritalStatusLkpId");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("PassportExpiryDate");

                    b.Property<DateTime?>("PassportIssueDate");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber");

                    b.Property<long>("PortalUserId");

                    b.Property<long?>("QualificationLkpId");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ResidenceEndDate");

                    b.Property<int>("TenantId");

                    b.Property<string>("UnifiedNumber")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CaseCategoryLkpId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("PortalUserId");

                    b.HasIndex("QualificationLkpId");

                    b.ToTable("PortalUserData");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampains.ScCampains", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampainName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CampainNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime>("ScCampainDate");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCampains");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampainsDetail.ScCampainsDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CampainAidId");

                    b.Property<long>("CampainId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PortalFndUsersId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CampainAidId");

                    b.HasIndex("CampainId");

                    b.HasIndex("PortalFndUsersId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCampainsDetail");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommittee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommitteeDate");

                    b.Property<string>("CommitteeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CommitteeNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCommittees");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AidAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CashingTo")
                        .HasMaxLength(200);

                    b.Property<long>("CommitteeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DecisionNotes")
                        .HasMaxLength(4000);

                    b.Property<bool>("IsMedicine");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("NoOfMonths");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("OtherAidLkpId");

                    b.Property<int?>("OtherMonthNo");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("RequestStudyId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("OtherAidLkpId");

                    b.HasIndex("RequestStudyId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCommitteeDetails");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeDetailsElectronicAid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("ElectronicTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScCommitteeDetailsId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ElectronicTypeLkpId");

                    b.HasIndex("ScCommitteeDetailsId");

                    b.ToTable("ScCommitteeDetailsElectronicAid");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeMemberDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CommitteeId");

                    b.Property<long>("CommitteeMemberId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("CommitteeMemberId");

                    b.ToTable("ScCommitteeMemberDetail");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheck.ScCommitteesCheck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("CommitteeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndLookupValuesId");

                    b.Property<string>("FromCheckNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("OperationDate");

                    b.Property<string>("OperationNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("FndLookupValuesId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCommitteesCheck");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheckDetails.ScCommitteesCheckDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("CommitteeDetailsId");

                    b.Property<long?>("CommitteesCheckId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("ScPortalRequestMgrDecisionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeDetailsId");

                    b.HasIndex("CommitteesCheckId");

                    b.HasIndex("ScPortalRequestMgrDecisionId");

                    b.ToTable("ScCommitteesCheckDetails");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScDeliveryOtherAids.ScDeliveryOtherAidDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CommitteeDetailsId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScDeliveryOtherAidsId");

                    b.Property<long?>("ScPortalRequestMgrDecisionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeDetailsId");

                    b.HasIndex("ScDeliveryOtherAidsId");

                    b.HasIndex("ScPortalRequestMgrDecisionId");

                    b.ToTable("ScDeliveryOtherAidDetails");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScDeliveryOtherAids.ScDeliveryOtherAids", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CommitteeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("OperationDate");

                    b.Property<string>("OperationNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScDeliveryOtherAids");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AidRequestTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsElectronics");

                    b.Property<bool>("IsMaintenance");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AidRequestTypeLkpId");

                    b.ToTable("ScFndAidRequestType");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndPortalIntervalSetting.ScFndPortalIntervalSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("NumberOfRequest");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("Id");

                    b.ToTable("ScFndPortalIntervalSetting");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndProtalAttachmentSetting.ScFndProtalAttachmentSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("AttachmentNameEn")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsRequired");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("OrderBy");

                    b.Property<long>("RequestTypeId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("ScFndProtalAttachmentSetting");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceContract.ScMaintenanceContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractTerms")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DurationOfImplementation")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("MaintenanceContractDate");

                    b.Property<string>("MaintenanceContractNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("OtherContractTerms")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("ScMaintenanceQuotationId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceQuotationId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScMaintenanceContract");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceContract.ScMaintenanceContractPayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("MaturityDate");

                    b.Property<int>("PayemtNo");

                    b.Property<string>("PaymentCondition")
                        .HasMaxLength(4000);

                    b.Property<long>("ScMaintenanceContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceContractId");

                    b.ToTable("ScMaintenanceContractPayments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenancePayments.ScMaintenancePayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AchievementRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("MaintenancePaymentDate");

                    b.Property<string>("MaintenancePaymentNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("ScMaintenanceContractPaymentId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceContractPaymentId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScMaintenancePayments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotationAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScMaintenanceQuotationId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceQuotationId");

                    b.ToTable("ScMaintenanceQuotationAttachments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotationDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScMaintenanceQuotationId");

                    b.Property<long>("ScMaintenanceTechnicalReportDetailId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceQuotationId");

                    b.HasIndex("ScMaintenanceTechnicalReportDetailId");

                    b.ToTable("ScMaintenanceQuotationDetails");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime>("QuotationDate");

                    b.Property<string>("QuotationNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("ScMaintenanceTechnicalReportId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceTechnicalReportId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorId");

                    b.ToTable("ScMaintenanceQuotations");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PortalRequestId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("ScCommitteeDetailId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<DateTime>("TechnicalReportDate");

                    b.Property<string>("TechnicalReportNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("ScCommitteeDetailId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScMaintenanceTechnicalReport");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReportAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScMaintenanceTechnicalReportId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceTechnicalReportId");

                    b.ToTable("ScMaintenanceTechnicalReportAttachments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReportDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScMaintenanceTechnicalReportId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ScMaintenanceTechnicalReportId");

                    b.ToTable("ScMaintenanceTechnicalReportDetail");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<long>("AidRequestTypeId");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("FinalDecision")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("IdExpirationDate");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife2")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife3")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife4")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWifeHusband1")
                        .HasMaxLength(50);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MaritalStatus");

                    b.Property<string>("MobileNumber1")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("PortalRequestDate");

                    b.Property<string>("PortalRequestNumber")
                        .HasMaxLength(30);

                    b.Property<long>("PortalUsersId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("Qualification");

                    b.Property<string>("Region");

                    b.Property<long?>("ResearcherId");

                    b.Property<long>("SourceLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<string>("WifeHusbandName1")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName2")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName3")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AidRequestTypeId");

                    b.HasIndex("PortalUsersId");

                    b.HasIndex("ResearcherId");

                    b.HasIndex("SourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScPortalRequests");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PortalRequestId");

                    b.Property<long>("ProtalAttachmentSettingId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("ProtalAttachmentSettingId");

                    b.ToTable("ScPortalRequestAttachments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestDuties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DutyDescription")
                        .HasMaxLength(200);

                    b.Property<string>("DutyType")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PortalRequestId");

                    b.Property<int>("TenantId");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.ToTable("ScPortalRequestDuties");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestIncome", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("IncomeSourceName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("MonthlyIncomeAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PortalRequestId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.ToTable("ScPortalRequestIncome");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPRMgrDecisionElectronicAid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("ElectronicTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("ScPortalRequestMgrDecisionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ElectronicTypeLkpId");

                    b.HasIndex("ScPortalRequestMgrDecisionId");

                    b.ToTable("ScPRMgrDecisionElectronicAid");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CashingTo")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("DecisionDate");

                    b.Property<string>("DecisionNumer")
                        .HasMaxLength(30);

                    b.Property<bool>("IsMedicine");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int?>("NumberOfMonths");

                    b.Property<long?>("OtherAidLkpId");

                    b.Property<int?>("OtherMonthNo");

                    b.Property<long?>("PortalRequestStudyId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("RefuseDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("RefuseForUpdateReason")
                        .HasMaxLength(4000);

                    b.Property<long?>("RefuseLkpId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("OtherAidLkpId");

                    b.HasIndex("PortalRequestStudyId");

                    b.HasIndex("RefuseLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScPortalRequestMgrDecision");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<string>("CashingTo")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsMedicine");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("NumberOfMonths");

                    b.Property<long?>("OtherAidLkpId");

                    b.Property<int?>("OtherMonthNo");

                    b.Property<long>("PortalRequestId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("RefuseDescription")
                        .HasMaxLength(4000);

                    b.Property<string>("RefuseForUpdateReason")
                        .HasMaxLength(4000);

                    b.Property<long?>("RefuseLkpId");

                    b.Property<string>("ResearcherDecision")
                        .HasMaxLength(4000);

                    b.Property<long?>("StatusLkpId");

                    b.Property<DateTime?>("StudyDate");

                    b.Property<string>("StudyDetails")
                        .HasMaxLength(4000);

                    b.Property<long?>("StudyLkpId");

                    b.Property<string>("StudyNumber")
                        .HasMaxLength(30);

                    b.Property<decimal?>("SuggestedAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("OtherAidLkpId");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("RefuseLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("StudyLkpId");

                    b.ToTable("ScPortalRequestStudy");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudyAttachment.ScPortalRequestStudyAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PortalRequestStudyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestStudyId");

                    b.ToTable("ScPortalRequestStudyAttachment");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestVisited.ScPortalRequestVisited", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("PortalRequestId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("VisitDate");

                    b.Property<long>("VisitStatusLkpId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("VisitStatusLkpId");

                    b.ToTable("ScPortalRequestVisited");
                });

            modelBuilder.Entity("ERP._System.__CRM.AboutUs.AboutUSSlider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("CrmAboutUsId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("SliderFilepath")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CrmAboutUsId");

                    b.ToTable("AboutUSSlider");
                });

            modelBuilder.Entity("ERP._System.__CRM.AboutUs.CrmAboutUs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsFilepath")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentAr")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentEn")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("HeaderNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("HeaderNameEN")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.ToTable("CrmAboutUs");
                });

            modelBuilder.Entity("ERP._System.__CRM.Deals.CrmDeals", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime?>("ClosingDate");

                    b.Property<string>("Company")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("CrmLeadsPersonsId");

                    b.Property<DateTime>("DealDate");

                    b.Property<string>("DealName");

                    b.Property<long>("DealTypeLkpId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("LeadSourceLkpId");

                    b.Property<string>("NextStep")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("Probability");

                    b.Property<long>("StageLkpID");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CrmLeadsPersonsId");

                    b.HasIndex("DealTypeLkpId");

                    b.HasIndex("LeadSourceLkpId");

                    b.HasIndex("StageLkpID");

                    b.ToTable("CrmDeals");
                });

            modelBuilder.Entity("ERP._System.__CRM.Deals.CrmDealsAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("CrmDealsId");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CrmDealsId");

                    b.ToTable("CrmDealsAttachments");
                });

            modelBuilder.Entity("ERP._System.__CRM.Leads.CrmLeadsPersons", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName");

                    b.Property<decimal>("AnnualRevenue");

                    b.Property<string>("Assistant")
                        .HasMaxLength(150);

                    b.Property<string>("AssistantPhone")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<string>("Company")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("ConvertDate");

                    b.Property<long?>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CrmProductId");

                    b.Property<long?>("CrmServiceId");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("Department")
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("Email")
                        .HasMaxLength(150);

                    b.Property<bool>("EmailOptOutId");

                    b.Property<string>("Fax")
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("HomePhone")
                        .HasMaxLength(30);

                    b.Property<long?>("IndustryLkpId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<string>("LeadImage")
                        .HasMaxLength(2000);

                    b.Property<long?>("LeadSourceLkpId");

                    b.Property<long?>("LeadStatusIdLkp");

                    b.Property<string>("Mobile")
                        .HasMaxLength(30);

                    b.Property<int?>("NoOfEmployees");

                    b.Property<string>("OtherCity")
                        .HasMaxLength(30);

                    b.Property<long?>("OtherCountryLkpId");

                    b.Property<string>("OtherPhone")
                        .HasMaxLength(30);

                    b.Property<string>("OtherState")
                        .HasMaxLength(30);

                    b.Property<string>("OtherStreet")
                        .HasMaxLength(30);

                    b.Property<string>("OtherZipCode")
                        .HasMaxLength(30);

                    b.Property<string>("Phone")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("RatingLkpId");

                    b.Property<DateTime?>("RegisterDate");

                    b.Property<string>("SecondaryEmail")
                        .HasMaxLength(150);

                    b.Property<string>("ShowLink");

                    b.Property<string>("Skype")
                        .HasMaxLength(30);

                    b.Property<string>("State")
                        .HasMaxLength(30);

                    b.Property<string>("Street")
                        .HasMaxLength(2000);

                    b.Property<int>("TenantId");

                    b.Property<string>("Title")
                        .HasMaxLength(150);

                    b.Property<string>("Twitter")
                        .HasMaxLength(200);

                    b.Property<long?>("TypeLkpId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long?>("UserConvertId");

                    b.Property<string>("VendorName");

                    b.Property<bool?>("WasLead");

                    b.Property<string>("Website")
                        .HasMaxLength(500);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("CrmProductId");

                    b.HasIndex("CrmServiceId");

                    b.HasIndex("IndustryLkpId");

                    b.HasIndex("LeadSourceLkpId");

                    b.HasIndex("LeadStatusIdLkp");

                    b.HasIndex("OtherCountryLkpId");

                    b.HasIndex("RatingLkpId");

                    b.HasIndex("TypeLkpId");

                    b.ToTable("CrmLeadsPersons");
                });

            modelBuilder.Entity("ERP._System.__CRM.Services.CrmServices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentAr")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentEn")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Filepath")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("ServiceNameAr")
                        .HasMaxLength(200);

                    b.Property<string>("ServiceNameEn")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.ToTable("CrmServices");
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityCall.ActivityCall", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CallDetailsLkpId");

                    b.Property<long>("CallPurposeLkpId");

                    b.Property<long>("CallResultLkpId");

                    b.Property<long>("CallTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CrmDealsId");

                    b.Property<long>("CrmLeadsPersonsId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("RelatedToLkpId");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("Subject")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CallDetailsLkpId");

                    b.HasIndex("CallPurposeLkpId");

                    b.HasIndex("CallResultLkpId");

                    b.HasIndex("CallTypeLkpId");

                    b.HasIndex("CrmDealsId");

                    b.HasIndex("CrmLeadsPersonsId");

                    b.HasIndex("RelatedToLkpId");

                    b.ToTable("ActivityCall");
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityMeeting.ActivityMeeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllDay");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CrmDealsId");

                    b.Property<long>("CrmLeadsPersonsId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("FromDay");

                    b.Property<DateTime>("FromTime");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Location")
                        .HasMaxLength(200);

                    b.Property<long>("PartiReminderLkpId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("RelatedToLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Title")
                        .HasMaxLength(200);

                    b.Property<DateTime>("ToDay");

                    b.Property<DateTime>("ToTime");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CrmDealsId");

                    b.HasIndex("CrmLeadsPersonsId");

                    b.HasIndex("PartiReminderLkpId");

                    b.HasIndex("RelatedToLkpId");

                    b.ToTable("ActivityMeeting");
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityMeeting.ActivityMeetingParticipant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActivityMeetingId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("CrmLeadsPersonsId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("RelatedToLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityMeetingId");

                    b.HasIndex("CrmLeadsPersonsId");

                    b.HasIndex("RelatedToLkpId");

                    b.ToTable("ActivityMeetingParticipant");
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityTasks.ActivityTasks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CrmDealsId");

                    b.Property<long>("CrmLeadsPersonsId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("DueDate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("PriorityLkpId");

                    b.Property<long>("RelatedToLkpId");

                    b.Property<bool>("Reminder");

                    b.Property<DateTime>("ReminderDate");

                    b.Property<DateTime>("ReminderTime");

                    b.Property<long>("StatuesLkpId");

                    b.Property<string>("Subject")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CrmDealsId");

                    b.HasIndex("CrmLeadsPersonsId");

                    b.HasIndex("PriorityLkpId");

                    b.HasIndex("RelatedToLkpId");

                    b.HasIndex("StatuesLkpId");

                    b.ToTable("ActivityTasks");
                });

            modelBuilder.Entity("ERP._System.__CRM._CrmContactUs.CrmContactUs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentAr")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<string>("FilePath")
                        .HasMaxLength(4000);

                    b.Property<string>("HeaderNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("HeaderNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Phone1")
                        .HasMaxLength(50);

                    b.Property<string>("Phone2")
                        .HasMaxLength(50);

                    b.Property<int>("TenantId");

                    b.Property<string>("WorkingHours")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("CrmContactUs");
                });

            modelBuilder.Entity("ERP._System.__CRM._Projects.CrmProducts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentAr")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentEn")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Filepath")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("ProductNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ProductNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.ToTable("CrmProducts");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxActions.TmCharityBoxActions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActionsDate");

                    b.Property<string>("ActionsNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long>("TmSupervisorId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("TmSupervisorId");

                    b.ToTable("TmCharityBoxActions");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxActions._TmCharityBoxActionDetails.TmCharityBoxActionDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActionLkpId");

                    b.Property<long>("CharityBoxActionId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("NewCharityBoxId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("OldCharityBoxid");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long>("TmLocationSubId");

                    b.HasKey("Id");

                    b.HasIndex("ActionLkpId");

                    b.HasIndex("CharityBoxActionId");

                    b.HasIndex("NewCharityBoxId");

                    b.HasIndex("OldCharityBoxid");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("TmLocationSubId");

                    b.ToTable("TmCharityBoxActionDetails");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollect.TmCharityBoxCollect", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankAccountId");

                    b.Property<DateTime>("CollectDate");

                    b.Property<string>("CollectNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long?>("Value1000Dh");

                    b.Property<long?>("Value100Dh");

                    b.Property<long?>("Value10Dh");

                    b.Property<long?>("Value1Dh");

                    b.Property<long?>("Value200Dh");

                    b.Property<long?>("Value20Dh");

                    b.Property<long?>("Value25F");

                    b.Property<long?>("Value500Dh");

                    b.Property<long?>("Value50Dh");

                    b.Property<long?>("Value50F");

                    b.Property<long?>("Value5Dh");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("TmCharityBoxCollect");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollect._TmCharityBoxCollectDetails.TmCharityBoxCollectDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CharityBoxActionDetailId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("TmCharityBoxCollectId");

                    b.HasKey("Id");

                    b.HasIndex("CharityBoxActionDetailId");

                    b.HasIndex("TmCharityBoxCollectId");

                    b.ToTable("TmCharityBoxCollectDetails");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollect._TmCharityBoxCollectMembersDetail.TmCharityBoxCollectMembersDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("TmCharityBoxCollectId");

                    b.Property<long>("TmCharityBoxCollectMemberId");

                    b.HasKey("Id");

                    b.HasIndex("TmCharityBoxCollectId");

                    b.HasIndex("TmCharityBoxCollectMemberId");

                    b.ToTable("TmCharityBoxCollectMembersDetail");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollectMembers.TmCharityBoxCollectMembers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("MemberCategoryLkpId");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("MemberNumber")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryLkpId");

                    b.ToTable("TmCharityBoxCollectMembers");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxReceive.TmCharityBoxReceive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountCharityBox");

                    b.Property<long>("CharityTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("NoOfCharityBox");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime>("ReceiveDate");

                    b.Property<string>("ReceiveNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CharityTypeId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("TmCharityBoxReceive");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxes.TmCharityBoxes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharityBoxBarcode")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("CharityBoxName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CharityBoxNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("CharityTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("InternalCounterPerType");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TmCharityBoxReceiveId");

                    b.Property<long?>("TmSubLocationId");

                    b.Property<long?>("TmSupervisorId");

                    b.HasKey("Id");

                    b.HasIndex("CharityTypeId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("TmCharityBoxReceiveId");

                    b.HasIndex("TmSubLocationId");

                    b.HasIndex("TmSupervisorId");

                    b.ToTable("TmCharityBoxes");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmDamagedCharityBoxs.TmDamagedCharityBoxs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("DamagedCharityBoxsDate");

                    b.Property<string>("DamagedCharityBoxsNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long>("TmSupervisorId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("TmSupervisorId");

                    b.ToTable("TmDamagedCharityBoxs");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmDamagedCharityBoxs._TmDamagedCharityBoxDetails.TmDamagedCharityBoxDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CharityBoxActionDetailId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DamageReason")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("TmDamagedCharityBoxId");

                    b.HasKey("Id");

                    b.HasIndex("CharityBoxActionDetailId");

                    b.HasIndex("TmDamagedCharityBoxId");

                    b.ToTable("TmDamagedCharityBoxDetails");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmLocations.TmLocationSub", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("LocationId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.Property<string>("TmLocationSubName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TmLocationSubNumber")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("TmLocationSub");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmLocations.TmLocations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("LocationNumber")
                        .HasMaxLength(30);

                    b.Property<long>("RegionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("TmLocations");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmRegions.TmRegions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("RegionNumber")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CityLkpId");

                    b.ToTable("TmRegions");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmSupervisors.TmSupervisors", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("SourceLkpId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(200);

                    b.Property<string>("SupervisorNumber")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("TmSupervisors");
                });

            modelBuilder.Entity("ERP._System.__HR._HrAbsencesTypes.HrVacationsTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("MaximumDays")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("MaximumDaysPerYear")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<string>("VacationsTypeDesc")
                        .HasMaxLength(4000);

                    b.Property<string>("VacationsTypeName")
                        .HasMaxLength(200);

                    b.Property<string>("VacationsTypeNumber")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("HrVacationsTypes");
                });

            modelBuilder.Entity("ERP._System.__HR._HrOrganizations.HrOrganizations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long>("OrganizationTypeLkpId");

                    b.Property<long?>("ParentId");

                    b.Property<string>("ParentPath")
                        .HasMaxLength(2000);

                    b.Property<string>("ShortName")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationTypeLkpId");

                    b.HasIndex("ParentId");

                    b.ToTable("HrOrganizations");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonPermission.HrPermissionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PermissionName");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.ToTable("HrPermissionType");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonPermission.HrPersonPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("EndTime")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("FromTime")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("OperationNumber");

                    b.Property<DateTime>("PermissionDate");

                    b.Property<long>("PermissionTypeId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("TotalPermission")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<string>("permissionDetails");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("PermissionTypeId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("HrPersonPermission");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonRequestDocument.DocumentRequestType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DocumentRequestName");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.ToTable("DocumentRequestType");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonRequestDocument.HrPersonRequestDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("DocRequestDate");

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("RequestNumber");

                    b.Property<long>("RequestTypeId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("RequestTypeId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("HrPersonRequestDocument");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonTimeSheet.HrPersonTimeSheet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("EndTime")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("FromTime")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<string>("ProjectName");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("TimeSheetDate");

                    b.Property<string>("TimeSheetNumber");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.ToTable("HrPersonTimeSheet");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonVacations.HrPersonVacations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("EndDate");

                    b.Property<long>("HrPersonId");

                    b.Property<long>("HrVacationsTypeId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("OperationDate");

                    b.Property<string>("OperationNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime>("StartDate");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<decimal>("VacationBalance")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("HrVacationsTypeId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("HrPersonVacations");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons.HrPersonAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.ToTable("HrPersonAttachments");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons.HrPersons", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50);

                    b.Property<long?>("BankLkpId");

                    b.Property<DateTime>("BirthDate");

                    b.Property<long?>("CountryOfBrithLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DestinationCountryLkpId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("FirstTitleLkpId");

                    b.Property<long>("GenderLkpId");

                    b.Property<DateTime>("HireDate");

                    b.Property<long>("HrOrganizationsBranchId");

                    b.Property<long>("HrOrganizationsDeptId");

                    b.Property<long?>("HrPersonSupervisorId");

                    b.Property<long>("JobGradeLkpId");

                    b.Property<long>("JobLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LastName")
                        .HasMaxLength(200);

                    b.Property<long>("MaritalStatusLkpId");

                    b.Property<long>("NationalityLkpId");

                    b.Property<decimal?>("NoOfTickets")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("NoticeLength")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("NoticeUnitLkpId");

                    b.Property<long?>("PaymentTypeLkpId");

                    b.Property<long>("PersonCategoryLkpId");

                    b.Property<string>("PersonPhoto")
                        .HasMaxLength(200);

                    b.Property<long>("PersonTypeLkpId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ProbationEndDate");

                    b.Property<decimal?>("ProbationLength")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("ProbationUnitLkpId");

                    b.Property<long>("PyPayrollTypeId");

                    b.Property<string>("Region")
                        .HasMaxLength(200);

                    b.Property<string>("ResidencePlace")
                        .HasMaxLength(200);

                    b.Property<long?>("SponserLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<decimal?>("TicketAfterYears")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("TicketAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("TicketClassLkpId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("CountryOfBrithLkpId");

                    b.HasIndex("DestinationCountryLkpId");

                    b.HasIndex("FirstTitleLkpId");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("HrOrganizationsBranchId");

                    b.HasIndex("HrOrganizationsDeptId");

                    b.HasIndex("HrPersonSupervisorId");

                    b.HasIndex("JobGradeLkpId");

                    b.HasIndex("JobLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("NoticeUnitLkpId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("PersonCategoryLkpId");

                    b.HasIndex("PersonTypeLkpId");

                    b.HasIndex("ProbationUnitLkpId");

                    b.HasIndex("PyPayrollTypeId");

                    b.HasIndex("SponserLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("TicketClassLkpId");

                    b.ToTable("HrPersons");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonIdentityCard.HrPersonIdentityCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNo")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("DateOfExpiry");

                    b.Property<long>("HrPersonId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("Segment1")
                        .HasMaxLength(3);

                    b.Property<string>("Segment2")
                        .HasMaxLength(4);

                    b.Property<string>("Segment3")
                        .HasMaxLength(7);

                    b.Property<string>("Segment4")
                        .HasMaxLength(1);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.ToTable("HrPersonIdentityCard");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonPassportDetails.HrPersonPassportDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryOfIssueLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("DateOfExpiry");

                    b.Property<DateTime>("DateOfIssue");

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("PassportTypeLkpId");

                    b.Property<string>("PlaceOfIssue")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CountryOfIssueLkpId");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("PassportTypeLkpId");

                    b.ToTable("HrPersonPassportDetails");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonSalaryElements.HrPersonSalaryElements", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("EndPeriodId");

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("PyElementId");

                    b.Property<long>("StartPeriodId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EndPeriodId");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("PyElementId");

                    b.HasIndex("StartPeriodId");

                    b.ToTable("HrPersonSalaryElements");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonVisaDetails.HrPersonVisaDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("DateOfExpiry");

                    b.Property<DateTime>("DateOfIssue");

                    b.Property<long>("HrPersonId");

                    b.Property<long?>("IssuedByLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PlaceOfIssueLkpId");

                    b.Property<int>("TenantId");

                    b.Property<decimal?>("VisaCost")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("VisaNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("VisaTypeLkpId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("IssuedByLkpId");

                    b.HasIndex("PlaceOfIssueLkpId");

                    b.HasIndex("VisaTypeLkpId");

                    b.ToTable("HrPersonVisaDetails");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsAdditionHd.HrPersonsAdditionHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionName")
                        .HasMaxLength(200);

                    b.Property<string>("AdditionNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PeriodId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("HrPersonsAdditionHd");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsAdditionHd._HrPersonsAdditionTr.HrPersonsAdditionTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AdditionTypeLkpId");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("HrPersonAdditionHdId");

                    b.Property<long?>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AdditionTypeLkpId");

                    b.HasIndex("HrPersonAdditionHdId");

                    b.HasIndex("HrPersonId");

                    b.ToTable("HrPersonsAdditionTr");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsDeduction.HrPersonsDeductionHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DeductionName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("DeductionNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PeriodId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("HrPersonsDeductionHd");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsDeduction.HrPersonsDeductionTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("DeductionTypeLkpId");

                    b.Property<long>("HrPersonDeductionHdId");

                    b.Property<long>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("DeductionTypeLkpId");

                    b.HasIndex("HrPersonDeductionHdId");

                    b.HasIndex("HrPersonId");

                    b.ToTable("HrPersonsDeductionTr");
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollOperations.PyPayrollOperationPersonDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("DeductionAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("EarningAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PyPayrollOperationPersonId");

                    b.Property<long>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceName")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PyPayrollOperationPersonId");

                    b.HasIndex("SourceCodeLkpId");

                    b.ToTable("PyPayrollOperationPersonDetails");
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollOperations.PyPayrollOperationPersons", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50);

                    b.Property<long?>("BankLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("HrPersonId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PyPayrollOperationId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("PyPayrollOperationId");

                    b.ToTable("PyPayrollOperationPersons");
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollOperations.PyPayrollOperations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("HrPersonId");

                    b.Property<long?>("JobLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("OperationDate");

                    b.Property<string>("OperationNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<long>("PeriodId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("PyPayrollTypeId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonId");

                    b.HasIndex("JobLkpId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("PyPayrollTypeId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PyPayrollOperations");
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollTypes.PyPayrollTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PayrollTypeNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PyPayrollTypeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("PyPayrollTypes");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceHd.ArInvoiceHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArCustomerId");

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int?>("CurrancyId");

                    b.Property<decimal?>("CurrancyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("HdDate");

                    b.Property<string>("HdInvoiceNo")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("SourceLkpId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("CurrancyId");

                    b.HasIndex("SourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArInvoiceHd");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceTr.ArInvoiceTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ArInvoiceHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("TaxPercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TenxMigrationId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ArInvoiceHdId");

                    b.ToTable("ArInvoiceTr");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmContracts.FmBuildingsContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<long>("ContractId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmPropertiesId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("PmPropertiesId");

                    b.ToTable("FmBuildingsContracts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmContracts.FmContractVisits", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<long>("ContractId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("EngineerId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("VisitDate");

                    b.Property<string>("VisitNumber")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EngineerId");

                    b.ToTable("FmContractVisits");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmContracts.FmContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<long>("AdvAccountId");

                    b.Property<decimal>("AnnualAmount");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("ContractDate");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PaymentTypeLkpId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<decimal>("RentAmount");

                    b.Property<DateTime>("StartDate");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<string>("VendorContractNumber")
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AdvAccountId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorId");

                    b.ToTable("FmContracts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmEngineers.FmEngineers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EngineerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EngineerNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("HireDate");

                    b.Property<long?>("HrPersonsId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile1")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile2")
                        .HasMaxLength(50);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("HrPersonsId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("FmEngineers");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmMaintRequisitionsExe.FmMaintRequisitionsExe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("EngineerId");

                    b.Property<DateTime>("ExecuteDate");

                    b.Property<DateTime>("ExecuteTime");

                    b.Property<long>("ExecuteTypeLkpId");

                    b.Property<long?>("FmContractVisitsId");

                    b.Property<long?>("FmContractsId");

                    b.Property<long?>("FmMaintRequisitionsHdrId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("EngineerId");

                    b.HasIndex("ExecuteTypeLkpId");

                    b.HasIndex("FmContractVisitsId");

                    b.HasIndex("FmContractsId");

                    b.HasIndex("FmMaintRequisitionsHdrId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("FmMaintRequisitionsExe");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmMaintRequisitionsHdr.FmMaintRequisitionsHdr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CallerName")
                        .HasMaxLength(150);

                    b.Property<string>("ComplaintDetails")
                        .HasMaxLength(4000);

                    b.Property<long>("ComplaintTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30);

                    b.Property<long>("PmPropertiesId");

                    b.Property<DateTime?>("RequisitionDate");

                    b.Property<string>("RequisitionNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("RequisitionStatusLkpId");

                    b.Property<DateTime?>("RequisitionTime");

                    b.Property<int>("TenantId");

                    b.Property<long?>("UnitId");

                    b.Property<long?>("UnitTypeLkpId");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintTypeLkpId");

                    b.HasIndex("PmPropertiesId");

                    b.HasIndex("RequisitionStatusLkpId");

                    b.HasIndex("UnitId");

                    b.HasIndex("UnitTypeLkpId");

                    b.ToTable("FmMaintRequisitionsHdr");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmCancellationContracts.PmCancellationContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime?>("CancellationDate");

                    b.Property<string>("CancellationNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("FineAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int?>("FinePeriodPerDays");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PmContractId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PmContractId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmCancellationContracts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContract.PmContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AnnualRentAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Condition1")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition2")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition3")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition4")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition5")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("ContractDate");

                    b.Property<DateTime>("ContractEndDate");

                    b.Property<DateTime>("ContractEndDatePrint");

                    b.Property<string>("ContractNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ContractStartDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("InsuranceAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("ParentContractId");

                    b.Property<long>("PmActivityLkpId");

                    b.Property<long>("PmPaymentNoLkpId");

                    b.Property<long>("PmTenantId");

                    b.Property<long>("PmUnitTypeLkpId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("PropertyId");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("TaxNo")
                        .HasMaxLength(15);

                    b.Property<decimal>("TaxPercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ParentContractId");

                    b.HasIndex("PmActivityLkpId");

                    b.HasIndex("PmPaymentNoLkpId");

                    b.HasIndex("PmTenantId");

                    b.HasIndex("PmUnitTypeLkpId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmContract");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractAttachments.PmContractAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmContractAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractPayments.PmContractPayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<decimal>("PaymentNo")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PaymentTypeLkpId");

                    b.Property<long>("PmContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmContractPayments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractUnitDetails.PmContractUnitDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("PmContractId");

                    b.Property<long>("PropertiesUnitId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.HasIndex("PropertiesUnitId");

                    b.ToTable("PmContractUnitDetails");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherContractPayments.PmOtherContractPayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("OtherPaymentTypesId");

                    b.Property<long>("PmContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OtherPaymentTypesId");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmOtherContractPayments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherPaymentTypes.PmOtherPaymentTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PaymentTypeName")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("PmOtherPaymentTypes");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<long>("BankAccountId");

                    b.Property<long>("CashAccountId");

                    b.Property<long>("CityLkpId");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200);

                    b.Property<long>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("CurrentAccountId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<string>("HomePhoneNumber")
                        .HasMaxLength(32);

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<bool>("IsMainOwner");

                    b.Property<string>("JobName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(32);

                    b.Property<long>("NationalityLkpId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("OtherAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("OwnerNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("OwnerNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("OwnerNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PoBox")
                        .HasMaxLength(100);

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.Property<string>("Website")
                        .HasMaxLength(256);

                    b.Property<string>("WorkPhoneNumber")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CashAccountId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("CurrentAccountId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmOwners");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwnersTaxDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmActivityTypeLkpId");

                    b.Property<long>("PmOwnerId");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmActivityTypeLkpId");

                    b.HasIndex("PmOwnerId");

                    b.ToTable("PmOwnersTaxDetails");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<long>("BankAccountId");

                    b.Property<long?>("CityLkpId");

                    b.Property<decimal?>("CommissionPercentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("CommissionTypeLkpId");

                    b.Property<DateTime?>("CompletionDate");

                    b.Property<long?>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("LandNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MilkiyaNumber")
                        .HasMaxLength(30);

                    b.Property<int?>("NoOfFloors");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("PmOwnerId");

                    b.Property<long?>("PmPurposeLkpId");

                    b.Property<string>("PropertyNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PropertyNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PropertyNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal?>("PropertyValue")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Region")
                        .HasMaxLength(200);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("CommissionTypeLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("PmOwnerId");

                    b.HasIndex("PmPurposeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmProperties");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesAttachments.PmPropertiesAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PropertyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PmPropertiesAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesRevenueAccounts.PmPropertiesRevenueAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<long>("AdvanceAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PropertyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AdvanceAccountId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PmPropertiesRevenueAccounts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AreaSize")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("ElectricityNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("FinishesLkpId");

                    b.Property<string>("FloorLevel")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PmUnitDescLkpId");

                    b.Property<long>("PmUnitTypeLkpId");

                    b.Property<long>("PropertyId");

                    b.Property<string>("SewerageNumber")
                        .HasMaxLength(30);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("UnitNo")
                        .HasMaxLength(30);

                    b.Property<long?>("ViewLkpId");

                    b.Property<decimal>("YearlyRent")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("FinishesLkpId");

                    b.HasIndex("PmUnitDescLkpId");

                    b.HasIndex("PmUnitTypeLkpId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("ViewLkpId");

                    b.ToTable("PmPropertiesUnits");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnitsAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmPropertiesUnitstId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmPropertiesUnitstId");

                    b.ToTable("PmPropertiesUnitsAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<long?>("CityLkpId");

                    b.Property<DateTime?>("CommercialLicenseExpiryDate");

                    b.Property<string>("CommercialLicenseNumber")
                        .HasMaxLength(100);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200);

                    b.Property<long?>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<string>("HomePhoneNumber")
                        .HasMaxLength(32);

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<string>("JobName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("MaritalStatusLkpId");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(32);

                    b.Property<long?>("NationalityLkpId");

                    b.Property<string>("OtherAddress")
                        .HasMaxLength(4000);

                    b.Property<long?>("PassportCountryLkpId");

                    b.Property<DateTime?>("PassportExpiryDate");

                    b.Property<DateTime?>("PassportIssueDate");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100);

                    b.Property<long?>("PaymentMethodLkpId");

                    b.Property<string>("PoBox")
                        .HasMaxLength(100);

                    b.Property<string>("Region")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ResidenceEndDate");

                    b.Property<long?>("SpecialGenderLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("TenantNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TenantNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TenantNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Website")
                        .HasMaxLength(256);

                    b.Property<string>("WorkPhoneNumber")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("PassportCountryLkpId");

                    b.HasIndex("PaymentMethodLkpId");

                    b.HasIndex("SpecialGenderLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmTenants");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenantsAttachments.PmTenantsAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmTenantId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmTenantId");

                    b.ToTable("PmTenantsAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTerminateContracts.PmTerminateContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("FineAmount");

                    b.Property<bool?>("IsTransferDepositToCustomer");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PmContractId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("TerminationDate");

                    b.Property<string>("TerminationNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmTerminateContracts");
                });

            modelBuilder.Entity("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementCr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("ArInvoiceSettlementHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SourceId");

                    b.Property<long>("SourceLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ArInvoiceSettlementHdId");

                    b.ToTable("ArInvoiceSettlementCr");
                });

            modelBuilder.Entity("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementDr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("ArInvoiceSettlementHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SourceId");

                    b.Property<long>("SourceLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ArInvoiceSettlementHdId");

                    b.ToTable("ArInvoiceSettlementDr");
                });

            modelBuilder.Entity("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArCustomerId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("SettlementAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("SettlementDate");

                    b.Property<string>("SettlementNumber")
                        .IsRequired();

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArInvoiceSettlementHd");
                });

            modelBuilder.Entity("ERP._System.__SalesModule._FndSalesMen.FndSalesMen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("SalesManNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SalesManNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SalesManNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("FndSalesMen");
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvReturnSaleHd.IvReturnSaleHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("IvReturnSaleDate");

                    b.Property<string>("IvReturnSaleNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("IvSaleHdId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IvSaleHdId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("IvReturnSaleHd");
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvReturnSaleHd.IvReturnSaleTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Avilablequantity")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndTaxtypeId");

                    b.Property<long>("IvReturnSaleHdId");

                    b.Property<long>("IvSaleTrId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("RQty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("TrCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("FndTaxtypeId");

                    b.HasIndex("IvReturnSaleHdId");

                    b.HasIndex("IvSaleTrId");

                    b.ToTable("IvReturnSaleTr");
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvSaleHd.IvSaleHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArCustomerId");

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("FndSalesMenId");

                    b.Property<bool>("IsCash");

                    b.Property<long>("IvPriceListHdId");

                    b.Property<DateTime>("IvSaleDate");

                    b.Property<string>("IvSaleNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LpoNo")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FndSalesMenId");

                    b.HasIndex("IvPriceListHdId");

                    b.HasIndex("IvWarehouseId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("IvSaleHd");
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvSaleHd.IvSaleTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Avilablequantity")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndTaxtypeId");

                    b.Property<long>("IvItemId");

                    b.Property<long>("IvSaleHdId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("TrCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("FndTaxtypeId");

                    b.HasIndex("IvItemId");

                    b.HasIndex("IvSaleHdId");

                    b.ToTable("IvSaleTr");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<string>("BeneficentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("BeneficentNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<long?>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<long>("FirstTitleLkpId");

                    b.Property<long?>("GenderLkpId");

                    b.Property<string>("Job")
                        .HasMaxLength(200);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("LastTitleLkpId");

                    b.Property<string>("MobileNumber1")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<long?>("NationalityLkpId");

                    b.Property<string>("PoBox")
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("FirstTitleLkpId");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("LastTitleLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.ToTable("SpBeneficent");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficentAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SpBeneficentId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("SpBeneficentId");

                    b.ToTable("SpBeneficentAttachments");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficentBanks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AccountOwnerName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long>("BankLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDefault");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SpBeneficentId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("SpBeneficentId");

                    b.ToTable("SpBeneficentBanks");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCaseEditData.SpCaseEditData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NewAccountNumber")
                        .HasMaxLength(50);

                    b.Property<string>("NewAccountOwnerName")
                        .HasMaxLength(200);

                    b.Property<decimal>("NewAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("NewBankLkpId");

                    b.Property<string>("NewSponsFor")
                        .HasMaxLength(200);

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("OldAccountNumber")
                        .HasMaxLength(50);

                    b.Property<string>("OldAccountOwnerName")
                        .HasMaxLength(200);

                    b.Property<decimal>("OldAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("OldBankLkpId");

                    b.Property<string>("OldSponsFor")
                        .HasMaxLength(200);

                    b.Property<long?>("SpContractDetailsId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("SpCaseEditData");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCaseHistory.SpCaseHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BeneficentId");

                    b.Property<long>("CaseStatusLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("OperationNotes")
                        .HasMaxLength(4000);

                    b.Property<long>("OperationTypeLkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<long>("SpCaseId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BeneficentId");

                    b.HasIndex("CaseStatusLkpId");

                    b.HasIndex("OperationTypeLkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("SpCaseId");

                    b.ToTable("SpCaseHistory");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCases.SpCases", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("CaseName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CaseNumber")
                        .HasMaxLength(20);

                    b.Property<string>("Casephoto")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DescriptionOfHealthCondition")
                        .HasMaxLength(4000);

                    b.Property<long?>("EducationalLevelLkpId");

                    b.Property<long?>("EducationalStageLkpId");

                    b.Property<long?>("GenderLkpId");

                    b.Property<long?>("HealthStatusLkpId");

                    b.Property<DateTime?>("IdExpirationDate");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsStudy");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("MaritalStatusLkpId");

                    b.Property<decimal?>("MonthlyInstallment")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("NationalityLkpId");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime?>("RegistrationDate");

                    b.Property<long?>("RelativesTypeLkpId");

                    b.Property<string>("SchoolUniversityName")
                        .HasMaxLength(200);

                    b.Property<long?>("SpContractDetailsId");

                    b.Property<long>("SpFamilyId");

                    b.Property<long>("SponsorCategoryLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("SupervisorComments")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.Property<string>("TypeOfDisease")
                        .HasMaxLength(200);

                    b.Property<string>("TypeOfTreatment")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("EducationalLevelLkpId");

                    b.HasIndex("EducationalStageLkpId");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("HealthStatusLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("RelativesTypeLkpId");

                    b.HasIndex("SpContractDetailsId")
                        .IsUnique()
                        .HasFilter("[SpContractDetailsId] IS NOT NULL");

                    b.HasIndex("SpFamilyId");

                    b.HasIndex("SponsorCategoryLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("SpCases");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCases._SpCaseOperations.SpCaseOperations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime>("OperationDate");

                    b.Property<long>("OperationTypeLkpId");

                    b.Property<long>("ReasonLkpId");

                    b.Property<long>("SpContractDetailsId");

                    b.Property<long?>("SpNewContractDetailsId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OperationTypeLkpId");

                    b.HasIndex("ReasonLkpId");

                    b.HasIndex("SpContractDetailsId");

                    b.HasIndex("SpNewContractDetailsId");

                    b.ToTable("SpCaseOperations");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCasesAttachments.SpCasesAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("SpCaseId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("SpCaseId");

                    b.ToTable("SpCasesAttachments");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpContracts.SpContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ContractDate");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeductedLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PaymentTypeLkpId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("SpBeneficentId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("DeductedLkpId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("SpBeneficentId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("SpContracts");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpContracts._SpContractAttachments.SpContractAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SpContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("SpContractId");

                    b.ToTable("SpContractAttachments");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50);

                    b.Property<string>("AccountOwnerName")
                        .HasMaxLength(200);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long?>("BankLkpId");

                    b.Property<long>("CaseStatusLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("SpBeneficentBankId");

                    b.Property<long>("SpCaseId");

                    b.Property<long>("SpContractId");

                    b.Property<string>("SponsFor")
                        .HasMaxLength(200);

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("CaseStatusLkpId");

                    b.HasIndex("SpBeneficentBankId");

                    b.HasIndex("SpCaseId");

                    b.HasIndex("SpContractId");

                    b.ToTable("SpContractDetails");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpFamilies.SpFamilies", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50);

                    b.Property<string>("AccountOwner")
                        .HasMaxLength(50);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<long?>("BankLkpId");

                    b.Property<DateTime>("BirthDate");

                    b.Property<long?>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("FamilyNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("FatherDiedDate");

                    b.Property<string>("FatherDiedReason")
                        .HasMaxLength(200);

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("HousingStatusLkpId");

                    b.Property<long?>("HousingTypeLkpId");

                    b.Property<DateTime?>("IdExpirationDate");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<bool>("IsFatherDied");

                    b.Property<bool>("IsHasHouse");

                    b.Property<bool>("IsMotherDied");

                    b.Property<string>("Job")
                        .HasMaxLength(200);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("MaritalStatusLkpId");

                    b.Property<string>("MobileNumber1")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("MotherDiedDate");

                    b.Property<string>("MotherDiedReason")
                        .HasMaxLength(200);

                    b.Property<long?>("NationalityLkpId");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(200);

                    b.Property<string>("Region")
                        .HasMaxLength(200);

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<long?>("RelativesTypeLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("HousingStatusLkpId");

                    b.HasIndex("HousingTypeLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("RelativesTypeLkpId");

                    b.ToTable("SpFamilies");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpFamilyDuties.SpFamilyDuties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DutyDescription")
                        .HasMaxLength(200);

                    b.Property<string>("DutyType")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("SpFamilyId");

                    b.Property<int>("TenantId");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("SpFamilyId");

                    b.ToTable("SpFamilyDuties");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpFamilyIncomes.SpFamilyIncomes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("IncomeSourceName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("MonthlyIncomeAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("SpFamilyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("SpFamilyId");

                    b.ToTable("SpFamilyIncomes");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPaymentSetting.SpPaymentSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("ManagementPercentage")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("SponsorCategoryLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("ToDate");

                    b.HasKey("Id");

                    b.HasIndex("SponsorCategoryLkpId");

                    b.ToTable("SpPaymentSetting");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpCasesPaymentDeserving", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CaseStatusLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("DeservingAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("DeservingDate");

                    b.Property<string>("DeservingNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("DeservingPeriodId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("SpContractDetailsId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CaseStatusLkpId");

                    b.HasIndex("DeservingPeriodId");

                    b.HasIndex("SpContractDetailsId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("SpCasesPaymentDeserving");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpPaymentPersonDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ContractAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("ContractEndDate");

                    b.Property<DateTime>("ContractStartDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("ManagementPercentage")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("PeriodId");

                    b.Property<long?>("SpCasesPaymentDeservingId");

                    b.Property<long>("SpContractDetailsId");

                    b.Property<long>("SpPaymentPersonId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("SpCasesPaymentDeservingId");

                    b.HasIndex("SpContractDetailsId");

                    b.HasIndex("SpPaymentPersonId");

                    b.ToTable("SpPaymentPersonDetails");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpPaymentPersons", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CaseStatusLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("SpCaseId");

                    b.Property<long>("SpPaymentId");

                    b.Property<long>("SponsorCategoryLkpId");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CaseStatusLkpId");

                    b.HasIndex("SpCaseId");

                    b.HasIndex("SpPaymentId");

                    b.HasIndex("SponsorCategoryLkpId");

                    b.ToTable("SpPaymentPersons");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpPayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("FromPeriodId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PaymentNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("SpCaseId");

                    b.Property<long?>("SponsorCategoryLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long>("ToPeriodId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("FromPeriodId");

                    b.HasIndex("SpCaseId");

                    b.HasIndex("SponsorCategoryLkpId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("ToPeriodId");

                    b.ToTable("SpPayments");
                });

            modelBuilder.Entity("ERP._System.__Warehouses.IvWarehouses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDefault");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("WarehouseAddress")
                        .HasMaxLength(200);

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("WarehouseNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CityLkpId");

                    b.ToTable("IvWarehouses");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvAdjustmentHd.IvAdjustmentHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AdjustmentDate");

                    b.Property<string>("AdjustmentNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("AdjustmentTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("AdjustmentTypeLkpId");

                    b.HasIndex("IvWarehouseId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("IvAdjustmentHd");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvAdjustmentHd._IvAdjustmentTr.IvAdjustmentTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("CurrentQty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("IvAdjustmentHdId");

                    b.Property<long?>("IvItemId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("IvAdjustmentHdId");

                    b.HasIndex("IvItemId");

                    b.ToTable("IvAdjustmentTr");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvInventorySetting.IvInventorySetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("SettingNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("ShowItemCost");

                    b.Property<int>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IvInventorySetting");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvInventorySetting.IvInventorySettingPriceList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IvInventorySettingId");

                    b.Property<long>("IvPriceListHdId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("IvInventorySettingId");

                    b.HasIndex("IvPriceListHdId");

                    b.ToTable("IvInventorySettingPriceList");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvItems.IvItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AvgCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndTaxtypeId");

                    b.Property<bool?>("IsDonationItem");

                    b.Property<bool?>("IsItemObsolete");

                    b.Property<string>("ItemBarcode")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ItemMaxStk")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("ItemMinStk")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(200);

                    b.Property<string>("ItemNumber")
                        .HasMaxLength(20);

                    b.Property<decimal?>("ItemOrdQty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("ItemQtys")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("ItemRef1")
                        .HasMaxLength(30);

                    b.Property<string>("ItemRef2")
                        .HasMaxLength(30);

                    b.Property<long?>("IvItemsTypesConfigureId");

                    b.Property<long?>("IvUnitId");

                    b.Property<decimal?>("LastCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("ObsoleteDate");

                    b.Property<long?>("TaxPercentageLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("FndTaxtypeId");

                    b.HasIndex("IvItemsTypesConfigureId");

                    b.HasIndex("IvUnitId");

                    b.HasIndex("TaxPercentageLkpId");

                    b.ToTable("IvItems");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvItemsTypesConfigure.IvItemsTypesConfigure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfigureCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<string>("ParentPath")
                        .HasMaxLength(2000);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("IvItemsTypesConfigure");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvPriceListHd.IvPriceListHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PriceListName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PriceListNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("IvPriceListHd");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvPriceListHd.IvPriceListTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IvItemId");

                    b.Property<long>("IvPriceListHdId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("IvItemId");

                    b.HasIndex("IvPriceListHdId");

                    b.ToTable("IvPriceListTr");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReceiveHd.IvReceiveHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("HdReceiveDate");

                    b.Property<string>("HdReceiveNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PoPurchaseOrderHdId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IvWarehouseId");

                    b.HasIndex("PoPurchaseOrderHdId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorId");

                    b.ToTable("IvReceiveHd");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReceiveHd._IvReceiveTr.IvReceiveTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IvItemId");

                    b.Property<long>("IvReceiveHdId");

                    b.Property<long>("IvUnitId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PoPurchaseOrderTrId");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("IvItemId");

                    b.HasIndex("IvReceiveHdId");

                    b.HasIndex("IvUnitId");

                    b.HasIndex("PoPurchaseOrderTrId");

                    b.ToTable("IvReceiveTr");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReturnReceiveHd.IvReturnReceiveHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("IvReceiveHdId");

                    b.Property<DateTime>("IvReturnReceiveDate");

                    b.Property<string>("IvReturnReceiveNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IvReceiveHdId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("IvReturnReceiveHd");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReturnReceiveHd.IvReturnReceiveTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndTaxtypeId");

                    b.Property<long>("IvReceiveTrId");

                    b.Property<long>("IvReturnReceiveHdId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("RQty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("FndTaxtypeId");

                    b.HasIndex("IvReceiveTrId");

                    b.HasIndex("IvReturnReceiveHdId");

                    b.ToTable("IvReturnReceiveTr");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvStoreIssue.IvStoreIssueHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("BeneficiaryName")
                        .HasMaxLength(200);

                    b.Property<long?>("BeneficiaryTypeLkpId");

                    b.Property<string>("Comment")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IssueTypeLkpId");

                    b.Property<long>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<long>("StatusLkpId");

                    b.Property<DateTime>("StoreIssueDate");

                    b.Property<string>("StoreIssueNumber")
                        .HasMaxLength(20);

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BeneficiaryTypeLkpId");

                    b.HasIndex("IssueTypeLkpId");

                    b.HasIndex("IvWarehouseId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("IvStoreIssueHd");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvStoreIssue.IvStoreIssueTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AvgCost")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IvItemId");

                    b.Property<long>("IvStoreIssueHdId");

                    b.Property<long>("IvUnitId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("IvItemId");

                    b.HasIndex("IvStoreIssueHdId");

                    b.HasIndex("IvUnitId");

                    b.ToTable("IvStoreIssueTr");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvUnits.IvUnits", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(20);

                    b.Property<string>("UnitName")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("IvUnits");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvUserWarehousesPrivileges.IvUserWarehousesPrivileges", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("HasIssue");

                    b.Property<bool>("HasReceive");

                    b.Property<long?>("IvInventorySettingId");

                    b.Property<long>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("IvInventorySettingId");

                    b.HasIndex("IvWarehouseId");

                    b.HasIndex("UserId");

                    b.ToTable("IvUserWarehousesPrivileges");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvWarehouseItems.IvWarehouseItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("CurrentOnHand")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("IvItemId");

                    b.Property<long?>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("IvItemId");

                    b.HasIndex("IvWarehouseId");

                    b.ToTable("IvWarehouseItems");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionsForOrdering")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IvWarehouseId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("PostTime");

                    b.Property<long?>("PostUserId");

                    b.Property<DateTime>("PurchaseOrderDate");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasMaxLength(20);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("UnPostTime");

                    b.Property<long?>("UnPostUserId");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("IvWarehouseId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorId");

                    b.ToTable("PoPurchaseOrderHd");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("IvItemId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PoPurchaseOrderId");

                    b.Property<decimal>("QtyOrdered")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("ReceivedDate");

                    b.Property<decimal?>("ReceivedQty")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("IvItemId");

                    b.HasIndex("PoPurchaseOrderId");

                    b.ToTable("PoPurchaseOrderTr");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._PyElements.PyElements", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DebitAccountId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("ElementName")
                        .HasMaxLength(200);

                    b.Property<int>("ElementSerial");

                    b.Property<long>("ElementTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("DebitAccountId");

                    b.HasIndex("ElementTypeLkpId");

                    b.ToTable("PyElements");
                });

            modelBuilder.Entity("ERP._System._modules.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameAr")
                        .HasMaxLength(100);

                    b.Property<string>("NameEn")
                        .HasMaxLength(100);

                    b.Property<string>("Selector")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("ERP._System._modules.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocPathAr")
                        .HasMaxLength(200);

                    b.Property<string>("DocPathEn")
                        .HasMaxLength(200);

                    b.Property<string>("Icon")
                        .HasMaxLength(100);

                    b.Property<string>("Link")
                        .HasMaxLength(100);

                    b.Property<int>("ModuleId");

                    b.Property<string>("NameAr")
                        .HasMaxLength(100);

                    b.Property<string>("NameEn")
                        .HasMaxLength(100);

                    b.Property<string>("Selector")
                        .HasMaxLength(100);

                    b.Property<string>("VideoUrlAr")
                        .HasMaxLength(200);

                    b.Property<string>("VideoUrlEn")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.Property<int>("EditionId");

                    b.HasIndex("EditionId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("EditionFeatureSetting");
                });

            modelBuilder.Entity("Abp.MultiTenancy.TenantFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("TenantFeatureSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<int>("RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("RolePermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<long>("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("UserPermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.HasOne("ERP.Authorization.Roles.Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Settings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChangeSet")
                        .WithMany("EntityChanges")
                        .HasForeignKey("EntityChangeSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChange")
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.HasOne("Abp.Organizations.OrganizationUnit", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP.Authorization.Roles.AbpKpiRole", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndKpisLkp")
                        .WithMany("AbpKpiRoleCollection")
                        .HasForeignKey("KpiLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Authorization.Roles.Role", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("ERP.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("ERP.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("ERP.Authorization.Users.PortalUser", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCaseCategoryLkp")
                        .WithMany()
                        .HasForeignKey("CaseCategoryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "GenderFndLookupValues")
                        .WithMany()
                        .HasForeignKey("GenderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "MaritalStatusFndLookupValues")
                        .WithMany()
                        .HasForeignKey("MaritalStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "NationalityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("NationalityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "QualificationFndLookupValues")
                        .WithMany()
                        .HasForeignKey("QualificationLkpId");

                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithOne("portalUser")
                        .HasForeignKey("ERP.Authorization.Users.PortalUser", "UserId");
                });

            modelBuilder.Entity("ERP.Authorization.Users.User", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("ERP.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("ERP.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("ERP.MultiTenancy.Tenant", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("BaseCurrency");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany()
                        .HasForeignKey("CountryLkpId");

                    b.HasOne("ERP.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("ERP.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndIndustryLkp")
                        .WithMany()
                        .HasForeignKey("IndustryLkpId");

                    b.HasOne("ERP.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.HasOne("ERP.MultiTenancy.TenantDetail", "TenantDetail")
                        .WithMany()
                        .HasForeignKey("TenantDetailId");
                });

            modelBuilder.Entity("ERP.MultiTenancy.TenantDetail", b =>
                {
                    b.HasOne("ERP.MultiTenancy.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.Calender.FndCalendarMemo", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.Home.FavoritePage", b =>
                {
                    b.HasOne("ERP._System._modules.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._AffliateAccount.AffliateAccount", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndBankLkp")
                        .WithMany()
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany()
                        .HasForeignKey("CountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLanguageLkp")
                        .WithMany()
                        .HasForeignKey("LanguageLkpId");
                });

            modelBuilder.Entity("ERP._System._ApBankAccounts.ApBankAccounts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ApBankAccountsDtl")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsApPdcCollAccount")
                        .WithMany("ApBankAccountsApPdcCollAccount")
                        .HasForeignKey("ApPdcCollAccountId");

                    b.HasOne("ERP._System._ApBanks.ApBanks", "ApBanks")
                        .WithMany("ApBankAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ApBankAccounts")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsPdcCollAccount")
                        .WithMany("ApBankAccountsPdcCollAccount")
                        .HasForeignKey("PdcCollAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailscPdcAccount")
                        .WithMany("ApBankAccountscPdcAccount")
                        .HasForeignKey("cPdcAccountId");
                });

            modelBuilder.Entity("ERP._System._ApBanks.ApBanks", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ApBanks")
                        .HasForeignKey("BankTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentDetails.ApMiscPaymentDetails", b =>
                {
                    b.HasOne("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", "ApMiscPaymentHeaders")
                        .WithMany("ApMiscPaymentDetails")
                        .HasForeignKey("MiscPaymentId");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApMiscPaymentHeaders")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPaymentTypeLkp")
                        .WithMany("ApMiscPaymentHeadersTypeLkp")
                        .HasForeignKey("PaymentTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPostedPaymentLkp")
                        .WithMany("ApMiscPaymentHeadersPostedLkp")
                        .HasForeignKey("PostedlkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodePaymentLkp")
                        .WithMany("ApMiscPaymentHeadersSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentLines.ApMiscPaymentLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ApMiscPaymentLinesAccount")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxTypeLkp")
                        .WithMany("ApMiscPaymentLines")
                        .HasForeignKey("FndTaxTypeLkpId");

                    b.HasOne("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", "ApMiscPaymentHeaders")
                        .WithMany("ApMiscPaymentLines")
                        .HasForeignKey("MiscPaymentId");

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalUser")
                        .WithMany()
                        .HasForeignKey("PortalUsersId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsTaxAccount")
                        .WithMany("ApMiscPaymentLinesTaxAccount")
                        .HasForeignKey("TaxAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndTaxPercentageLkp")
                        .WithMany()
                        .HasForeignKey("TaxPercentageLkpId");
                });

            modelBuilder.Entity("ERP._System._ApPdcInterface.ApPdcInterface", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApPdcInterfaceBankAccount")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesChqReturnResonLKP")
                        .WithMany("ApPdcInterfaceChqReturnResonLKP")
                        .HasForeignKey("ChqReturnResonLKPId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ApPdcInterfaceSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("ApPdcInterfaceStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._ApUserBankAccess.ApUserBankAccess", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApUserBankAccess")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithMany("ApUserBankAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ApVendors.ApVendors", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ApVendorsStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndVendorCategoryLkp")
                        .WithMany("ApVendorsVendorCategoryLkpCollcetion")
                        .HasForeignKey("VendorCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ArCustomers.ArCustomers", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesCustType")
                        .WithMany("ArCustomersCustType")
                        .HasForeignKey("CustomerTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentTermsLkp")
                        .WithMany()
                        .HasForeignKey("PaymentTermsLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSource")
                        .WithMany("FndLookupValuesSourceCollection")
                        .HasForeignKey("SourceCodeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ArCustomersLkp")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ArDrCrHd.ArDrCrHd", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArDrCrHd")
                        .HasForeignKey("ArCustomerId");

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ArDrCrHd")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesHdTypeLkp")
                        .WithMany("FndLookupValuesHdTypeLkpArDrCrHd")
                        .HasForeignKey("HdTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceLkp")
                        .WithMany("FndLookupValuesSourceLkpArDrCrHd")
                        .HasForeignKey("SourceLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("FndLookupValuesStatusLkpArDrCrHd")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._ArDrCrTr.ArDrCrTr", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ArDrCrTr")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._ArDrCrHd.ArDrCrHd", "ArDrCrHd")
                        .WithMany("ArDrCrTr")
                        .HasForeignKey("ArDrCrHdId");

                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxType")
                        .WithMany()
                        .HasForeignKey("FndTaxtypeId");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptDetails.ArMiscReceiptDetails", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ArMiscReceiptDetails")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ArMiscReceiptDetails")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", "ArMiscReceiptHeaders")
                        .WithMany("ArMiscReceiptDetails")
                        .HasForeignKey("MiscReceiptId");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ArMiscReceiptHeaders")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", "SpBeneficent")
                        .WithMany("ArMiscReceiptHeaders")
                        .HasForeignKey("BeneficentId");

                    b.HasOne("ERP._System._FndCollectors.FndCollectors", "FndCollectors")
                        .WithMany("ArMiscReceiptHeaders")
                        .HasForeignKey("CollectorId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPostedLkp")
                        .WithMany("ArMiscReceiptHeadersPostedLkp")
                        .HasForeignKey("PostedLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndReceiptTypeLkp")
                        .WithMany("ArMiscReceiptHeadersReceiptTypeLkp")
                        .HasForeignKey("ReceiptTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ArMiscReceiptHeadersSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesTransactionTypeLkp")
                        .WithMany("ArMiscReceiptHeadersTransactionTypeLkp")
                        .HasForeignKey("TransactionTypeLkpId");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptLines.ArMiscReceiptLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("AccountArMiscReceiptLines")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AdminGlCodeComDetails")
                        .WithMany("AdminAccountArMiscReceiptLines")
                        .HasForeignKey("AdminAccountID");

                    b.HasOne("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", "ArMiscReceiptHeaders")
                        .WithMany("ArMiscReceiptLines")
                        .HasForeignKey("MiscReceiptId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesReceiptTypeLkp")
                        .WithMany("ArMiscReceiptLinesReceiptTypeLkp")
                        .HasForeignKey("ReceiptTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ArMiscReceiptLinesSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", "SpContractDetails")
                        .WithMany("ArMiscReceiptLines")
                        .HasForeignKey("SpContractDetailsId");
                });

            modelBuilder.Entity("ERP._System._ArPdcInterface.ArPdcInterface", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesBankLkp")
                        .WithMany("ArPdcInterfaceBankLkp")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArPdcInterface")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "DepositApBankAccounts")
                        .WithMany("ArPdcInterfaceDeposit")
                        .HasForeignKey("DepositBankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ArPdcInterfaceSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("ArPdcInterfaceStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._ArSecurityDepositInterface.ArSecurityDepositInterface", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArSecurityDepositInterface")
                        .HasForeignKey("ArCustomerId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails")
                        .WithMany("ArSecurityDepositInterface")
                        .HasForeignKey("GlCodeComDetailsId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSourceCodeLkp")
                        .WithMany("FndSourceCodeLkpCollection")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusLkpCollection")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._CountersDetails.CountersDetails", b =>
                {
                    b.HasOne("ERP._System._Counters.Counters", "Counters")
                        .WithMany("CountersDetails")
                        .HasForeignKey("CounterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._FndLookupValues.FndLookupValues", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlAccDetails.GlAccDetails", b =>
                {
                    b.HasOne("ERP._System._GlAccHeaders.GlAccHeaders", "GlAccHeader")
                        .WithMany("GlAccDetails")
                        .HasForeignKey("GlAccHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetail")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlAccHeaders.GlAccHeaders", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlAccHeaders")
                        .HasForeignKey("AttributeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccHeaders.GlAccHeaders", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlAccounts.GlAccounts", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlAccounts")
                        .HasForeignKey("NatureOfAccountLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccounts.GlAccounts", "GlAccount")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlCodeComDetails.GlCodeComDetails", b =>
                {
                    b.HasOne("ERP._System._GlAccounts.GlAccounts", "GlAccounts")
                        .WithMany("GlCodeComDetails")
                        .HasForeignKey("AccId");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr1")
                        .WithMany("GlAccDetailsAttr1Collection")
                        .HasForeignKey("Attribute1");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr2")
                        .WithMany("GlAccDetailsAttr2Collection")
                        .HasForeignKey("Attribute2");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr3")
                        .WithMany("GlAccDetailsAttr3Collection")
                        .HasForeignKey("Attribute3");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr4")
                        .WithMany("GlAccDetailsAttr4Collection")
                        .HasForeignKey("Attribute4");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr5")
                        .WithMany("GlAccDetailsAttr5Collection")
                        .HasForeignKey("Attribute5");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr6")
                        .WithMany("GlAccDetailsAttr6Collection")
                        .HasForeignKey("Attribute6");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr7")
                        .WithMany("GlAccDetailsAttr7Collection")
                        .HasForeignKey("Attribute7");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr8")
                        .WithMany("GlAccDetailsAttr8Collection")
                        .HasForeignKey("Attribute8");

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetailsAttr9")
                        .WithMany("GlAccDetailsAttr9Collection")
                        .HasForeignKey("Attribute9");
                });

            modelBuilder.Entity("ERP._System._GlJeHeaders.GlJeHeaders", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("GlJeHeaders")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "JeSourceFndLookupValues")
                        .WithMany("JeSourceGlJeHeaders")
                        .HasForeignKey("JeSourceLkpId");

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "GlPeriodsDetails")
                        .WithMany("GlJeHeaders")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StatusFndLookupValues")
                        .WithMany("StatusGlJeHeaders")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._GlJeLines.GlJeLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlJeLines")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlJeHeaders.GlJeHeaders", "GlJeHeaders")
                        .WithMany("GlJeLines")
                        .HasForeignKey("GlJeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "JeSourceFndLookupValues")
                        .WithMany("GlJeLines")
                        .HasForeignKey("JeDtlSourceLkpId");
                });

            modelBuilder.Entity("ERP._System._GlMainAccounts.GlMainAccounts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlMainAccounts")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsDetails", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsYears", "GlPeriodsYears")
                        .WithMany("GlPeriodsDetails")
                        .HasForeignKey("GlPeriodsYearsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlPeriodsDetails")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsYears", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlPeriodsYears")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("ERP._System._Portal.PortalUserRelatives", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "GenderFndLookupValues")
                        .WithMany()
                        .HasForeignKey("GenderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "MaritalStatusFndLookupValues")
                        .WithMany()
                        .HasForeignKey("MaritalStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "NationalityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("NationalityLkpId");

                    b.HasOne("ERP._System.__AidModule._PortalUserData.PortalUserData", "PortalUserData")
                        .WithMany("Relatives")
                        .HasForeignKey("PortalUserDataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "QualificationFndLookupValues")
                        .WithMany()
                        .HasForeignKey("QualificationLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "RelativesFndLookupValues")
                        .WithMany()
                        .HasForeignKey("RelativesTypeLkpId");
                });

            modelBuilder.Entity("ERP._System._ScCampainsAid.ScCampainsAid", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCampainsAid")
                        .HasForeignKey("CampainsAidCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ScComityMembers.ScComityMembers", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlCodeComDetails")
                        .HasForeignKey("MemberCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._TenantFreeModules.TenantFreeModules", b =>
                {
                    b.HasOne("ERP._System._modules.Module", "Modules")
                        .WithMany("TenantFreeModules")
                        .HasForeignKey("Module_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.MultiTenancy.Tenant", "Tenant")
                        .WithMany("TenantFreeModules")
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._TenantFreeModules.TenantRenewalHistory", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "RenewToUser")
                        .WithMany("TenantRenewalHistories")
                        .HasForeignKey("RenewToUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.MultiTenancy.Tenant", "Tenant")
                        .WithMany("TenantRenewalHistories")
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApDrCrHd.ApDrCrHd", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ApDrCrHd")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesHdTypeLkp")
                        .WithMany()
                        .HasForeignKey("HdTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceLkp")
                        .WithMany()
                        .HasForeignKey("SourceLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId");

                    b.HasOne("ERP._System._ApVendors.ApVendors", "Vendors")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApDrCrTr.ApDrCrTr", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System.__AccountModule._ApDrCrHd.ApDrCrHd", "ApDrCrHd")
                        .WithMany("ApDrCrTr")
                        .HasForeignKey("ApDrCrHdId");

                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxType")
                        .WithMany()
                        .HasForeignKey("FndTaxtypeId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApInvoiceHd.ApInvoiceHd", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ApInvoiceHd")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "FromGlCodeComDetails")
                        .WithMany("FromGlCodeComDetails")
                        .HasForeignKey("FromAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndHdTypeLkp")
                        .WithMany("FndHdTypeLkpApInvoiceHdCollection")
                        .HasForeignKey("HdTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusLkpApInvoiceHdCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "ToGlCodeComDetails")
                        .WithMany("ToGlCodeComDetails")
                        .HasForeignKey("ToAccountId");

                    b.HasOne("ERP._System._ApVendors.ApVendors", "ApVendors")
                        .WithMany("ApInvoiceHd")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ApInvoiceHd._ApInvoiceTr.ApInvoiceTr", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AccountModule._ApInvoiceHd.ApInvoiceHd", "ApInvoiceHd")
                        .WithMany("ApInvoiceTr")
                        .HasForeignKey("ApInvoiceHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndTaxPercentageLkp")
                        .WithMany()
                        .HasForeignKey("TaxPercentageLkpId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardHd.ArJobCardAttachments", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._ArJobCardHd.ArJobCardHd", "ArJobCardHd")
                        .WithMany("ArJobCardAttachments")
                        .HasForeignKey("ArJobCardHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardHd.ArJobCardHd", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArJobCardCollection")
                        .HasForeignKey("ArCustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndExcessStatusLkp")
                        .WithMany("FndExcessStatusLkpCollection")
                        .HasForeignKey("ExcessStatusLkpId");

                    b.HasOne("ERP._System.__SalesModule._FndSalesMen.FndSalesMen", "FndSalesMen")
                        .WithMany("FndSalesMenCollection")
                        .HasForeignKey("FndSalesMenId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJobTypeLkp")
                        .WithMany("JobTypeLkpIdCollection")
                        .HasForeignKey("JobTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPoliceReportSourceLkp")
                        .WithMany("PoliceReportSourceLkpIdCollection")
                        .HasForeignKey("PoliceReportSourceLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ArJobCardFndStatusLkpCollection")
                        .HasForeignKey("StatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndVehicleColorLkp")
                        .WithMany("FndVehicleColorLkpCollection")
                        .HasForeignKey("VehicleColorLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndVehicleEmirateLkp")
                        .WithMany("VehicleEmirateLkpIdCollection")
                        .HasForeignKey("VehicleEmirateLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndVehicleMakeLkp")
                        .WithMany("VehicleMakeLkpIdCollection")
                        .HasForeignKey("VehicleMakeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndVehicleModelLkp")
                        .WithMany("VehicleModelLkpIdCollection")
                        .HasForeignKey("VehicleModelLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardPayment._ArJobCardPaymentHd.ArJobCardPaymentHd", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._ArJobCardHd.ArJobCardHd", "ArJobCardHd")
                        .WithMany("ArJobCardPaymentHd")
                        .HasForeignKey("ArJobCardHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJobCardPaymenStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArJobCardPayment._ArJobCardPaymentTr.ArJobCardPaymentTr", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._ArJobCardPayment._ArJobCardPaymentHd.ArJobCardPaymentHd", "ArJobCardPaymentHd")
                        .WithMany("ArJobCardPaymentTr")
                        .HasForeignKey("ArJobCardPaymentHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJobCardPaymentSourceTypeLkp")
                        .WithMany()
                        .HasForeignKey("SourceTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArReceipts.ArReceiptDetails", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "Bank")
                        .WithMany("ArReceiptDetailsBanks")
                        .HasForeignKey("BankLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AccountModule._ArReceipts.ArReceipts", "ArReceipts")
                        .WithMany("ArReceiptDetails")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArReceipts.ArReceipts", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomer")
                        .WithMany("ArReceiptCustomers")
                        .HasForeignKey("ArCustomerId");

                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "BankAccount")
                        .WithMany("ArReceiptBankAccounts")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ArReceiptCurrencies")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "RemitanceBank")
                        .WithMany("ArReceiptRemitanceBanks")
                        .HasForeignKey("RemitanceBankId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ArReceiptStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._ArReceipts.ArReceiptsOnAccount", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._ArReceipts.ArReceipts", "ArReceipts")
                        .WithMany("ArReceiptsOnAccount")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndReceiptTypeLkp")
                        .WithMany("ArReceiptsOnAccountReceiptTypeLkpCollection")
                        .HasForeignKey("ReceiptTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetCategory.FaAssetCategory", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsAccDeprenAccount")
                        .WithMany("GlCodeComDetailsAccDeprenAccount")
                        .HasForeignKey("AccDeprenAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsAssetClearingAccount")
                        .WithMany("GlCodeComDetailsAssetClearingAccount")
                        .HasForeignKey("AssetClearingAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsAssetCostAccount")
                        .WithMany("GlCodeComDetailsAssetCostAccount")
                        .HasForeignKey("AssetCostAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsDeprenAccount")
                        .WithMany("GlCodeComDetailsDeprenAccount")
                        .HasForeignKey("DeprenAccountId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnHd", b =>
                {
                    b.HasOne("ERP._System.__AccountModuleExtend._FaAssets.FaAssets", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "Period")
                        .WithMany("FaAssetDeprnHd")
                        .HasForeignKey("PeriodId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnTr", b =>
                {
                    b.HasOne("ERP._System.__AccountModuleExtend._FaAssets.FaAssets", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnHd", "AssetDeprnHd")
                        .WithMany("AssetDeprnTrs")
                        .HasForeignKey("FaAssetDeprnHdId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnTrDtl", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("FaAssetDeprnTrDtl")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System.__AccountModule._FaAssetDeprn.FaAssetDeprnTr", "AssetDeprnTr")
                        .WithMany("AssetDeprnTrDtls")
                        .HasForeignKey("FaAssetDeprnTrId");
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GeneralUnPost.GeneralUnPost", b =>
                {
                    b.HasOne("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", "ApMiscPaymentHeaders")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("ApMiscPaymentHeadersId");

                    b.HasOne("ERP._System.__AccountModule._ArJobCardHd.ArJobCardHd", "ArJobCardHd")
                        .WithMany()
                        .HasForeignKey("ArJobCardHdId");

                    b.HasOne("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", "ArMiscReceiptHeaders")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("ArMiscReceiptHeadersId");

                    b.HasOne("ERP._System._GlJeHeaders.GlJeHeaders", "GlJeHeaders")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("GlJeHeaderId");

                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("PmContractId");

                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "ScCommittee")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("ScCommitteesId");

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", "ScPortalRequestMgrDecision")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("ScPortalRequestMgrDecisionId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupGeneralUnPostSourceLkp")
                        .WithMany("GeneralUnPost")
                        .HasForeignKey("SourceLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GlAccMappingHd._GlAccMappingTr.GlAccMappingTr", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._GlAccMappingHd.GlAccMappingHd", "GlAccMappingHd")
                        .WithMany("GlAccMappingTr")
                        .HasForeignKey("GlAccMappingHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModule._GlAccMappingHd._GlAccMappingTrDtl.GlAccMappingTrDtl", b =>
                {
                    b.HasOne("ERP._System._GlAccounts.GlAccounts", "GlAccDetailFrom")
                        .WithMany("GlAccMappingTrDtlFrom")
                        .HasForeignKey("FromAccId");

                    b.HasOne("ERP._System.__AccountModule._GlAccMappingHd._GlAccMappingTr.GlAccMappingTr", "GlAccMappingTr")
                        .WithMany("GlAccMappingTrDtl")
                        .HasForeignKey("GlAccMappingTrId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccounts.GlAccounts", "GlAccDetailTo")
                        .WithMany("GlAccMappingTrDtlTo")
                        .HasForeignKey("ToAccId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndTypeLkp")
                        .WithMany("GlAccMappingTrDtl")
                        .HasForeignKey("TypeLkpId");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._ApPaymentsTransactions.ApPaymentsTransactions", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApPaymentsTransactions")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentTypeLkp")
                        .WithMany("FndPaymentTypeLkpApPaymentsTransactionsCollection")
                        .HasForeignKey("PaymentTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusLkpApPaymentsTransactionsCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApVendors.ApVendors", "ApVendors")
                        .WithMany("ApPaymentsTransactions")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._ApPrepaid.ApPrepaid", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "CrGlCodeComDetails")
                        .WithMany("CrGlCodeComDetails")
                        .HasForeignKey("CrAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "DrGlCodeComDetails")
                        .WithMany("DrGlCodeComDetails")
                        .HasForeignKey("DrAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSourceCodeLkp")
                        .WithMany("FndSourceCodeLkpApPrepaidCollection")
                        .HasForeignKey("SourceCodeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusLkpApPrepaidCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._FaAssets.FaAssets", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "AssetTypeLkp")
                        .WithMany()
                        .HasForeignKey("AssetTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "BookingTypeLkp")
                        .WithMany()
                        .HasForeignKey("BookingTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "BoughtLkp")
                        .WithMany()
                        .HasForeignKey("BoughtLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "DeprenMethodLkp")
                        .WithMany()
                        .HasForeignKey("DeprenMethodLkpId");

                    b.HasOne("ERP._System.__AccountModule._FaAssetCategory.FaAssetCategory", "AssetCategory")
                        .WithMany()
                        .HasForeignKey("FaAssetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "OwnershipLkp")
                        .WithMany()
                        .HasForeignKey("OwnershipLkpId");

                    b.HasOne("ERP._System.__AccountModuleExtend._FaAssets.FaAssets", "ParentAsset")
                        .WithMany()
                        .HasForeignKey("ParentAssetId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "SalvageValueTypeLkp")
                        .WithMany()
                        .HasForeignKey("SalvageValueTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._GlJeIntegrationHeaders.GlJeIntegrationHeaders", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("GlJeIntegrationHeaders")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndGlJeIntegrationSourceLkp")
                        .WithMany("FndGlJeIntegrationSourceLkp")
                        .HasForeignKey("GlJeIntegrationSourceLkpId");

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "GlPeriodsDetails")
                        .WithMany("GlJeIntegrationHeaders")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndGlJeIntegrationHeadersStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AccountModuleExtend._GlJeIntegrationHeaders.GlJeIntegrationLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlJeIntegrationLines")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApVendors.ApVendors", "ApVendors")
                        .WithMany("GlJeIntegrationLines")
                        .HasForeignKey("ApVendorId");

                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("GlJeIntegrationLines")
                        .HasForeignKey("ArCustomerId");

                    b.HasOne("ERP._System.__AccountModuleExtend._GlJeIntegrationHeaders.GlJeIntegrationHeaders", "GlJeIntegrationHeaders")
                        .WithMany("GlJeIntegrationLines")
                        .HasForeignKey("GlJeIntegrationHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJeIntegrationLineTypeLkp")
                        .WithMany("GlJeIntegrationLines")
                        .HasForeignKey("JeIntegrationLineTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._Portal._PortalUserAttachments.PortalUserAttachments", b =>
                {
                    b.HasOne("ERP._System.__AidModule._PortalUserData.PortalUserData", "PortalUserData")
                        .WithMany("PortalUserAttachments")
                        .HasForeignKey("PortalUserDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._Portal._PortalUserDuties.PortalUserDuties", b =>
                {
                    b.HasOne("ERP._System.__AidModule._PortalUserData.PortalUserData", "PortalUserData")
                        .WithMany("PortalUserDuties")
                        .HasForeignKey("PortalUserDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._Portal._PortalUserIncomes.PortalUserIncomes", b =>
                {
                    b.HasOne("ERP._System.__AidModule._PortalUserData.PortalUserData", "PortalUserData")
                        .WithMany("PortalUserIncomes")
                        .HasForeignKey("PortalUserDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._PortalUserData.PortalUserData", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCaseCategoryLkp")
                        .WithMany()
                        .HasForeignKey("CaseCategoryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "GenderFndLookupValues")
                        .WithMany()
                        .HasForeignKey("GenderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "MaritalStatusFndLookupValues")
                        .WithMany()
                        .HasForeignKey("MaritalStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalUser")
                        .WithMany("PortalUserData")
                        .HasForeignKey("PortalUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "QualificationFndLookupValues")
                        .WithMany()
                        .HasForeignKey("QualificationLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampains.ScCampains", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCampains")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampainsDetail.ScCampainsDetail", b =>
                {
                    b.HasOne("ERP._System._ScCampainsAid.ScCampainsAid", "ScCampainsAid")
                        .WithMany("ScCampainsDetails")
                        .HasForeignKey("CampainAidId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScCampains.ScCampains", "ScCampains")
                        .WithMany("ScCampainsDetails")
                        .HasForeignKey("CampainId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalFndUsers")
                        .WithMany()
                        .HasForeignKey("PortalFndUsersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCampainsDetail")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommittee", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupStatusValues")
                        .WithMany("ScCommitteeLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "Committee")
                        .WithMany("CommitteeDetails")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndOtherAidLkp")
                        .WithMany()
                        .HasForeignKey("OtherAidLkpId");

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", "RequestStudy")
                        .WithMany("ScCommitteeDetail")
                        .HasForeignKey("RequestStudyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ScCommitteeDetailLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeDetailsElectronicAid", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndElectronicTypeLkp")
                        .WithMany("ScCommitteeDetailsElectronicAid")
                        .HasForeignKey("ElectronicTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", "ScCommitteeDetail")
                        .WithMany("ScCommitteeDetailsElectronicAid")
                        .HasForeignKey("ScCommitteeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeMemberDetail", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "Committee")
                        .WithMany("CommitteeMembersDetails")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ScComityMembers.ScComityMembers", "Member")
                        .WithMany()
                        .HasForeignKey("CommitteeMemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheck.ScCommitteesCheck", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ScCommitteesCheck")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "ScCommittee")
                        .WithMany("ScCommitteesCheck")
                        .HasForeignKey("CommitteeId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues")
                        .WithMany("ScCommitteesCheckCollection")
                        .HasForeignKey("FndLookupValuesId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCommitteesCheckLookupValuesCollection")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheckDetails.ScCommitteesCheckDetails", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", "ScCommitteeDetail")
                        .WithMany("ScCommitteesCheckDetails")
                        .HasForeignKey("CommitteeDetailsId");

                    b.HasOne("ERP._System.__AidModule._ScCommitteesCheck.ScCommitteesCheck", "ScCommitteesCheck")
                        .WithMany("ScCommitteesCheckDetails")
                        .HasForeignKey("CommitteesCheckId");

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", "ScPortalRequestMgrDecision")
                        .WithMany("ScCommitteesCheckDetails")
                        .HasForeignKey("ScPortalRequestMgrDecisionId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScDeliveryOtherAids.ScDeliveryOtherAidDetails", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", "ScCommitteeDetail")
                        .WithMany("ScDeliveryOtherAidDetails")
                        .HasForeignKey("CommitteeDetailsId");

                    b.HasOne("ERP._System.__AidModule._ScDeliveryOtherAids.ScDeliveryOtherAids", "ScDeliveryOtherAids")
                        .WithMany("ScDeliveryOtherAidDetails")
                        .HasForeignKey("ScDeliveryOtherAidsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", "ScPortalRequestMgrDecision")
                        .WithMany("ScDeliveryOtherAidDetails")
                        .HasForeignKey("ScPortalRequestMgrDecisionId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScDeliveryOtherAids.ScDeliveryOtherAids", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "ScCommittee")
                        .WithMany()
                        .HasForeignKey("CommitteeId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScFndAidRequestType")
                        .HasForeignKey("AidRequestTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndProtalAttachmentSetting.ScFndProtalAttachmentSetting", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", "ScFndAidRequestType")
                        .WithMany("ScFndProtalAttachmentSetting")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceContract.ScMaintenanceContract", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotations", "ScMaintenanceQuotations")
                        .WithMany("ScMaintenanceContract")
                        .HasForeignKey("ScMaintenanceQuotationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ScMaintenanceContract")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceContract.ScMaintenanceContractPayments", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceContract.ScMaintenanceContract", "ScMaintenanceContract")
                        .WithMany("ScMaintenanceContractPayments")
                        .HasForeignKey("ScMaintenanceContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenancePayments.ScMaintenancePayments", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceContract.ScMaintenanceContractPayments", "ScMaintenanceContractPayments")
                        .WithMany("ScMaintenancePayments")
                        .HasForeignKey("ScMaintenanceContractPaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ScMaintenancePayments")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotationAttachments", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotations", "ScMaintenanceQuotations")
                        .WithMany("ScMaintenanceQuotationAttachments")
                        .HasForeignKey("ScMaintenanceQuotationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotationDetails", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotations", "ScMaintenanceQuotations")
                        .WithMany("ScMaintenanceQuotationDetails")
                        .HasForeignKey("ScMaintenanceQuotationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReportDetail", "ScMaintenanceTechnicalReportDetail")
                        .WithMany("ScMaintenanceQuotationDetails")
                        .HasForeignKey("ScMaintenanceTechnicalReportDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceQuotations.ScMaintenanceQuotations", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReport", "ScMaintenanceTechnicalReport")
                        .WithMany("ScMaintenanceQuotations")
                        .HasForeignKey("ScMaintenanceTechnicalReportId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ScMaintenanceQuotations")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApVendors.ApVendors", "ApVendors")
                        .WithMany("ScMaintenanceQuotations")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReport", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "PortalRequest")
                        .WithMany("ScMaintenanceTechnicalReport")
                        .HasForeignKey("PortalRequestId");

                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", "ScCommitteeDetail")
                        .WithMany("ScMaintenanceTechnicalReport")
                        .HasForeignKey("ScCommitteeDetailId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReportAttachments", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReport", "ScMaintenanceTechnicalReports")
                        .WithMany("Attachments")
                        .HasForeignKey("ScMaintenanceTechnicalReportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReportDetail", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScMaintenanceTechnicalReport.ScMaintenanceTechnicalReport", "ScMaintenanceTechnicalReports")
                        .WithMany("Details")
                        .HasForeignKey("ScMaintenanceTechnicalReportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", "AidRequestType")
                        .WithMany()
                        .HasForeignKey("AidRequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalUser")
                        .WithMany()
                        .HasForeignKey("PortalUsersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.User", "Researcher")
                        .WithMany("ScPortalRequest")
                        .HasForeignKey("ResearcherId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceLkp")
                        .WithMany()
                        .HasForeignKey("SourceLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestAttachment", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequest")
                        .WithMany("Attachments")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScFndProtalAttachmentSetting.ScFndProtalAttachmentSetting", "GetScFndProtalAttachmentSetting")
                        .WithMany()
                        .HasForeignKey("ProtalAttachmentSettingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestDuties", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequest")
                        .WithMany("ScPortalRequestDuties")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestIncome", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequest")
                        .WithMany("ScPortalRequestIncome")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPRMgrDecisionElectronicAid", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndElectronicTypeLkp")
                        .WithMany("ScPRMgrDecisionElectronicAid")
                        .HasForeignKey("ElectronicTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", "ScPortalRequestMgrDecision")
                        .WithMany("ScPRMgrDecisionElectronicAid")
                        .HasForeignKey("ScPortalRequestMgrDecisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndOtherAidLkp")
                        .WithMany()
                        .HasForeignKey("OtherAidLkpId");

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", "ScPortalRequestStudy")
                        .WithMany("ScPortalRequestMgrDecision")
                        .HasForeignKey("PortalRequestStudyId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesRefuseLkpId")
                        .WithMany("FndLookupValuesRefuseLkpId")
                        .HasForeignKey("RefuseLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkpId")
                        .WithMany("FndLookupValuesStatusLkpId")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ScPortalRequestStudy")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndOtherAidLkp")
                        .WithMany()
                        .HasForeignKey("OtherAidLkpId");

                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequest")
                        .WithMany("ScPortalRequestStudy")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesRefuseLkp")
                        .WithMany("FndLookupValuesRefuseLkp")
                        .HasForeignKey("RefuseLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("FndLookupValuesStatusLkp")
                        .HasForeignKey("StatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStudyLkp")
                        .WithMany("FndLookupValuesStudyLkp")
                        .HasForeignKey("StudyLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudyAttachment.ScPortalRequestStudyAttachment", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", "ScPortalRequestStudy")
                        .WithMany("ScPortalRequestStudyAttachment")
                        .HasForeignKey("PortalRequestStudyId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestVisited.ScPortalRequestVisited", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequests")
                        .WithMany("ScPortalRequestVisited")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScPortalRequestVisited")
                        .HasForeignKey("VisitStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM.AboutUs.AboutUSSlider", b =>
                {
                    b.HasOne("ERP._System.__CRM.AboutUs.CrmAboutUs", "CrmAboutUs")
                        .WithMany("AboutUSSliderPhotos")
                        .HasForeignKey("CrmAboutUsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM.Deals.CrmDeals", b =>
                {
                    b.HasOne("ERP._System.__CRM.Leads.CrmLeadsPersons", "CrmLeadsPersons")
                        .WithMany()
                        .HasForeignKey("CrmLeadsPersonsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "DealTypeLkps")
                        .WithMany()
                        .HasForeignKey("DealTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "LeadSourceLkps")
                        .WithMany()
                        .HasForeignKey("LeadSourceLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StageLkps")
                        .WithMany()
                        .HasForeignKey("StageLkpID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM.Deals.CrmDealsAttachments", b =>
                {
                    b.HasOne("ERP._System.__CRM.Deals.CrmDeals", "CrmDeals")
                        .WithMany("CrmDealsAttachments")
                        .HasForeignKey("CrmDealsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM.Leads.CrmLeadsPersons", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryLkpId");

                    b.HasOne("ERP._System.__CRM._Projects.CrmProducts", "CrmProducts")
                        .WithMany("CrmLeadsPersons")
                        .HasForeignKey("CrmProductId");

                    b.HasOne("ERP._System.__CRM.Services.CrmServices", "CrmServices")
                        .WithMany("CrmLeadsPersons")
                        .HasForeignKey("CrmServiceId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "Industrys")
                        .WithMany()
                        .HasForeignKey("IndustryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "LeadSources")
                        .WithMany()
                        .HasForeignKey("LeadSourceLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "LeadStatus")
                        .WithMany()
                        .HasForeignKey("LeadStatusIdLkp");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "OtherCountryLkp")
                        .WithMany()
                        .HasForeignKey("OtherCountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "Ratings")
                        .WithMany()
                        .HasForeignKey("RatingLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "TypeLkps")
                        .WithMany()
                        .HasForeignKey("TypeLkpId");
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityCall.ActivityCall", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CallDetailsLkps")
                        .WithMany()
                        .HasForeignKey("CallDetailsLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CallPurposeLkps")
                        .WithMany()
                        .HasForeignKey("CallPurposeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CallResultLkps")
                        .WithMany()
                        .HasForeignKey("CallResultLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CallTypeLkps")
                        .WithMany()
                        .HasForeignKey("CallTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CRM.Deals.CrmDeals", "CrmDeals")
                        .WithMany()
                        .HasForeignKey("CrmDealsId");

                    b.HasOne("ERP._System.__CRM.Leads.CrmLeadsPersons", "CrmLeadsPersons")
                        .WithMany("ActivityCall")
                        .HasForeignKey("CrmLeadsPersonsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "RelatedToLkps")
                        .WithMany()
                        .HasForeignKey("RelatedToLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityMeeting.ActivityMeeting", b =>
                {
                    b.HasOne("ERP._System.__CRM.Deals.CrmDeals", "CrmDeals")
                        .WithMany()
                        .HasForeignKey("CrmDealsId");

                    b.HasOne("ERP._System.__CRM.Leads.CrmLeadsPersons", "CrmLeadsPersons")
                        .WithMany("ActivityMeeting")
                        .HasForeignKey("CrmLeadsPersonsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "PartiReminderLkps")
                        .WithMany()
                        .HasForeignKey("PartiReminderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "RelatedToLkps")
                        .WithMany()
                        .HasForeignKey("RelatedToLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityMeeting.ActivityMeetingParticipant", b =>
                {
                    b.HasOne("ERP._System.__CRM._ActivityMeeting.ActivityMeeting", "ActivityMeetings")
                        .WithMany("ActivityMeetingParticipant")
                        .HasForeignKey("ActivityMeetingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CRM.Leads.CrmLeadsPersons", "CrmLeadsPersons")
                        .WithMany()
                        .HasForeignKey("CrmLeadsPersonsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "RelatedToLkps")
                        .WithMany()
                        .HasForeignKey("RelatedToLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CRM._ActivityTasks.ActivityTasks", b =>
                {
                    b.HasOne("ERP._System.__CRM.Deals.CrmDeals", "CrmDeals")
                        .WithMany()
                        .HasForeignKey("CrmDealsId");

                    b.HasOne("ERP._System.__CRM.Leads.CrmLeadsPersons", "CrmLeadsPersons")
                        .WithMany("ActivityTasks")
                        .HasForeignKey("CrmLeadsPersonsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "PriorityLkps")
                        .WithMany()
                        .HasForeignKey("PriorityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "RelatedToLkps")
                        .WithMany()
                        .HasForeignKey("RelatedToLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StatuesLkps")
                        .WithMany()
                        .HasForeignKey("StatuesLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxActions.TmCharityBoxActions", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmSupervisors.TmSupervisors", "TmSupervisors")
                        .WithMany()
                        .HasForeignKey("TmSupervisorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxActions._TmCharityBoxActionDetails.TmCharityBoxActionDetails", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesActionLkp")
                        .WithMany("FndLookupValuesActionLkpCollection")
                        .HasForeignKey("ActionLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxActions.TmCharityBoxActions", "TmCharityBoxActions")
                        .WithMany("TmCharityBoxActionDetailsCollection")
                        .HasForeignKey("CharityBoxActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxes.TmCharityBoxes", "NewTmCharityBoxes")
                        .WithMany()
                        .HasForeignKey("NewCharityBoxId");

                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxes.TmCharityBoxes", "OldTmCharityBoxes")
                        .WithMany()
                        .HasForeignKey("OldCharityBoxid");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("FndLookupValuesStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmLocations.TmLocationSub", "TmLocationSub")
                        .WithMany()
                        .HasForeignKey("TmLocationSubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollect.TmCharityBoxCollect", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("TmCharityBoxCollect")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLookup")
                        .WithMany("TmCharityBoxCollect")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollect._TmCharityBoxCollectDetails.TmCharityBoxCollectDetails", b =>
                {
                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxActions._TmCharityBoxActionDetails.TmCharityBoxActionDetails", "TmCharityBoxActionDetails")
                        .WithMany("TmCharityBoxCollectDetails")
                        .HasForeignKey("CharityBoxActionDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxCollect.TmCharityBoxCollect", "TmCharityBoxCollect")
                        .WithMany("TmCharityBoxCollectDetails")
                        .HasForeignKey("TmCharityBoxCollectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollect._TmCharityBoxCollectMembersDetail.TmCharityBoxCollectMembersDetail", b =>
                {
                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxCollect.TmCharityBoxCollect", "TmCharityBoxCollect")
                        .WithMany("TmCharityBoxCollectMembersDetails")
                        .HasForeignKey("TmCharityBoxCollectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxCollectMembers.TmCharityBoxCollectMembers", "TmCharityBoxCollectMembers")
                        .WithMany("TmCharityBoxCollectMembersDetails")
                        .HasForeignKey("TmCharityBoxCollectMemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxCollectMembers.TmCharityBoxCollectMembers", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndMemberCategoryValues")
                        .WithMany("TmCharityBoxCollectMembers")
                        .HasForeignKey("MemberCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxReceive.TmCharityBoxReceive", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._TmCharityBoxesType.TmCharityBoxesType", "CharityBoxesType")
                        .WithMany()
                        .HasForeignKey("CharityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmCharityBoxes.TmCharityBoxes", b =>
                {
                    b.HasOne("ERP._System.__AccountModule._TmCharityBoxesType.TmCharityBoxesType", "CharityBoxesType")
                        .WithMany()
                        .HasForeignKey("CharityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxReceive.TmCharityBoxReceive", "TmCharityBoxReceive")
                        .WithMany("TmCharityBoxes")
                        .HasForeignKey("TmCharityBoxReceiveId");

                    b.HasOne("ERP._System.__CharityBoxes._TmLocations.TmLocationSub", "TmSubLocation")
                        .WithMany()
                        .HasForeignKey("TmSubLocationId");

                    b.HasOne("ERP._System.__CharityBoxes._TmSupervisors.TmSupervisors", "TmSupervisor")
                        .WithMany()
                        .HasForeignKey("TmSupervisorId");
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmDamagedCharityBoxs.TmDamagedCharityBoxs", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLookup")
                        .WithMany("TmDamagedCharityBoxs")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmSupervisors.TmSupervisors", "TmSupervisors")
                        .WithMany("TmDamagedCharityBoxs")
                        .HasForeignKey("TmSupervisorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmDamagedCharityBoxs._TmDamagedCharityBoxDetails.TmDamagedCharityBoxDetails", b =>
                {
                    b.HasOne("ERP._System.__CharityBoxes._TmCharityBoxActions._TmCharityBoxActionDetails.TmCharityBoxActionDetails", "TmCharityBoxActionDetails")
                        .WithMany("TmDamagedCharityBoxDetails")
                        .HasForeignKey("CharityBoxActionDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__CharityBoxes._TmDamagedCharityBoxs.TmDamagedCharityBoxs", "TmDamagedCharityBoxs")
                        .WithMany("TmDamagedCharityBoxDetails")
                        .HasForeignKey("TmDamagedCharityBoxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmLocations.TmLocationSub", b =>
                {
                    b.HasOne("ERP._System.__CharityBoxes._TmLocations.TmLocations", "TmLocation")
                        .WithMany("LocationSubs")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmLocations.TmLocations", b =>
                {
                    b.HasOne("ERP._System.__CharityBoxes._TmRegions.TmRegions", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmRegions.TmRegions", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("TmRegions")
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__CharityBoxes._TmSupervisors.TmSupervisors", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("TmSupervisors")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__HR._HrOrganizations.HrOrganizations", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndOrganizationTypeLkp")
                        .WithMany("HrOrganizations")
                        .HasForeignKey("OrganizationTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrOrganizations.HrOrganizations", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonPermission.HrPersonPermission", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany()
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrPersonPermission.HrPermissionType", "HrPermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonRequestDocument.HrPersonRequestDocument", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany()
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrPersonRequestDocument.DocumentRequestType", "DocumentRequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonTimeSheet.HrPersonTimeSheet", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany()
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonVacations.HrPersonVacations", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonVacations")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrAbsencesTypes.HrVacationsTypes", "HrVacationsTypes")
                        .WithMany("HrPersonVacations")
                        .HasForeignKey("HrVacationsTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("HrPersonVacations")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons.HrPersonAttachments", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonAttachments")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons.HrPersons", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndBankLkp")
                        .WithMany("FndBankLkpHrPersonsCollection")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryOfBrithLkp")
                        .WithMany("FndCountryOfBrithLkpHrPersonsCollection")
                        .HasForeignKey("CountryOfBrithLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndDestinationCountryLkp")
                        .WithMany("FndDestinationCountryLkpHrPersonsCollection")
                        .HasForeignKey("DestinationCountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndFirstTitleLkp")
                        .WithMany("FndFirstTitleLkpHrPersonsCollection")
                        .HasForeignKey("FirstTitleLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndGenderLkp")
                        .WithMany("FndGenderLkpHrPersonsCollection")
                        .HasForeignKey("GenderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrOrganizations.HrOrganizations", "HrOrganizationsBranch")
                        .WithMany("HrOrganizationsBranchCollection")
                        .HasForeignKey("HrOrganizationsBranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrOrganizations.HrOrganizations", "HrOrganizationsDept")
                        .WithMany("HrOrganizationsDeptCollection")
                        .HasForeignKey("HrOrganizationsDeptId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersonSupervisor")
                        .WithMany()
                        .HasForeignKey("HrPersonSupervisorId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJobGradeLkp")
                        .WithMany("FndJobGradeLkpHrPersonsCollection")
                        .HasForeignKey("JobGradeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJobLkp")
                        .WithMany("FndJobLkpHrPersonsCollection")
                        .HasForeignKey("JobLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndMaritalStatusLkp")
                        .WithMany("FndMaritalStatusLkpHrPersonsCollection")
                        .HasForeignKey("MaritalStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNationalityLkp")
                        .WithMany("FndNationalityLkpHrPersonsCollection")
                        .HasForeignKey("NationalityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNoticeUnitLkp")
                        .WithMany("FndNoticeUnitLkpHrPersonsCollection")
                        .HasForeignKey("NoticeUnitLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentTypeLkp")
                        .WithMany("FndPaymentTypeLkpHrPersonsCollection")
                        .HasForeignKey("PaymentTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPersonCategoryLkp")
                        .WithMany("FndPersonCategoryLkpHrPersonsCollection")
                        .HasForeignKey("PersonCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPersonTypeLkp")
                        .WithMany("FndPersonTypeLkpHrPersonsCollection")
                        .HasForeignKey("PersonTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndProbationUnitLkp")
                        .WithMany("FndProbationUnitLkpHrPersonsCollection")
                        .HasForeignKey("ProbationUnitLkpId");

                    b.HasOne("ERP._System.__HR._PyPayrollTypes.PyPayrollTypes", "PyPayrollTypes")
                        .WithMany("HrPersons")
                        .HasForeignKey("PyPayrollTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSponserLkp")
                        .WithMany("FndSponserLkpHrPersonsCollection")
                        .HasForeignKey("SponserLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusLkpHrPersonsCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndTicketClassLkp")
                        .WithMany("FndTicketClassLkpHrPersonsCollection")
                        .HasForeignKey("TicketClassLkpId");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonIdentityCard.HrPersonIdentityCard", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonIdentityCard")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonPassportDetails.HrPersonPassportDetails", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryOfIssueLkp")
                        .WithMany("FndCountryOfIssueLkpCollection")
                        .HasForeignKey("CountryOfIssueLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonPassportDetails")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPassportTypeLkp")
                        .WithMany("FndPassportTypeLkpCollection")
                        .HasForeignKey("PassportTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonSalaryElements.HrPersonSalaryElements", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "EndPeriods")
                        .WithMany("HrPersonSalaryEndPeriods")
                        .HasForeignKey("EndPeriodId");

                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonSalaryElements")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._PyElements.PyElements", "PyElements")
                        .WithMany("HrPersonSalaryElements")
                        .HasForeignKey("PyElementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "StartPeriods")
                        .WithMany("HrPersonSalaryStartPeriods")
                        .HasForeignKey("StartPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersons._HrPersonVisaDetails.HrPersonVisaDetails", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonVisaDetails")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndIssuedByLkp")
                        .WithMany("FndIssuedByLkpCollection")
                        .HasForeignKey("IssuedByLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPlaceOfIssueLkp")
                        .WithMany("FndPlaceOfIssueLkpCollection")
                        .HasForeignKey("PlaceOfIssueLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndVisaTypeLkp")
                        .WithMany("FndVisaTypeLkpCollection")
                        .HasForeignKey("VisaTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsAdditionHd.HrPersonsAdditionHd", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "GlPeriodsDetails")
                        .WithMany("HrPersonsAdditionHd")
                        .HasForeignKey("PeriodId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesHrPersonsAdditionHdStatusLkp")
                        .WithMany("HrPersonsAdditionHd")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsAdditionHd._HrPersonsAdditionTr.HrPersonsAdditionTr", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesHrPersonsAdditionHdAdditionTypeLkp")
                        .WithMany("HrPersonsAdditionTr")
                        .HasForeignKey("AdditionTypeLkpId");

                    b.HasOne("ERP._System.__HR._HrPersonsAdditionHd.HrPersonsAdditionHd", "HrPersonsAdditionHd")
                        .WithMany("HrPersonsAdditionTr")
                        .HasForeignKey("HrPersonAdditionHdId");

                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonsAdditionTr")
                        .HasForeignKey("HrPersonId");
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsDeduction.HrPersonsDeductionHd", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "Periods")
                        .WithMany("HrPersonsDeductionHd")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("HrPersonsDeductionHd")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._HrPersonsDeduction.HrPersonsDeductionTr", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndDeductionTypeLkp")
                        .WithMany("HrPersonsDeductionTr")
                        .HasForeignKey("DeductionTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrPersonsDeduction.HrPersonsDeductionHd", "HrPersonsDeductionHd")
                        .WithMany("HrPersonsDeductionTr")
                        .HasForeignKey("HrPersonDeductionHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("HrPersonsDeductionTr")
                        .HasForeignKey("HrPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollOperations.PyPayrollOperationPersonDetails", b =>
                {
                    b.HasOne("ERP._System.__HR._PyPayrollOperations.PyPayrollOperationPersons", "PyPayrollOperationPersons")
                        .WithMany("PyPayrollOperationPersonDetails")
                        .HasForeignKey("PyPayrollOperationPersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSourceCodeLkp")
                        .WithMany("PyPayrollOperationPersonDetails")
                        .HasForeignKey("SourceCodeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollOperations.PyPayrollOperationPersons", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndBankLkp")
                        .WithMany("PyPayrollOperationPersons")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("PyPayrollOperationPersons")
                        .HasForeignKey("HrPersonId");

                    b.HasOne("ERP._System.__HR._PyPayrollOperations.PyPayrollOperations", "PyPayrollOperations")
                        .WithMany("PyPayrollOperationPersons")
                        .HasForeignKey("PyPayrollOperationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__HR._PyPayrollOperations.PyPayrollOperations", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("PyPayrollOperations")
                        .HasForeignKey("HrPersonId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndJobLkp")
                        .WithMany("FndJobLkpCollection")
                        .HasForeignKey("JobLkpId");

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "Periods")
                        .WithMany("PyPayrollOperations")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__HR._PyPayrollTypes.PyPayrollTypes", "PyPayrollTypes")
                        .WithMany("PyPayrollOperations")
                        .HasForeignKey("PyPayrollTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusLkpPyPayrollCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceHd.ArInvoiceHd", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArInvoiceHd")
                        .HasForeignKey("ArCustomerId");

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ArInvoiceHd")
                        .HasForeignKey("CurrancyId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesArInvoiceHdSourceLkp")
                        .WithMany("FndLookupValuesArInvoiceHdSourceLkp")
                        .HasForeignKey("SourceLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesArInvoiceHdStatusLkp")
                        .WithMany("FndLookupValuesArInvoiceHdStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceTr.ArInvoiceTr", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ArInvoiceTr")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System.__PmPropertiesModule._ArInvoiceHd.ArInvoiceHd", "ArInvoiceHd")
                        .WithMany("ArInvoiceTr")
                        .HasForeignKey("ArInvoiceHdId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmContracts.FmBuildingsContracts", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._FmContracts.FmContracts", "FmContracts")
                        .WithMany("FmBuildingsContracts")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany()
                        .HasForeignKey("PmPropertiesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmContracts.FmContractVisits", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._FmContracts.FmContracts", "FmContracts")
                        .WithMany("FmContractVisits")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._FmEngineers.FmEngineers", "FmEngineers")
                        .WithMany()
                        .HasForeignKey("EngineerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmContracts.FmContracts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AccounGlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AdvGlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AdvAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "PaymentTypesValues")
                        .WithMany()
                        .HasForeignKey("PaymentTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StatusValues")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApVendors.ApVendors", "ApVendorsValues")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmEngineers.FmEngineers", b =>
                {
                    b.HasOne("ERP._System.__HR._HrPersons.HrPersons", "HrPersons")
                        .WithMany("FmEngineers")
                        .HasForeignKey("HrPersonsId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FmEngineers")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmMaintRequisitionsExe.FmMaintRequisitionsExe", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._FmEngineers.FmEngineers", "FmEngineers")
                        .WithMany("FmMaintRequisitionsExe")
                        .HasForeignKey("EngineerId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndExecuteTypeLkp")
                        .WithMany()
                        .HasForeignKey("ExecuteTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._FmContracts.FmContractVisits", "FmContractVisits")
                        .WithMany("FmMaintRequisitionsExe")
                        .HasForeignKey("FmContractVisitsId");

                    b.HasOne("ERP._System.__PmPropertiesModule._FmContracts.FmContracts", "FmContracts")
                        .WithMany("FmMaintRequisitionsExe")
                        .HasForeignKey("FmContractsId");

                    b.HasOne("ERP._System.__PmPropertiesModule._FmMaintRequisitionsHdr.FmMaintRequisitionsHdr", "FmMaintRequisitionsHdr")
                        .WithMany()
                        .HasForeignKey("FmMaintRequisitionsHdrId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._FmMaintRequisitionsHdr.FmMaintRequisitionsHdr", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndComplaintTypeLkp")
                        .WithMany()
                        .HasForeignKey("ComplaintTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("FmMaintRequisitionsHdr")
                        .HasForeignKey("PmPropertiesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndRequisitionStatusLkp")
                        .WithMany()
                        .HasForeignKey("RequisitionStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", "PmPropertiesUnits")
                        .WithMany("FmMaintRequisitionsHdr")
                        .HasForeignKey("UnitId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndUnitTypeLkp")
                        .WithMany()
                        .HasForeignKey("UnitTypeLkpId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmCancellationContracts.PmCancellationContracts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("PmCancellationContracts")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmCancellationContracts")
                        .HasForeignKey("PmContractId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("PmCancellationContracts")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContract.PmContract", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentContractId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndActivityLkp")
                        .WithMany("PmActivityLkpCollection")
                        .HasForeignKey("PmActivityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentNoLkp")
                        .WithMany("PmPaymentNoLkpCollection")
                        .HasForeignKey("PmPaymentNoLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", "PmTenants")
                        .WithMany("PmContract")
                        .HasForeignKey("PmTenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndUnitTypeLkp")
                        .WithMany("PmUnitTypeLkpCollection")
                        .HasForeignKey("PmUnitTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmContract")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("PmStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractAttachments.PmContractAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmContractAttachments")
                        .HasForeignKey("PmContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractPayments.PmContractPayments", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndBankLkp")
                        .WithMany("PmBankLkpCollection")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentTypeLkp")
                        .WithMany("PmPaymentTypeLkpCollection")
                        .HasForeignKey("PaymentTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmContractPayments")
                        .HasForeignKey("PmContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractUnitDetails.PmContractUnitDetails", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmContractUnitDetails")
                        .HasForeignKey("PmContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", "PmPropertiesUnits")
                        .WithMany("PmContractUnitDetails")
                        .HasForeignKey("PropertiesUnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherContractPayments.PmOtherContractPayments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmOtherPaymentTypes.PmOtherPaymentTypes", "PmOtherPaymentTypes")
                        .WithMany("PmOtherContractPayments")
                        .HasForeignKey("OtherPaymentTypesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmOtherContractPayments")
                        .HasForeignKey("PmContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherPaymentTypes.PmOtherPaymentTypes", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("PmOtherPaymentTypes")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComAccount")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "CashAccount")
                        .WithMany()
                        .HasForeignKey("CashAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("CityFndLookupValuesCollection")
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany("CountryyFndLookupValuesCollection")
                        .HasForeignKey("CountryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComCurrentAccount")
                        .WithMany()
                        .HasForeignKey("CurrentAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNationalityLkp")
                        .WithMany("NationalityFndLookupValuesCollection")
                        .HasForeignKey("NationalityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("StatusFndLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwnersTaxDetails", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPmActivityTypeLkp")
                        .WithMany("PmActivityLookupValuesCollection")
                        .HasForeignKey("PmActivityTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", "PmOwner")
                        .WithMany("PmOwnersTaxesDetails")
                        .HasForeignKey("PmOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("FndCityLkpCollection")
                        .HasForeignKey("CityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCommissionTypeLkp")
                        .WithMany("FndCommissionTypeLkpCollection")
                        .HasForeignKey("CommissionTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany("FndCountryLkpCollection")
                        .HasForeignKey("CountryLkpId");

                    b.HasOne("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", "PmOwners")
                        .WithMany("PmProperties")
                        .HasForeignKey("PmOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPmPurposeLkp")
                        .WithMany("FndPmPurposeLkpCollection")
                        .HasForeignKey("PmPurposeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndPmPropertiesStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesAttachments.PmPropertiesAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmPropertiesAttachments")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesRevenueAccounts.PmPropertiesRevenueAccounts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AccountGlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AdvanceAccountGlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AdvanceAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmPropertiesRevenueAccounts")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndFinishesLkp")
                        .WithMany("FndFinishesLkpCollection")
                        .HasForeignKey("FinishesLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPmUnitDescLkp")
                        .WithMany("FndPmUnitDescLkp")
                        .HasForeignKey("PmUnitDescLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndUnitTypeLkp")
                        .WithMany("FndUnitTypeLkpCollection")
                        .HasForeignKey("PmUnitTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmPropertiesUnits")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndPmPropertiesUnitsStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndViewLkp")
                        .WithMany("FndViewLkpCollection")
                        .HasForeignKey("ViewLkpId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnitsAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", "PmPropertiesUnits")
                        .WithMany("PmPropertiesUnitsAttachments")
                        .HasForeignKey("PmPropertiesUnitstId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("PmTenantCityFndLookupValuesCollection")
                        .HasForeignKey("CityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany("PmTenantCountryyFndLookupValuesCollection")
                        .HasForeignKey("CountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndMaritalStatusLkp")
                        .WithMany("PmTenantMaritalStatusLookupValuesCollection")
                        .HasForeignKey("MaritalStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNationalityLkp")
                        .WithMany("PmTenantNationalityFndLookupValuesCollection")
                        .HasForeignKey("NationalityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPassportCountryLkp")
                        .WithMany("PmTenantPassportCountryFndLookupValuesCollection")
                        .HasForeignKey("PassportCountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentMethodLkp")
                        .WithMany("PmTenantPaymentMethodLookupValuesCollection")
                        .HasForeignKey("PaymentMethodLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSpecialGenderLkp")
                        .WithMany("PmTenantSpecialGenderFndLookupValuesCollection")
                        .HasForeignKey("SpecialGenderLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("PmTenantStatusFndLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenantsAttachments.PmTenantsAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", "PmTenants")
                        .WithMany("PmTenantsAttachments")
                        .HasForeignKey("PmTenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTerminateContracts.PmTerminateContracts", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmTerminateContracts")
                        .HasForeignKey("PmContractId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPmTerminateContractsStatusLkp")
                        .WithMany("PmTerminateContracts")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementCr", b =>
                {
                    b.HasOne("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementHd", "ArInvoiceSettlementHd")
                        .WithMany("ArInvoiceSettlementCr")
                        .HasForeignKey("ArInvoiceSettlementHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementDr", b =>
                {
                    b.HasOne("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementHd", "ArInvoiceSettlementHd")
                        .WithMany("ArInvoiceSettlementDr")
                        .HasForeignKey("ArInvoiceSettlementHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SalesModule.ArInvoiceSettlement.ArInvoiceSettlementHd", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArInvoiceSettlementHdCollection")
                        .HasForeignKey("ArCustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("ArInvoiceSettlementHdCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvReturnSaleHd.IvReturnSaleHd", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SalesModule._IvSaleHd.IvSaleHd", "IvSaleHd")
                        .WithMany()
                        .HasForeignKey("IvSaleHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvReturnSaleHd.IvReturnSaleTr", b =>
                {
                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxType")
                        .WithMany()
                        .HasForeignKey("FndTaxtypeId");

                    b.HasOne("ERP._System.__SalesModule._IvReturnSaleHd.IvReturnSaleHd", "IvReturnSaleHd")
                        .WithMany("IvReturnSaleTrs")
                        .HasForeignKey("IvReturnSaleHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SalesModule._IvSaleHd.IvSaleTr", "IvSaleTr")
                        .WithMany()
                        .HasForeignKey("IvSaleTrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvSaleHd.IvSaleHd", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany()
                        .HasForeignKey("ArCustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SalesModule._FndSalesMen.FndSalesMen", "FndSalesMen")
                        .WithMany()
                        .HasForeignKey("FndSalesMenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvPriceListHd.IvPriceListHd", "IvPriceListHd")
                        .WithMany()
                        .HasForeignKey("IvPriceListHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "IvWarehouses")
                        .WithMany()
                        .HasForeignKey("IvWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SalesModule._IvSaleHd.IvSaleTr", b =>
                {
                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxType")
                        .WithMany()
                        .HasForeignKey("FndTaxtypeId");

                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "IvItems")
                        .WithMany()
                        .HasForeignKey("IvItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SalesModule._IvSaleHd.IvSaleHd", "IvSaleHd")
                        .WithMany("IvSaleTrs")
                        .HasForeignKey("IvSaleHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupCityValues")
                        .WithMany("FndBenefCityLkpCollection")
                        .HasForeignKey("CityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupFirstTitleValues")
                        .WithMany("FndBenefFirstTitleLkpCollection")
                        .HasForeignKey("FirstTitleLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupGenderValues")
                        .WithMany("FndBenefGenderLkpCollection")
                        .HasForeignKey("GenderLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupLastTitleValues")
                        .WithMany("FndBenefLastTitleLkpCollection")
                        .HasForeignKey("LastTitleLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupNationalityValues")
                        .WithMany("FndBenefNationalityLkpCollection")
                        .HasForeignKey("NationalityLkpId");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficentAttachments", b =>
                {
                    b.HasOne("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", "Beneficent")
                        .WithMany("SpBeneficentAttachments")
                        .HasForeignKey("SpBeneficentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficentBanks", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "LookupBankValues")
                        .WithMany()
                        .HasForeignKey("BankLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", "Beneficent")
                        .WithMany("SpBeneficentBanks")
                        .HasForeignKey("SpBeneficentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCaseHistory.SpCaseHistory", b =>
                {
                    b.HasOne("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", "SpBeneficent")
                        .WithMany("SpCaseHistory")
                        .HasForeignKey("BeneficentId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCaseStatusLkp")
                        .WithMany("FndCaseStatusLkpCollection")
                        .HasForeignKey("CaseStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndOperationTypeLkp")
                        .WithMany("FndOperationSpCaseHistoryTypeLkpCollection")
                        .HasForeignKey("OperationTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSourceCodeLkp")
                        .WithMany()
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System.__SpGuarantees._SpCases.SpCases", "SpCases")
                        .WithMany("SpCaseHistory")
                        .HasForeignKey("SpCaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCases.SpCases", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesEducationalLevelLkp")
                        .WithMany("FndLookupValuesEducationalLevelLkp")
                        .HasForeignKey("EducationalLevelLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesEducationalStageLkp")
                        .WithMany("FndLookupValuesEducationalStageLkp")
                        .HasForeignKey("EducationalStageLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesGenderLkp")
                        .WithMany("FndLookupValuesGenderLkp")
                        .HasForeignKey("GenderLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesHealthStatusLkp")
                        .WithMany("FndLookupValuesHealthStatusLkp")
                        .HasForeignKey("HealthStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesMaritalStatusLkp")
                        .WithMany("FndLookupValuesMaritalStatusLkp")
                        .HasForeignKey("MaritalStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesNationalityLkp")
                        .WithMany("FndLookupValuesNationalityLkp")
                        .HasForeignKey("NationalityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesRelativesTypeLkp")
                        .WithMany()
                        .HasForeignKey("RelativesTypeLkpId");

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", "SpContractDetails")
                        .WithOne()
                        .HasForeignKey("ERP._System.__SpGuarantees._SpCases.SpCases", "SpContractDetailsId");

                    b.HasOne("ERP._System.__SpGuarantees._SpFamilies.SpFamilies", "SpFamilies")
                        .WithMany("SpCases")
                        .HasForeignKey("SpFamilyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSponsorCategoryLkp")
                        .WithMany("FndLookupValuesSponsorCategoryLkp")
                        .HasForeignKey("SponsorCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("FndLookupValuesStatusLkpSP")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCases._SpCaseOperations.SpCaseOperations", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndOperationTypeLkp")
                        .WithMany("FndOperationTypeLkpCollection")
                        .HasForeignKey("OperationTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndReasonLkp")
                        .WithMany("FndReasonLkpCollection")
                        .HasForeignKey("ReasonLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", "SpContractDetails")
                        .WithMany("SpCaseOperationsCollection")
                        .HasForeignKey("SpContractDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", "NewwSpContractDetails")
                        .WithMany("SpCaseOperationsNewCollection")
                        .HasForeignKey("SpNewContractDetailsId");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpCasesAttachments.SpCasesAttachments", b =>
                {
                    b.HasOne("ERP._System.__SpGuarantees._SpCases.SpCases", "SpCase")
                        .WithMany("SpCasesAttachments")
                        .HasForeignKey("SpCaseId");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpContracts.SpContracts", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndDeductedLkp")
                        .WithMany("FndDeductedLkp")
                        .HasForeignKey("DeductedLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentTypeLkp")
                        .WithMany("FndPaymentTypeLkp")
                        .HasForeignKey("PaymentTypeLkpId");

                    b.HasOne("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficent", "SpBeneficent")
                        .WithMany()
                        .HasForeignKey("SpBeneficentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpContracts._SpContractAttachments.SpContractAttachments", b =>
                {
                    b.HasOne("ERP._System.__SpGuarantees._SpContracts.SpContracts", "SpContracts")
                        .WithMany("SpContractAttachments")
                        .HasForeignKey("SpContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndBankLkp")
                        .WithMany()
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCaseStatusLkp")
                        .WithMany()
                        .HasForeignKey("CaseStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpBeneficent.SpBeneficentBanks", "SpBeneficentBanks")
                        .WithMany()
                        .HasForeignKey("SpBeneficentBankId");

                    b.HasOne("ERP._System.__SpGuarantees._SpCases.SpCases", "SpCases")
                        .WithMany()
                        .HasForeignKey("SpCaseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts.SpContracts", "SpContracts")
                        .WithMany("SpContractDetails")
                        .HasForeignKey("SpContractId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpFamilies.SpFamilies", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndBankLkp")
                        .WithMany("FndBankLkpCollection")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("FndCityLkpSpFamiliesCollection")
                        .HasForeignKey("CityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndHousingStatusLkp")
                        .WithMany("FndHousingStatusLkpCollection")
                        .HasForeignKey("HousingStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndHousingTypeLkp")
                        .WithMany("FndHousingTypeLkpCollection")
                        .HasForeignKey("HousingTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndMaritalStatusLkp")
                        .WithMany("FndMaritalStatusLkpCollection")
                        .HasForeignKey("MaritalStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNationalityLkp")
                        .WithMany("FndNationalityLkpCollection")
                        .HasForeignKey("NationalityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndRelativesTypeLkp")
                        .WithMany("FndRelativesTypeLkpCollection")
                        .HasForeignKey("RelativesTypeLkpId");
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpFamilyDuties.SpFamilyDuties", b =>
                {
                    b.HasOne("ERP._System.__SpGuarantees._SpFamilies.SpFamilies", "SpFamilies")
                        .WithMany("SpFamilyDuties")
                        .HasForeignKey("SpFamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpFamilyIncomes.SpFamilyIncomes", b =>
                {
                    b.HasOne("ERP._System.__SpGuarantees._SpFamilies.SpFamilies", "SpFamilies")
                        .WithMany("SpFamilyIncomes")
                        .HasForeignKey("SpFamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPaymentSetting.SpPaymentSetting", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSponsorCategoryLkp")
                        .WithMany("SpPaymentSetting")
                        .HasForeignKey("SponsorCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpCasesPaymentDeserving", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCaseStatusLkp")
                        .WithMany("SpCasesPaymentDeservingFndCaseStatusLkp")
                        .HasForeignKey("CaseStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "DeservingPeriod")
                        .WithMany("SpCasesPaymentDeserving")
                        .HasForeignKey("DeservingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", "SpContractDetails")
                        .WithMany("SpCasesPaymentDeserving")
                        .HasForeignKey("SpContractDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("SpCasesPaymentDeservingFndStatusLkp")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpPaymentPersonDetails", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "Period")
                        .WithMany("SpPaymentPersonDetails")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpPayments.SpCasesPaymentDeserving", "SpCasesPaymentDeserving")
                        .WithMany("SpPaymentPersonDetails")
                        .HasForeignKey("SpCasesPaymentDeservingId");

                    b.HasOne("ERP._System.__SpGuarantees._SpContracts._SpContractDetails.SpContractDetails", "SpContractDetails")
                        .WithMany("SpPaymentPersonDetails")
                        .HasForeignKey("SpContractDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpPayments.SpPaymentPersons", "SpPaymentPersons")
                        .WithMany("SpPaymentPersonDetails")
                        .HasForeignKey("SpPaymentPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpPaymentPersons", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCaseStatusLkp")
                        .WithMany()
                        .HasForeignKey("CaseStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpCases.SpCases", "SpCases")
                        .WithMany("SpPaymentPersons")
                        .HasForeignKey("SpCaseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpPayments.SpPayments", "SpPayments")
                        .WithMany("SpPaymentPersons")
                        .HasForeignKey("SpPaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSponsorCategoryLkp")
                        .WithMany()
                        .HasForeignKey("SponsorCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__SpGuarantees._SpPayments.SpPayments", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "FromPeriod")
                        .WithMany("SpPaymentsFromPeriod")
                        .HasForeignKey("FromPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__SpGuarantees._SpCases.SpCases", "SpCases")
                        .WithMany("SpPayments")
                        .HasForeignKey("SpCaseId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSponsorCategoryLkp")
                        .WithMany("SpPaymentsFndSponsorCategoryLkp")
                        .HasForeignKey("SponsorCategoryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("SpPaymentsFndStatusLkp")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "ToPeriod")
                        .WithMany("SpPaymentsToPeriod")
                        .HasForeignKey("ToPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses.IvWarehouses", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("IvWarehouses")
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvAdjustmentHd.IvAdjustmentHd", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesAdjustmentTypeLkp")
                        .WithMany("FndLookupValuesAdjustmentTypeLkp")
                        .HasForeignKey("AdjustmentTypeLkpId");

                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "IvWarehouses")
                        .WithMany("IvAdjustmentHd")
                        .HasForeignKey("IvWarehouseId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkpIvAdjustmentHd")
                        .WithMany("FndLookupValuesStatusLkpIvAdjustmentHd")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvAdjustmentHd._IvAdjustmentTr.IvAdjustmentTr", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvAdjustmentHd.IvAdjustmentHd", "IvAdjustmentHd")
                        .WithMany("IvAdjustmentTr")
                        .HasForeignKey("IvAdjustmentHdId");

                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "IvItems")
                        .WithMany("IvAdjustmentTr")
                        .HasForeignKey("IvItemId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvInventorySetting.IvInventorySetting", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvInventorySetting.IvInventorySettingPriceList", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvInventorySetting.IvInventorySetting", "IvInventorySetting")
                        .WithMany()
                        .HasForeignKey("IvInventorySettingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvPriceListHd.IvPriceListHd", "IvPriceListHd")
                        .WithMany()
                        .HasForeignKey("IvPriceListHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvItems.IvItems", b =>
                {
                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxType")
                        .WithMany()
                        .HasForeignKey("FndTaxtypeId");

                    b.HasOne("ERP._System.__Warehouses._IvItemsTypesConfigure.IvItemsTypesConfigure", "IvItemsTypesConfigure")
                        .WithMany("IvItems")
                        .HasForeignKey("IvItemsTypesConfigureId");

                    b.HasOne("ERP._System.__Warehouses._IvUnits.IvUnits", "IvUnits")
                        .WithMany("IvItems")
                        .HasForeignKey("IvUnitId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany()
                        .HasForeignKey("TaxPercentageLkpId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvItemsTypesConfigure.IvItemsTypesConfigure", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvItemsTypesConfigure.IvItemsTypesConfigure", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvPriceListHd.IvPriceListTr", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "IvItems")
                        .WithMany()
                        .HasForeignKey("IvItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvPriceListHd.IvPriceListHd", "IvPriceListHd")
                        .WithMany()
                        .HasForeignKey("IvPriceListHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReceiveHd.IvReceiveHd", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("IvReceiveHd")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "IvWarehouses")
                        .WithMany("IvReceiveHd")
                        .HasForeignKey("IvWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderHd", "PoPurchaseOrderHd")
                        .WithMany("IvReceiveHd")
                        .HasForeignKey("PoPurchaseOrderHdId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndStatusIvReceiveHdLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApVendors.ApVendors", "ApVendors")
                        .WithMany("IvReceiveHd")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReceiveHd._IvReceiveTr.IvReceiveTr", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "IvItems")
                        .WithMany("IvReceiveTr")
                        .HasForeignKey("IvItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvReceiveHd.IvReceiveHd", "IvReceiveHd")
                        .WithMany("IvReceiveTr")
                        .HasForeignKey("IvReceiveHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvUnits.IvUnits", "IvUnits")
                        .WithMany("IvReceiveTr")
                        .HasForeignKey("IvUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderTr", "PoPurchaseOrderTr")
                        .WithMany("IvReceiveTr")
                        .HasForeignKey("PoPurchaseOrderTrId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReturnReceiveHd.IvReturnReceiveHd", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvReceiveHd.IvReceiveHd", "IvReceiveHd")
                        .WithMany()
                        .HasForeignKey("IvReceiveHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvReturnReceiveHd.IvReturnReceiveTr", b =>
                {
                    b.HasOne("ERP._System._FndTaxType.FndTaxType", "FndTaxType")
                        .WithMany()
                        .HasForeignKey("FndTaxtypeId");

                    b.HasOne("ERP._System.__Warehouses._IvReceiveHd._IvReceiveTr.IvReceiveTr", "IvReceiveTr")
                        .WithMany()
                        .HasForeignKey("IvReceiveTrId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvReturnReceiveHd.IvReturnReceiveHd", "IvReturnReceiveHd")
                        .WithMany("IvReturnReceiveTrs")
                        .HasForeignKey("IvReturnReceiveHdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvStoreIssue.IvStoreIssueHd", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesBeneficiaryTypeLkp")
                        .WithMany()
                        .HasForeignKey("BeneficiaryTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesIssueTypeLkp")
                        .WithMany()
                        .HasForeignKey("IssueTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "Warehouses")
                        .WithMany()
                        .HasForeignKey("IvWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvStoreIssue.IvStoreIssueTr", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "Items")
                        .WithMany()
                        .HasForeignKey("IvItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvStoreIssue.IvStoreIssueHd", "StoreIssue")
                        .WithMany("IvStoreIssueTrs")
                        .HasForeignKey("IvStoreIssueHdId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._IvUnits.IvUnits", "Units")
                        .WithMany()
                        .HasForeignKey("IvUnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvUserWarehousesPrivileges.IvUserWarehousesPrivileges", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvInventorySetting.IvInventorySetting", "IvInventorySetting")
                        .WithMany()
                        .HasForeignKey("IvInventorySettingId");

                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "IvWarehouses")
                        .WithMany("IvUserWarehousesPrivileges")
                        .HasForeignKey("IvWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithMany("IvUserWarehousesPrivileges")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._IvWarehouseItems.IvWarehouseItems", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "IvItems")
                        .WithMany("IvWarehouseItems")
                        .HasForeignKey("IvItemId");

                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "IvWarehouses")
                        .WithMany("IvWarehouseItems")
                        .HasForeignKey("IvWarehouseId");
                });

            modelBuilder.Entity("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderHd", b =>
                {
                    b.HasOne("ERP._System.__Warehouses.IvWarehouses", "Warehouses")
                        .WithMany()
                        .HasForeignKey("IvWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ApVendors.ApVendors", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderTr", b =>
                {
                    b.HasOne("ERP._System.__Warehouses._IvItems.IvItems", "Items")
                        .WithMany()
                        .HasForeignKey("IvItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__Warehouses._PoPurchaseOrder.PoPurchaseOrderHd", "PurchaseOrder")
                        .WithMany("PoPurchaseOrderTrs")
                        .HasForeignKey("PoPurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__Warehouses._PyElements.PyElements", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "CrGlCodeComDetailsDebitAccount")
                        .WithMany("PyElementsDebitAccount")
                        .HasForeignKey("DebitAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesElementTypeLkp")
                        .WithMany("PyElements")
                        .HasForeignKey("ElementTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._modules.Page", b =>
                {
                    b.HasOne("ERP._System._modules.Module", "Module")
                        .WithMany("Pages")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasOne("ERP.Authorization.Roles.Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
