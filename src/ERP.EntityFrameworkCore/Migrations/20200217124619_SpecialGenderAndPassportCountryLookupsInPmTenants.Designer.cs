// <auto-generated />
using System;
using ERP.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP.Migrations
{
    [DbContext(typeof(ERPDbContext))]
    [Migration("20200217124619_SpecialGenderAndPassportCountryLookupsInPmTenants")]
    partial class SpecialGenderAndPassportCountryLookupsInPmTenants
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Abp.Application.Editions.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AbpEditions");
                });

            modelBuilder.Entity("Abp.Application.Features.FeatureSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FeatureSetting");
                });

            modelBuilder.Entity("Abp.Auditing.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<string>("CustomData")
                        .HasMaxLength(2000);

                    b.Property<string>("Exception")
                        .HasMaxLength(2000);

                    b.Property<int>("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime");

                    b.Property<int?>("ImpersonatorTenantId");

                    b.Property<long?>("ImpersonatorUserId");

                    b.Property<string>("MethodName")
                        .HasMaxLength(256);

                    b.Property<string>("Parameters")
                        .HasMaxLength(1024);

                    b.Property<string>("ReturnValue");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionDuration");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpAuditLogs");
                });

            modelBuilder.Entity("Abp.Authorization.PermissionSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("IsGranted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256);

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpRoleClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.Property<long?>("UserLinkId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("UserName");

                    b.HasIndex("TenantId", "EmailAddress");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "UserName");

                    b.ToTable("AbpUserAccounts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256);

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpUserClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLoginAttempt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<byte>("Result");

                    b.Property<string>("TenancyName")
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.Property<string>("UserNameOrEmailAddress")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UserId", "TenantId");

                    b.HasIndex("TenancyName", "UserNameOrEmailAddress", "Result");

                    b.ToTable("AbpUserLoginAttempts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserOrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("OrganizationUnitId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "RoleId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserRoles");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireDate");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.Property<string>("Value")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserTokens");
                });

            modelBuilder.Entity("Abp.BackgroundJobs.BackgroundJobInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsAbandoned");

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576);

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime?>("LastTryTime");

                    b.Property<DateTime>("NextTryTime");

                    b.Property<byte>("Priority");

                    b.Property<short>("TryCount");

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs");
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.Property<string>("Value")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "Name", "UserId")
                        .IsUnique();

                    b.ToTable("AbpSettings");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeTime");

                    b.Property<byte>("ChangeType");

                    b.Property<long>("EntityChangeSetId");

                    b.Property<string>("EntityId")
                        .HasMaxLength(48);

                    b.Property<string>("EntityTypeFullName")
                        .HasMaxLength(192);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeSetId");

                    b.HasIndex("EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChangeSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("ExtensionData");

                    b.Property<int?>("ImpersonatorTenantId");

                    b.Property<long?>("ImpersonatorUserId");

                    b.Property<string>("Reason")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "CreationTime");

                    b.HasIndex("TenantId", "Reason");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpEntityChangeSets");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EntityChangeId");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512);

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512);

                    b.Property<string>("PropertyName")
                        .HasMaxLength(96);

                    b.Property<string>("PropertyTypeFullName")
                        .HasMaxLength(192);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Icon")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDisabled");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpLanguages");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguageText", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(67108864);

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Source", "LanguageName", "Key");

                    b.ToTable("AbpLanguageTexts");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("ExcludedUserIds")
                        .HasMaxLength(131072);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96);

                    b.Property<byte>("Severity");

                    b.Property<string>("TenantIds")
                        .HasMaxLength(131072);

                    b.Property<string>("UserIds")
                        .HasMaxLength(131072);

                    b.HasKey("Id");

                    b.ToTable("AbpNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .HasMaxLength(96);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.HasIndex("TenantId", "NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.ToTable("AbpNotificationSubscriptions");
                });

            modelBuilder.Entity("Abp.Notifications.TenantNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96);

                    b.Property<byte>("Severity");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AbpTenantNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.UserNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("State");

                    b.Property<int?>("TenantId");

                    b.Property<Guid>("TenantNotificationId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "State", "CreationTime");

                    b.ToTable("AbpUserNotifications");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("ParentId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "Code");

                    b.ToTable("AbpOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnitRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("OrganizationUnitId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "RoleId");

                    b.ToTable("AbpOrganizationUnitRoles");
                });

            modelBuilder.Entity("ERP.Authorization.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsStatic");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedName");

                    b.ToTable("AbpRoles");
                });

            modelBuilder.Entity("ERP.Authorization.Users.PortalUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("BirthDate");

                    b.Property<long>("CityLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("GenderLkpId");

                    b.Property<DateTime>("IdExpirationDate");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife2")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife3")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife4")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWifeHusband1")
                        .HasMaxLength(50);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("MaritalStatusLkpId");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<string>("Name");

                    b.Property<long>("NationalityLkpId");

                    b.Property<string>("PhoneNumber");

                    b.Property<long?>("QualificationLkpId");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long>("UserId");

                    b.Property<string>("WifeHusbandName1")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName2")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName3")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("QualificationLkpId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PortalUsers");
                });

            modelBuilder.Entity("ERP.Authorization.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("AuthenticationSource")
                        .HasMaxLength(64);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("EmailConfirmationCode")
                        .HasMaxLength(328);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEmailConfirmed");

                    b.Property<bool>("IsLockoutEnabled");

                    b.Property<bool>("IsPhoneNumberConfirmed");

                    b.Property<bool>("IsPortalUser");

                    b.Property<bool>("IsTwoFactorEnabled");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("LockoutEndDateUtc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("NormalizedEmailAddress")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("PasswordResetCode")
                        .HasMaxLength(328);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32);

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(128);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedEmailAddress");

                    b.HasIndex("TenantId", "NormalizedUserName");

                    b.ToTable("AbpUsers");
                });

            modelBuilder.Entity("ERP.Currencies.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AndNameAr")
                        .HasMaxLength(20);

                    b.Property<string>("AndNameEn")
                        .HasMaxLength(20);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsLocalCurrency");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LastWordAr")
                        .HasMaxLength(50);

                    b.Property<string>("LastWordEn")
                        .HasMaxLength(50);

                    b.Property<string>("MainCurrencyNameAr")
                        .HasMaxLength(50);

                    b.Property<string>("MainCurrencyNameEn")
                        .HasMaxLength(50);

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("SubCurrencyNameAr")
                        .HasMaxLength(50);

                    b.Property<string>("SubCurrencyNameEn")
                        .HasMaxLength(50);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ERP.MultiTenancy.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int?>("EditionId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("TenancyName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int?>("TenantDetailId");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("EditionId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenancyName");

                    b.HasIndex("TenantDetailId");

                    b.ToTable("AbpTenants");
                });

            modelBuilder.Entity("ERP.MultiTenancy.TenantDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxNo")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(100);

                    b.Property<string>("Tel")
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.Property<string>("TenantNameAr")
                        .HasMaxLength(100);

                    b.Property<string>("TenantNameEn")
                        .HasMaxLength(100);

                    b.Property<string>("WebSite")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantDetails");
                });

            modelBuilder.Entity("ERP._System._ApBankAccounts.ApBankAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<long?>("ApPdcCollAccountId");

                    b.Property<string>("BankAccountNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BankAccountNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("BankId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PdcCollAccountId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("cPdcAccountId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ApPdcCollAccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PdcCollAccountId");

                    b.HasIndex("cPdcAccountId");

                    b.ToTable("ApBankAccounts");
                });

            modelBuilder.Entity("ERP._System._ApBanks.ApBanks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BankNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("BankTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankTypeLkpId");

                    b.ToTable("ApBanks");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentDetails.ApMiscPaymentDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(200);

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<long?>("MiscPaymentId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("MiscPaymentId");

                    b.ToTable("ApMiscPaymentDetails");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AccPayeeOnly")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndLookupValuesId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MiscPaymentDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("PaymentNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("PaymentTypeLkpId");

                    b.Property<long?>("PostedlkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("FndLookupValuesId");

                    b.HasIndex("PaymentTypeLkpId");

                    b.HasIndex("PostedlkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.ToTable("ApMiscPaymentHeaders");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentLines.ApMiscPaymentLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal?>("MiscPaymentAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("MiscPaymentId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("TaxAccountId");

                    b.Property<string>("TaxNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("TaxPercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("MiscPaymentId");

                    b.HasIndex("TaxAccountId");

                    b.ToTable("ApMiscPaymentLines");
                });

            modelBuilder.Entity("ERP._System._ApPdcInterface.ApPdcInterface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("ChqReturnResonLKPId");

                    b.Property<DateTime?>("ConfirmedDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("ReversedDate");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("ChqReturnResonLKPId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ApPdcInterface");
                });

            modelBuilder.Entity("ERP._System._ApUserBankAccess.ApUserBankAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsPrimaryCash")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("ApUserBankAccess");
                });

            modelBuilder.Entity("ERP._System._ApVendors.ApVendors", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long>("VendorCategoryLkpId");

                    b.Property<string>("VendorNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("VendorNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("VendorNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(200);

                    b.Property<string>("WorkTel")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("VendorCategoryLkpId");

                    b.ToTable("ApVendors");
                });

            modelBuilder.Entity("ERP._System._ArCustomers.ArCustomers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("CreditLimit")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CustomerNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CustomerNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("CustomerNumber");

                    b.Property<long>("CustomerTypeLkpId");

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<string>("HomeTel")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Website")
                        .HasMaxLength(200);

                    b.Property<string>("WorkTel")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArCustomers");
                });

            modelBuilder.Entity("ERP._System._ArDrCrHd.ArDrCrHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArCustomerId");

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("HdDate");

                    b.Property<string>("HdDrCrNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("HdTypeLkpId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("SourceLkpId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ArCustomerId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("HdTypeLkpId");

                    b.HasIndex("SourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArDrCrHd");
                });

            modelBuilder.Entity("ERP._System._ArDrCrTr.ArDrCrTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ArDrCrHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ArDrCrHdId");

                    b.ToTable("ArDrCrTr");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptDetails.ArMiscReceiptDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<long?>("MiscReceiptId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("MiscReceiptId");

                    b.ToTable("ArMiscReceiptDetails");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("BeneficentId");

                    b.Property<long?>("CollectorId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualReceiptNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("MiscReceiptDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("PostedLkpId");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("TransactionTypeLkpId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BeneficentId");

                    b.HasIndex("CollectorId");

                    b.HasIndex("PostedLkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("TransactionTypeLkpId");

                    b.ToTable("ArMiscReceiptHeaders");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptLines.ArMiscReceiptLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("AdministrativePercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("CaseId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualReceiptNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("MiscReceiptAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("MiscReceiptId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("ReceiptTypeLkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("MiscReceiptId");

                    b.HasIndex("ReceiptTypeLkpId");

                    b.HasIndex("SourceCodeLkpId");

                    b.ToTable("ArMiscReceiptLines");
                });

            modelBuilder.Entity("ERP._System._ArPdcInterface.ArPdcInterface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ConfirmedDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CustomerId");

                    b.Property<long?>("DepositBankAccountId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("ReversedDate");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<string>("SourceNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BankLkpId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DepositBankAccountId");

                    b.HasIndex("SourceCodeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ArPdcInterface");
                });

            modelBuilder.Entity("ERP._System._Counters.Counters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CounterName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("CounterTypeLkp");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("ERP._System._CountersDetails.CountersDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CounterId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<long>("Value");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("CounterId");

                    b.ToTable("CountersDetails");
                });

            modelBuilder.Entity("ERP._System._FndCollectors.FndCollectors", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollectorNameAr")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CollectorNameEn")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("CollectorNumber");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("FndCollectors");
                });

            modelBuilder.Entity("ERP._System._FndLookupValues.FndLookupValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedValues");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LookupCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LookupType")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("NameAr")
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<bool>("YesNo");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("FndLookupValues");
                });

            modelBuilder.Entity("ERP._System._GlAccDetails.GlAccDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("GlAccHeaderId");

                    b.Property<bool>("IsDefault");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("GlAccHeaderId");

                    b.HasIndex("ParentId");

                    b.ToTable("GlAccDetails");
                });

            modelBuilder.Entity("ERP._System._GlAccHeaders.GlAccHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AttributeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsHide");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long?>("ParentId");

                    b.Property<int>("ShowOrder");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AttributeLkpId");

                    b.HasIndex("ParentId");

                    b.ToTable("GlAccHeaders");
                });

            modelBuilder.Entity("ERP._System._GlAccounts.GlAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Assets")
                        .HasColumnType("bit");

                    b.Property<bool>("BalanceSheet")
                        .HasColumnType("bit");

                    b.Property<bool>("CashFlow")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("Expense")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<bool>("Libility")
                        .HasColumnType("bit");

                    b.Property<long>("NatureOfAccountLkpId");

                    b.Property<long?>("ParentId");

                    b.Property<string>("ParentPath")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<bool>("ProfitLoss")
                        .HasColumnType("bit");

                    b.Property<bool>("Revenue")
                        .HasColumnType("bit");

                    b.Property<int>("TenantId");

                    b.Property<bool>("TrialBalance")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NatureOfAccountLkpId");

                    b.HasIndex("ParentId");

                    b.ToTable("GlAccounts");
                });

            modelBuilder.Entity("ERP._System._GlCodeComDetails.GlCodeComDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccId");

                    b.Property<long?>("Attribute1");

                    b.Property<long?>("Attribute2");

                    b.Property<long?>("Attribute3");

                    b.Property<long?>("Attribute4");

                    b.Property<long?>("Attribute5");

                    b.Property<long?>("Attribute6");

                    b.Property<long?>("Attribute7");

                    b.Property<long?>("Attribute8");

                    b.Property<long?>("Attribute9");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.ToTable("GlCodeComDetails");
                });

            modelBuilder.Entity("ERP._System._GlJeHeaders.GlJeHeaders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("JeDate");

                    b.Property<string>("JeName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("JeNotes")
                        .HasMaxLength(4000);

                    b.Property<string>("JeNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long?>("JeSourceId");

                    b.Property<long?>("JeSourceLkpId");

                    b.Property<string>("JeSourceNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PeriodId");

                    b.Property<long?>("PostedBy");

                    b.Property<DateTime?>("PostedDate");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("UnPostedBy");

                    b.Property<DateTime?>("UnPostedDate");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("JeSourceLkpId");

                    b.HasIndex("PeriodId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("GlJeHeaders");
                });

            modelBuilder.Entity("ERP._System._GlJeLines.GlJeLines", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("GlJeHeaderId");

                    b.Property<long?>("JeDtlSourceLkpId");

                    b.Property<long?>("JeSourceId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("GlJeHeaderId");

                    b.HasIndex("JeDtlSourceLkpId");

                    b.ToTable("GlJeLines");
                });

            modelBuilder.Entity("ERP._System._GlMainAccounts.GlMainAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("GlMainAccounts");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("EndDate");

                    b.Property<long>("GlPeriodsYearsId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PeriodNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PeriodNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("StartDate");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("GlPeriodsYearsId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("GlPeriodsDetails");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsYears", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("EndDate");

                    b.Property<long?>("JeId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("PeriodYear");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("GlPeriodsYears");
                });

            modelBuilder.Entity("ERP._System._Portal.PortalUserRelatives", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long>("GenderLkpId");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<long>("NationalityLkpId");

                    b.Property<long>("PortalUserId");

                    b.Property<long>("QualificationLkpId");

                    b.Property<long>("RelativesTypeLkpId");

                    b.HasKey("Id");

                    b.HasIndex("GenderLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("PortalUserId");

                    b.HasIndex("QualificationLkpId");

                    b.HasIndex("RelativesTypeLkpId");

                    b.ToTable("PortalUserRelatives");
                });

            modelBuilder.Entity("ERP._System._ScCampainsAid.ScCampainsAid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AidAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("AidName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long>("CampainsAidCategoryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CampainsAidCategoryLkpId");

                    b.ToTable("ScCampainsAid");
                });

            modelBuilder.Entity("ERP._System._ScComityMembers.ScComityMembers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("MemberCategoryLkpId");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("MemberNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("MemberCategoryLkpId");

                    b.ToTable("ScComityMembers");
                });

            modelBuilder.Entity("ERP._System._SpBeneficent.SpBeneficent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeneficentNameAr")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("BeneficentNameEN")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("BeneficentNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("SpBeneficent");
                });

            modelBuilder.Entity("ERP._System.__AidModule._FndSpell.FndSpell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("HunsAr")
                        .HasMaxLength(30);

                    b.Property<string>("HunsEn")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("OnesAr")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("OnesEn")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.Property<string>("TensAr")
                        .HasMaxLength(30);

                    b.Property<string>("TensEn")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("FndSpell");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampains.ScCampains", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampainName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CampainNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("ScCampainDate");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCampains");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampainsDetail.ScCampainsDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CampainAidId");

                    b.Property<long>("CampainId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PortalFndUsersId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CampainAidId");

                    b.HasIndex("CampainId");

                    b.HasIndex("PortalFndUsersId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCampainsDetail");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommittee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommitteeDate");

                    b.Property<string>("CommitteeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CommitteeNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndLookupValuesId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("ScPortalRequestStudyId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("FndLookupValuesId");

                    b.HasIndex("ScPortalRequestStudyId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCommittees");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AidAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CashingTo")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long>("CommitteeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("NoOfMonths");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("RequestStudyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("RequestStudyId");

                    b.ToTable("ScCommitteeDetails");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeMemberDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CommitteeId");

                    b.Property<long>("CommitteeMemberId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("CommitteeMemberId");

                    b.ToTable("ScCommitteeMemberDetail");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheck.ScCommitteesCheck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankAccountId");

                    b.Property<long>("CommitteeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FndLookupValuesId");

                    b.Property<string>("FromCheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("OperationDate");

                    b.Property<string>("OperationNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("FndLookupValuesId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScCommitteesCheck");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheckDetails.ScCommitteesCheckDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("CommitteeDetailsId");

                    b.Property<long?>("CommitteesCheckId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeDetailsId");

                    b.HasIndex("CommitteesCheckId");

                    b.ToTable("ScCommitteesCheckDetails");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AidRequestTypeLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AidRequestTypeLkpId");

                    b.ToTable("ScFndAidRequestType");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndPortalIntervalSetting.ScFndPortalIntervalSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("NumberOfRequest");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("Id");

                    b.ToTable("ScFndPortalIntervalSetting");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndProtalAttachmentSetting.ScFndProtalAttachmentSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("AttachmentNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsRequired");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OrderBy");

                    b.Property<long>("RequestTypeId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("ScFndProtalAttachmentSetting");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<long>("AidRequestTypeId");

                    b.Property<string>("City");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("IdExpirationDate");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife2")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife3")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWife4")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumberWifeHusband1")
                        .HasMaxLength(50);

                    b.Property<string>("IncomeSource")
                        .HasMaxLength(4000);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MaritalStatus");

                    b.Property<string>("MobileNumber1")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(50);

                    b.Property<decimal>("MonthlyIncomeAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("MonthlyOutcomeAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("PortalRequestDate");

                    b.Property<string>("PortalRequestNumber")
                        .HasMaxLength(30);

                    b.Property<long>("PortalUsersId");

                    b.Property<string>("Qualification");

                    b.Property<string>("Region");

                    b.Property<long>("SourceLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("WifeHusbandName1")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName2")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName3")
                        .HasMaxLength(200);

                    b.Property<string>("WifeName4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("AidRequestTypeId");

                    b.HasIndex("PortalUsersId");

                    b.HasIndex("SourceLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScPortalRequests");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PortalRequestId");

                    b.Property<long>("ProtalAttachmentSettingId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("ProtalAttachmentSettingId");

                    b.ToTable("ScPortalRequestAttachments");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("CashingTo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("DecisionDate");

                    b.Property<string>("DecisionNumer")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("PortalRequestStudyId");

                    b.Property<string>("RefuseDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("RefuseLkpId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestStudyId");

                    b.HasIndex("RefuseLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScPortalRequestMgrDecision");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CashingTo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PortalRequestId");

                    b.Property<string>("RefuseDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("RefuseLkpId");

                    b.Property<string>("ResearcherDecision")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<long?>("StatusLkpId");

                    b.Property<DateTime?>("StudyDate");

                    b.Property<string>("StudyDetails")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("StudyNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("RefuseLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("ScPortalRequestStudy");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudyAttachment.ScPortalRequestStudyAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PortalRequestStudyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestStudyId");

                    b.ToTable("ScPortalRequestStudyAttachment");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestVisited.ScPortalRequestVisited", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("PortalRequestId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("VisitDate");

                    b.Property<long>("VisitStatusLkpId");

                    b.HasKey("Id");

                    b.HasIndex("PortalRequestId");

                    b.HasIndex("VisitStatusLkpId");

                    b.ToTable("ScPortalRequestVisited");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceHd.ArInvoiceHd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArCustomerId");

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CurrancyId");

                    b.Property<decimal?>("CurrancyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("HdDate");

                    b.Property<string>("HdInvoiceNo")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("SourceLkpId");

                    b.Property<string>("SourceNo")
                        .HasMaxLength(30);

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ArInvoiceHd");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceTr.ArInvoiceTr", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ArInvoiceHdId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ArInvoiceHdId");

                    b.ToTable("ArInvoiceTr");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArReceiptDetails.ArReceiptDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("ReceiptId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ArReceiptDetails");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArReceipts.ArReceipts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArCustomerId");

                    b.Property<long?>("BankAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CurrencyId");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ManualReceiptNo")
                        .HasMaxLength(30);

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("ReceiptDate");

                    b.Property<string>("ReceiptNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("RemitanceBankId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ArReceipts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArReceiptsOnAccount.ArReceiptsOnAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("ApplyDate");

                    b.Property<long?>("ArCustomerId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("ReceiptId");

                    b.Property<long?>("ReceiptTypeLkpId");

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ArReceiptsOnAccount");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArSecurityDepositInterface.ArSecurityDepositInterface", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("ArCustomerId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("FineAccountId");

                    b.Property<decimal?>("FineAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("SecurityDepositInterfaceNumber")
                        .HasMaxLength(30);

                    b.Property<long?>("SourceCodeLkpId");

                    b.Property<long?>("SourceId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ArSecurityDepositInterface");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmCancellationContracts.PmCancellationContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<DateTime?>("CancellationDate");

                    b.Property<string>("CancellationNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("FineAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int?>("FinePeriodPerDays");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PmContractId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("PmCancellationContracts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContract.PmContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condition1")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition2")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition3")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition4")
                        .HasMaxLength(4000);

                    b.Property<string>("Condition5")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("ContractDate");

                    b.Property<DateTime?>("ContractEndDate");

                    b.Property<DateTime?>("ContractEndDatePrint");

                    b.Property<string>("ContractNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ContractStartDate");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("InsuranceAmount");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("ParentContractId");

                    b.Property<long?>("PmActivityLkpId");

                    b.Property<long?>("PmPaymentTypeLkpId");

                    b.Property<long?>("PmTenantId");

                    b.Property<long?>("PmUnitTypeLkpId");

                    b.Property<long?>("PropertyId");

                    b.Property<decimal?>("RentAmount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long?>("StatusLkpId");

                    b.Property<string>("TaxNo")
                        .HasMaxLength(100);

                    b.Property<decimal?>("TaxPercent")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("PmContract");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractAttachments.PmContractAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("PmContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmContractAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractPayments.PmContractPayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<long?>("BankLkpId");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(30);

                    b.Property<string>("Comments")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("MaturityDate");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<int?>("PaymentNo");

                    b.Property<long?>("PaymentSourceLkpID");

                    b.Property<long?>("PaymentTypeLkpId");

                    b.Property<long?>("PmContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmContractPayments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractUnitDetails.PmContractUnitDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PmContractId");

                    b.Property<long?>("PropertiesUnitId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmContractUnitDetails");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherContractPayments.PmOtherContractPayments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("OtherPaymentTypesId");

                    b.Property<long?>("PmContractId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmContractId");

                    b.ToTable("PmOtherContractPayments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherPaymentTypes.PmOtherPaymentTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PaymentTypeName")
                        .HasMaxLength(200);

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("PmOtherPaymentTypes");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId");

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<long?>("BankAccountId");

                    b.Property<long?>("CashAccountId");

                    b.Property<long>("CityLkpId");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200);

                    b.Property<long>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("CurrentAccountId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<string>("HomePhoneNumber")
                        .HasMaxLength(32);

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<bool>("IsMainOwner");

                    b.Property<string>("JobName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(32);

                    b.Property<long>("NationalityLkpId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<string>("OtherAddress")
                        .HasMaxLength(4000);

                    b.Property<string>("OwnerNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("OwnerNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("OwnerNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PoBox")
                        .HasMaxLength(100);

                    b.Property<long>("StatusLkpId");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("TenantId");

                    b.Property<string>("Website")
                        .HasMaxLength(256);

                    b.Property<string>("WorkPhoneNumber")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CashAccountId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("CurrentAccountId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmOwners");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwnersTaxDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmActivityTypeLkpId");

                    b.Property<long>("PmOwnerId");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmActivityTypeLkpId");

                    b.HasIndex("PmOwnerId");

                    b.ToTable("PmOwnersTaxDetails");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<long>("BankAccountId");

                    b.Property<long>("CityLkpId");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("CommissionTypeLkpId");

                    b.Property<DateTime?>("CompletionDate");

                    b.Property<long>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("LandNumber")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MilkiyaNumber")
                        .HasMaxLength(30);

                    b.Property<int?>("NoOfFloors");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long>("PmOwnerId");

                    b.Property<long?>("PmPurposeLkpId");

                    b.Property<string>("PropertyNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PropertyNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PropertyNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<decimal?>("PropertyValue")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Region")
                        .HasMaxLength(200);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("CommissionTypeLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("PmOwnerId");

                    b.HasIndex("PmPurposeLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmProperties");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesAttachments.PmPropertiesAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PropertyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PmPropertiesAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesRevenueAccounts.PmPropertiesRevenueAccounts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<long>("AdvanceAccountId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<long>("PropertyId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AdvanceAccountId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PmPropertiesRevenueAccounts");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaSize")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<string>("ElectricityNumber")
                        .HasMaxLength(30);

                    b.Property<long>("FinishesLkpId");

                    b.Property<int>("FloorLevel");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmUnitTypeLkpId");

                    b.Property<long>("PropertyId");

                    b.Property<string>("SewerageNumber")
                        .HasMaxLength(30);

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("UnitNo")
                        .HasMaxLength(30);

                    b.Property<long>("ViewLkpId");

                    b.Property<decimal>("YearlyRent")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("Id");

                    b.HasIndex("FinishesLkpId");

                    b.HasIndex("PmUnitTypeLkpId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("StatusLkpId");

                    b.HasIndex("ViewLkpId");

                    b.ToTable("PmPropertiesUnits");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(4000);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<long?>("CityLkpId");

                    b.Property<DateTime?>("CommercialLicenseExpiryDate");

                    b.Property<string>("CommercialLicenseNumber")
                        .HasMaxLength(100);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200);

                    b.Property<long?>("CountryLkpId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(256);

                    b.Property<string>("Fax")
                        .HasMaxLength(32);

                    b.Property<string>("HomePhoneNumber")
                        .HasMaxLength(32);

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50);

                    b.Property<string>("JobName")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("MaritalStatusLkpId");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(32);

                    b.Property<long?>("NationalityLkpId");

                    b.Property<string>("OtherAddress")
                        .HasMaxLength(4000);

                    b.Property<long?>("PassportCountryLkpId");

                    b.Property<DateTime?>("PassportExpiryDate");

                    b.Property<DateTime?>("PassportIssueDate");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100);

                    b.Property<long?>("PaymentMethodLkpId");

                    b.Property<string>("PoBox")
                        .HasMaxLength(100);

                    b.Property<string>("Region")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ResidenceEndDate");

                    b.Property<long?>("SpecialGenderLkpId");

                    b.Property<long>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<string>("TenantNameAr")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TenantNameEn")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TenantNumber")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Website")
                        .HasMaxLength(256);

                    b.Property<string>("WorkPhoneNumber")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CityLkpId");

                    b.HasIndex("CountryLkpId");

                    b.HasIndex("MaritalStatusLkpId");

                    b.HasIndex("NationalityLkpId");

                    b.HasIndex("PassportCountryLkpId");

                    b.HasIndex("PaymentMethodLkpId");

                    b.HasIndex("SpecialGenderLkpId");

                    b.HasIndex("StatusLkpId");

                    b.ToTable("PmTenants");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenantsAttachments.PmTenantsAttachments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long>("PmTenantId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("PmTenantId");

                    b.ToTable("PmTenantsAttachments");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTerminateContracts.PmTerminateContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<decimal?>("FineAmount");

                    b.Property<bool?>("IsTransferDepositToCustomer");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000);

                    b.Property<long?>("PmContractId");

                    b.Property<long?>("StatusLkpId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime?>("TerminationDate");

                    b.Property<string>("TerminationNumber")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("PmTerminateContracts");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.Property<int>("EditionId");

                    b.HasIndex("EditionId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("EditionFeatureSetting");
                });

            modelBuilder.Entity("Abp.MultiTenancy.TenantFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("TenantFeatureSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<int>("RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("RolePermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<long>("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("UserPermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.HasOne("ERP.Authorization.Roles.Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Settings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChangeSet")
                        .WithMany("EntityChanges")
                        .HasForeignKey("EntityChangeSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChange")
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.HasOne("Abp.Organizations.OrganizationUnit", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP.Authorization.Roles.Role", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("ERP.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("ERP.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("ERP.Authorization.Users.PortalUser", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "CityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "GenderFndLookupValues")
                        .WithMany()
                        .HasForeignKey("GenderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "MaritalStatusFndLookupValues")
                        .WithMany()
                        .HasForeignKey("MaritalStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "NationalityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("NationalityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "QualificationFndLookupValues")
                        .WithMany()
                        .HasForeignKey("QualificationLkpId");

                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithOne("portalUser")
                        .HasForeignKey("ERP.Authorization.Users.PortalUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Authorization.Users.User", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("ERP.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("ERP.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("ERP.MultiTenancy.Tenant", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("ERP.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("ERP.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.HasOne("ERP.MultiTenancy.TenantDetail", "TenantDetail")
                        .WithMany()
                        .HasForeignKey("TenantDetailId");
                });

            modelBuilder.Entity("ERP.MultiTenancy.TenantDetail", b =>
                {
                    b.HasOne("ERP.MultiTenancy.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ApBankAccounts.ApBankAccounts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ApBankAccountsDtl")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsApPdcCollAccount")
                        .WithMany("ApBankAccountsApPdcCollAccount")
                        .HasForeignKey("ApPdcCollAccountId");

                    b.HasOne("ERP._System._ApBanks.ApBanks", "ApBanks")
                        .WithMany("ApBankAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ApBankAccounts")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsPdcCollAccount")
                        .WithMany("ApBankAccountsPdcCollAccount")
                        .HasForeignKey("PdcCollAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailscPdcAccount")
                        .WithMany("ApBankAccountscPdcAccount")
                        .HasForeignKey("cPdcAccountId");
                });

            modelBuilder.Entity("ERP._System._ApBanks.ApBanks", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ApBanks")
                        .HasForeignKey("BankTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentDetails.ApMiscPaymentDetails", b =>
                {
                    b.HasOne("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", "ApMiscPaymentHeaders")
                        .WithMany("ApMiscPaymentDetails")
                        .HasForeignKey("MiscPaymentId");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApMiscPaymentHeaders")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues")
                        .WithMany("ApMiscPaymentHeadersCollection")
                        .HasForeignKey("FndLookupValuesId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPaymentTypeLkp")
                        .WithMany("ApMiscPaymentHeadersTypeLkp")
                        .HasForeignKey("PaymentTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPostedPaymentLkp")
                        .WithMany("ApMiscPaymentHeadersPostedLkp")
                        .HasForeignKey("PostedlkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodePaymentLkp")
                        .WithMany("ApMiscPaymentHeadersSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");
                });

            modelBuilder.Entity("ERP._System._ApMiscPaymentLines.ApMiscPaymentLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ApMiscPaymentLinesAccount")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._ApMiscPaymentHeaders.ApMiscPaymentHeaders", "ApMiscPaymentHeaders")
                        .WithMany("ApMiscPaymentLines")
                        .HasForeignKey("MiscPaymentId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetailsTaxAccount")
                        .WithMany("ApMiscPaymentLinesTaxAccount")
                        .HasForeignKey("TaxAccountId");
                });

            modelBuilder.Entity("ERP._System._ApPdcInterface.ApPdcInterface", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApPdcInterfaceBankAccount")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesChqReturnResonLKP")
                        .WithMany("ApPdcInterfaceChqReturnResonLKP")
                        .HasForeignKey("ChqReturnResonLKPId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ApPdcInterfaceSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("ApPdcInterfaceStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._ApUserBankAccess.ApUserBankAccess", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ApUserBankAccess")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP.Authorization.Users.User", "User")
                        .WithMany("ApUserBankAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ApVendors.ApVendors", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ApVendorsLkp")
                        .HasForeignKey("StatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesVendorCategoryLkp")
                        .WithMany("ApVendorCategoryLkp")
                        .HasForeignKey("VendorCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ArCustomers.ArCustomers", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesCustType")
                        .WithMany("ArCustomersCustType")
                        .HasForeignKey("CustomerTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ArCustomersLkp")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ArDrCrHd.ArDrCrHd", b =>
                {
                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArDrCrHd")
                        .HasForeignKey("ArCustomerId");

                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("ArDrCrHd")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesHdTypeLkp")
                        .WithMany("FndLookupValuesHdTypeLkpArDrCrHd")
                        .HasForeignKey("HdTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceLkp")
                        .WithMany("FndLookupValuesSourceLkpArDrCrHd")
                        .HasForeignKey("SourceLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("FndLookupValuesStatusLkpArDrCrHd")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._ArDrCrTr.ArDrCrTr", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ArDrCrTr")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._ArDrCrHd.ArDrCrHd", "ArDrCrHd")
                        .WithMany("ArDrCrTr")
                        .HasForeignKey("ArDrCrHdId");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptDetails.ArMiscReceiptDetails", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ArMiscReceiptDetails")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ArMiscReceiptDetails")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", "ArMiscReceiptHeaders")
                        .WithMany("ArMiscReceiptDetails")
                        .HasForeignKey("MiscReceiptId");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ArMiscReceiptHeaders")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._SpBeneficent.SpBeneficent", "SpBeneficent")
                        .WithMany("ArMiscReceiptHeaders")
                        .HasForeignKey("BeneficentId");

                    b.HasOne("ERP._System._FndCollectors.FndCollectors", "FndCollectors")
                        .WithMany("ArMiscReceiptHeaders")
                        .HasForeignKey("CollectorId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesPostedLkp")
                        .WithMany("ArMiscReceiptHeadersPostedLkp")
                        .HasForeignKey("PostedLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ArMiscReceiptHeadersSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesTransactionTypeLkp")
                        .WithMany("ArMiscReceiptHeadersTransactionTypeLkp")
                        .HasForeignKey("TransactionTypeLkpId");
                });

            modelBuilder.Entity("ERP._System._ArMiscReceiptLines.ArMiscReceiptLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("ArMiscReceiptLines")
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._ArMiscReceiptHeaders.ArMiscReceiptHeaders", "ArMiscReceiptHeaders")
                        .WithMany("ArMiscReceiptLines")
                        .HasForeignKey("MiscReceiptId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesReceiptTypeLkp")
                        .WithMany("ArMiscReceiptLinesReceiptTypeLkp")
                        .HasForeignKey("ReceiptTypeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ArMiscReceiptLinesSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");
                });

            modelBuilder.Entity("ERP._System._ArPdcInterface.ArPdcInterface", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesBankLkp")
                        .WithMany("ArPdcInterfaceBankLkp")
                        .HasForeignKey("BankLkpId");

                    b.HasOne("ERP._System._ArCustomers.ArCustomers", "ArCustomers")
                        .WithMany("ArPdcInterface")
                        .HasForeignKey("CustomerId");

                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "DepositApBankAccounts")
                        .WithMany("ArPdcInterfaceDeposit")
                        .HasForeignKey("DepositBankAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceCodeLkp")
                        .WithMany("ArPdcInterfaceSourceCodeLkp")
                        .HasForeignKey("SourceCodeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("ArPdcInterfaceStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._CountersDetails.CountersDetails", b =>
                {
                    b.HasOne("ERP._System._Counters.Counters", "Counters")
                        .WithMany("CountersDetails")
                        .HasForeignKey("CounterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._FndLookupValues.FndLookupValues", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlAccDetails.GlAccDetails", b =>
                {
                    b.HasOne("ERP._System._GlAccHeaders.GlAccHeaders", "GlAccHeader")
                        .WithMany("GlAccDetails")
                        .HasForeignKey("GlAccHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccDetails.GlAccDetails", "GlAccDetail")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlAccHeaders.GlAccHeaders", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlAccHeaders")
                        .HasForeignKey("AttributeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccHeaders.GlAccHeaders", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlAccounts.GlAccounts", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlAccounts")
                        .HasForeignKey("NatureOfAccountLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlAccounts.GlAccounts", "GlAccount")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("ERP._System._GlCodeComDetails.GlCodeComDetails", b =>
                {
                    b.HasOne("ERP._System._GlAccounts.GlAccounts", "GlAccounts")
                        .WithMany("GlCodeComDetails")
                        .HasForeignKey("AccId");
                });

            modelBuilder.Entity("ERP._System._GlJeHeaders.GlJeHeaders", b =>
                {
                    b.HasOne("ERP.Currencies.Currency", "Currency")
                        .WithMany("GlJeHeaders")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "JeSourceFndLookupValues")
                        .WithMany("JeSourceGlJeHeaders")
                        .HasForeignKey("JeSourceLkpId");

                    b.HasOne("ERP._System._GlPeriods.GlPeriodsDetails", "GlPeriodsDetails")
                        .WithMany("GlJeHeaders")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "StatusFndLookupValues")
                        .WithMany("StatusGlJeHeaders")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._GlJeLines.GlJeLines", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlJeLines")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlJeHeaders.GlJeHeaders", "GlJeHeaders")
                        .WithMany("GlJeLines")
                        .HasForeignKey("GlJeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "JeSourceFndLookupValues")
                        .WithMany("GlJeLines")
                        .HasForeignKey("JeDtlSourceLkpId");
                });

            modelBuilder.Entity("ERP._System._GlMainAccounts.GlMainAccounts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlMainAccounts")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsDetails", b =>
                {
                    b.HasOne("ERP._System._GlPeriods.GlPeriodsYears", "GlPeriodsYears")
                        .WithMany("GlPeriodsDetails")
                        .HasForeignKey("GlPeriodsYearsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlPeriodsDetails")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System._GlPeriods.GlPeriodsYears", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("GlPeriodsYears")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._Portal.PortalUserRelatives", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "GenderFndLookupValues")
                        .WithMany()
                        .HasForeignKey("GenderLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "NationalityFndLookupValues")
                        .WithMany()
                        .HasForeignKey("NationalityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalUser")
                        .WithMany("Relatives")
                        .HasForeignKey("PortalUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "QualificationFndLookupValues")
                        .WithMany()
                        .HasForeignKey("QualificationLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "RelativesFndLookupValues")
                        .WithMany()
                        .HasForeignKey("RelativesTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ScCampainsAid.ScCampainsAid", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCampainsAid")
                        .HasForeignKey("CampainsAidCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System._ScComityMembers.ScComityMembers", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("GlCodeComDetails")
                        .HasForeignKey("MemberCategoryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampains.ScCampains", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCampains")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCampainsDetail.ScCampainsDetail", b =>
                {
                    b.HasOne("ERP._System._ScCampainsAid.ScCampainsAid", "ScCampainsAid")
                        .WithMany("ScCampainsDetails")
                        .HasForeignKey("CampainAidId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScCampains.ScCampains", "ScCampains")
                        .WithMany("ScCampainsDetails")
                        .HasForeignKey("CampainId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalFndUsers")
                        .WithMany("ScCampainsDetail")
                        .HasForeignKey("PortalFndUsersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCampainsDetail")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommittee", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues")
                        .WithMany("ScCommitteeCollection")
                        .HasForeignKey("FndLookupValuesId");

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy")
                        .WithMany("ScCommittee")
                        .HasForeignKey("ScPortalRequestStudyId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupStatusValues")
                        .WithMany("ScCommitteeLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "Committee")
                        .WithMany("CommitteeDetails")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", "RequestStudy")
                        .WithMany()
                        .HasForeignKey("RequestStudyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommittee.ScCommitteeMemberDetail", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "Committee")
                        .WithMany("CommitteeMembersDetails")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._ScComityMembers.ScComityMembers", "Member")
                        .WithMany()
                        .HasForeignKey("CommitteeMemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheck.ScCommitteesCheck", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany("ScCommitteesCheck")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommittee", "ScCommittee")
                        .WithMany("ScCommitteesCheck")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues")
                        .WithMany("ScCommitteesCheckCollection")
                        .HasForeignKey("FndLookupValuesId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScCommitteesCheckLookupValuesCollection")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScCommitteesCheckDetails.ScCommitteesCheckDetails", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScCommittee.ScCommitteeDetail", "ScCommitteeDetail")
                        .WithMany("ScCommitteesCheckDetails")
                        .HasForeignKey("CommitteeDetailsId");

                    b.HasOne("ERP._System.__AidModule._ScCommitteesCheck.ScCommitteesCheck", "ScCommitteesCheck")
                        .WithMany("ScCommitteesCheckDetails")
                        .HasForeignKey("CommitteesCheckId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScFndAidRequestType")
                        .HasForeignKey("AidRequestTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScFndProtalAttachmentSetting.ScFndProtalAttachmentSetting", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", "ScFndAidRequestType")
                        .WithMany("ScFndProtalAttachmentSetting")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScFndAidRequestType.ScFndAidRequestType", "AidRequestType")
                        .WithMany()
                        .HasForeignKey("AidRequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Authorization.Users.PortalUser", "PortalUser")
                        .WithMany("ScPortalRequest")
                        .HasForeignKey("PortalUsersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesSourceLkp")
                        .WithMany()
                        .HasForeignKey("SourceLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany()
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequest.ScPortalRequestAttachment", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequest")
                        .WithMany("Attachments")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__AidModule._ScFndProtalAttachmentSetting.ScFndProtalAttachmentSetting", "GetScFndProtalAttachmentSetting")
                        .WithMany()
                        .HasForeignKey("ProtalAttachmentSettingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestMgrDecision.ScPortalRequestMgrDecision", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", "ScPortalRequestStudy")
                        .WithMany("ScPortalRequestMgrDecision")
                        .HasForeignKey("PortalRequestStudyId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesRefuseLkpId")
                        .WithMany("FndLookupValuesRefuseLkpId")
                        .HasForeignKey("RefuseLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkpId")
                        .WithMany("FndLookupValuesStatusLkpId")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequest")
                        .WithMany("ScPortalRequestStudy")
                        .HasForeignKey("PortalRequestId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesRefuseLkp")
                        .WithMany("FndLookupValuesRefuseLkp")
                        .HasForeignKey("RefuseLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValuesStatusLkp")
                        .WithMany("FndLookupValuesStatusLkp")
                        .HasForeignKey("StatusLkpId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestStudyAttachment.ScPortalRequestStudyAttachment", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequestStudy.ScPortalRequestStudy", "ScPortalRequestStudy")
                        .WithMany("ScPortalRequestStudyAttachment")
                        .HasForeignKey("PortalRequestStudyId");
                });

            modelBuilder.Entity("ERP._System.__AidModule._ScPortalRequestVisited.ScPortalRequestVisited", b =>
                {
                    b.HasOne("ERP._System.__AidModule._ScPortalRequest.ScPortalRequest", "ScPortalRequests")
                        .WithMany("ScPortalRequestVisited")
                        .HasForeignKey("PortalRequestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndLookupValues")
                        .WithMany("ScPortalRequestVisited")
                        .HasForeignKey("VisitStatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArInvoiceTr.ArInvoiceTr", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._ArInvoiceHd.ArInvoiceHd", "ArInvoiceHd")
                        .WithMany("ArInvoiceTr")
                        .HasForeignKey("ArInvoiceHdId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArReceiptDetails.ArReceiptDetails", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._ArReceipts.ArReceipts", "ArReceipts")
                        .WithMany("ArReceiptDetails")
                        .HasForeignKey("ReceiptId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._ArReceiptsOnAccount.ArReceiptsOnAccount", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._ArReceipts.ArReceipts", "ArReceipts")
                        .WithMany("ArReceiptsOnAccount")
                        .HasForeignKey("ReceiptId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractAttachments.PmContractAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmContractAttachments")
                        .HasForeignKey("PmContractId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractPayments.PmContractPayments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmContractPayments")
                        .HasForeignKey("PmContractId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmContractUnitDetails.PmContractUnitDetails", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmContractUnitDetails")
                        .HasForeignKey("PmContractId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherContractPayments.PmOtherContractPayments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmContract.PmContract", "PmContract")
                        .WithMany("PmOtherContractPayments")
                        .HasForeignKey("PmContractId");
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOtherPaymentTypes.PmOtherPaymentTypes", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComDetails")
                        .WithMany("PmOtherPaymentTypes")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComAccount")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComBankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComCashAccount")
                        .WithMany()
                        .HasForeignKey("CashAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("CityFndLookupValuesCollection")
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany("CountryyFndLookupValuesCollection")
                        .HasForeignKey("CountryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "GlCodeComCurrentAccount")
                        .WithMany()
                        .HasForeignKey("CurrentAccountId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNationalityLkp")
                        .WithMany("NationalityFndLookupValuesCollection")
                        .HasForeignKey("NationalityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("StatusFndLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmOwners.PmOwnersTaxDetails", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPmActivityTypeLkp")
                        .WithMany("PmActivityLookupValuesCollection")
                        .HasForeignKey("PmActivityTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", "PmOwner")
                        .WithMany("PmOwnersTaxesDetails")
                        .HasForeignKey("PmOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", b =>
                {
                    b.HasOne("ERP._System._ApBankAccounts.ApBankAccounts", "ApBankAccounts")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("FndCityLkpCollection")
                        .HasForeignKey("CityLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCommissionTypeLkp")
                        .WithMany("FndCommissionTypeLkpCollection")
                        .HasForeignKey("CommissionTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany("FndCountryLkpCollection")
                        .HasForeignKey("CountryLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmOwners.PmOwners", "PmOwners")
                        .WithMany("PmProperties")
                        .HasForeignKey("PmOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPmPurposeLkp")
                        .WithMany("FndPmPurposeLkpCollection")
                        .HasForeignKey("PmPurposeLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndPmPropertiesStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesAttachments.PmPropertiesAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmPropertiesAttachments")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesRevenueAccounts.PmPropertiesRevenueAccounts", b =>
                {
                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AccountGlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._GlCodeComDetails.GlCodeComDetails", "AdvanceAccountGlCodeComDetails")
                        .WithMany()
                        .HasForeignKey("AdvanceAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmPropertiesRevenueAccounts")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmPropertiesUnits.PmPropertiesUnits", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndFinishesLkp")
                        .WithMany("FndFinishesLkpCollection")
                        .HasForeignKey("FinishesLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndUnitTypeLkp")
                        .WithMany("FndUnitTypeLkpCollection")
                        .HasForeignKey("PmUnitTypeLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System.__PmPropertiesModule._PmProperties.PmProperties", "PmProperties")
                        .WithMany("PmPropertiesUnits")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("FndPmPropertiesUnitsStatusLkpCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndViewLkp")
                        .WithMany("FndViewLkpCollection")
                        .HasForeignKey("ViewLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", b =>
                {
                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCityLkp")
                        .WithMany("PmTenantCityFndLookupValuesCollection")
                        .HasForeignKey("CityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndCountryLkp")
                        .WithMany("PmTenantCountryyFndLookupValuesCollection")
                        .HasForeignKey("CountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndMaritalStatusLkp")
                        .WithMany("PmTenantMaritalStatusLookupValuesCollection")
                        .HasForeignKey("MaritalStatusLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndNationalityLkp")
                        .WithMany("PmTenantNationalityFndLookupValuesCollection")
                        .HasForeignKey("NationalityLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPassportCountryLkp")
                        .WithMany("PmTenantPassportCountryLookupValuesCollection")
                        .HasForeignKey("PassportCountryLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndPaymentMethodLkp")
                        .WithMany("PmTenantPaymentMethodLookupValuesCollection")
                        .HasForeignKey("PaymentMethodLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndSpecialGenderLkp")
                        .WithMany("PmTenantSpecialGenderLookupValuesCollection")
                        .HasForeignKey("SpecialGenderLkpId");

                    b.HasOne("ERP._System._FndLookupValues.FndLookupValues", "FndStatusLkp")
                        .WithMany("PmTenantStatusFndLookupValuesCollection")
                        .HasForeignKey("StatusLkpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP._System.__PmPropertiesModule._PmTenantsAttachments.PmTenantsAttachments", b =>
                {
                    b.HasOne("ERP._System.__PmPropertiesModule._PmTenants.PmTenants", "PmTenants")
                        .WithMany("PmTenantsAttachments")
                        .HasForeignKey("PmTenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasOne("ERP.Authorization.Roles.Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasOne("ERP.Authorization.Users.User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
